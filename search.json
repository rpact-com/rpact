[{"path":"https://rpact-com.github.io/rpact/articles/rpact_getting_started.html","id":"functional-range","dir":"Articles","previous_headings":"","what":"Functional Range","title":"Getting started with rpact","text":"Fixed sample design designs interim analysis stages means (continuous endpoint) rates (binary endpoint) survival trials flexible recruitment survival time options count data Assessment adaptive sample size/event number recalculations based conditional power Assessment treatment selection strategies multi-arm trials Adaptive analysis means, rates, survival data Adaptive designs analysis multi-arm trials Adaptive analysis simulation tools enrichment design testing means, rates, hazard ratios Automatic boundary recalculations trial analysis alpha spending approach, including - -running","code":""},{"path":"https://rpact-com.github.io/rpact/articles/rpact_getting_started.html","id":"learn-to-use-rpact","dir":"Articles","previous_headings":"","what":"Learn to use rpact","title":"Getting started with rpact","text":"recommend three ways learn use rpact: Use Shiny app: shiny.rpact.com Use Vignettes: www.rpact.org/vignettes Book training: www.rpact.com","code":""},{"path":"https://rpact-com.github.io/rpact/articles/rpact_getting_started.html","id":"vignettes","dir":"Articles","previous_headings":"Learn to use rpact","what":"Vignettes","title":"Getting started with rpact","text":"vignettes hosted www.rpact.org/vignettes cover following topics: Defining Group Sequential Boundaries rpact Designing Group Sequential Trials Two Groups Continuous Endpoint rpact Designing Group Sequential Trials Binary Endpoint rpact Designing Group Sequential Trials Two Groups Survival Endpoint rpact Simulation-Based Design Group Sequential Trials Survival Endpoint rpact Example Illustrate Boundary Re-Calculations Trial rpact Analysis Group Sequential Trial Survival Endpoint using rpact Defining Accrual Time Accrual Intensity rpact use R Generics rpact Create Admirable Plots rpact Comparing Sample Size Power Calculation Results Group Sequential Trial Survival Endpoint: rpact vs. gsDesign Supplementing Enhancing rpact’s Graphical Capabilities ggplot2 Using Inverse Normal Combination Test Analyzing Trial Continuous Endpoint Potential Sample Size Re-Assessment rpact Planning Trial Binary Endpoints rpact Planning Survival Trial rpact Simulation Trial Binary Endpoint Unblinded Sample Size Re-Calculation rpact Create Summaries rpact Create One- Multi-Arm Analysis Result Plots rpact Create One- Multi-Arm Simulation Result Plots rpact Simulating Multi-Arm Designs Continuous Endpoint using rpact Analysis Multi-Arm Design Binary Endpoint using rpact Step--Step rpact Tutorial Planning Analyzing Group-Sequential Multi-Arm Multi-Stage Design Binary Endpoint using rpact Two-arm Analysis Continuous Data Covariates Raw Data using rpact (exclusive) Install Latest rpact Developer Version (exclusive) Delayed Response Designs rpact Sample Size Calculation Count Data","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/articles/rpact_getting_started.html","id":"workflow","dir":"Articles","previous_headings":"User Concept","what":"Workflow","title":"Getting started with rpact","text":"Everything starting design, e.g.: design <- getDesignGroupSequential() Find optimal design parameters help rpact comparison tools: getDesignSet Calculate required sample size, e.g.: getSampleSizeMeans(), getPowerMeans() Simulate specific characteristics adaptive design, e.g.: getSimulationMeans() Collect data, import R create dataset: data <- getDataset() Analyze data: getAnalysisResults(design, data)","code":""},{"path":"https://rpact-com.github.io/rpact/articles/rpact_getting_started.html","id":"focus-on-usability","dir":"Articles","previous_headings":"User Concept","what":"Focus on Usability","title":"Getting started with rpact","text":"important rpact functions intuitive names: getDesign[GroupSequential/InverseNormal/Fisher]() getDesignCharacteristics() getSampleSize[Means/Rates/Survival/Counts]() getPower[Means/Rates/Survival/Counts]() getSimulation[MultiArm/Enrichment]`[Means/Rates/Survival]()` getDataSet() getAnalysisResults() getStageResults() RStudio/Eclipse: auto code completion makes easy use functions.","code":""},{"path":"https://rpact-com.github.io/rpact/articles/rpact_getting_started.html","id":"r-generics","dir":"Articles","previous_headings":"User Concept","what":"R generics","title":"Getting started with rpact","text":"general, everything runs R standard functions always present R: -called R generics, e.g., print, summary, plot, .data.frame, names, length","code":""},{"path":"https://rpact-com.github.io/rpact/articles/rpact_getting_started.html","id":"utilities","dir":"Articles","previous_headings":"User Concept","what":"Utilities","title":"Getting started with rpact","text":"Several utility functions available, e.g. getAccrualTime() getPiecewiseSurvivalTime() getNumberOfSubjects() getEventProbabilities() getPiecewiseExponentialDistribution() survival helper functions conversion pi, lambda median, e.g., getLambdaByMedian() testPackage(): installation qualification client computer company server (via unit tests)","code":""},{"path":"https://rpact-com.github.io/rpact/articles/rpact_getting_started.html","id":"validation","dir":"Articles","previous_headings":"","what":"Validation","title":"Getting started with rpact","text":"Please contact us learn use rpact FDA/GxP-compliant validated corporate computer systems get copy formal validation documentation customized licensed exclusive use company, e.g., fulfill regulatory requirements.","code":""},{"path":"https://rpact-com.github.io/rpact/articles/rpact_getting_started.html","id":"rpact-connect","dir":"Articles","previous_headings":"","what":"RPACT Connect","title":"Getting started with rpact","text":"Connecting insights, downloads, premium support: connect.rpact.com","code":""},{"path":"https://rpact-com.github.io/rpact/articles/rpact_getting_started.html","id":"about","dir":"Articles","previous_headings":"","what":"About","title":"Getting started with rpact","text":"enables design analysis confirmatory adaptive group sequential designs powerful sample size calculator free charge open-source software licensed LGPL-3 particularly, implements methods described recent monograph Wassmer Brannath (2016) information please visit www.rpact.org enterprise software development services technical support rpact package consultancy user training clinical research using R validated software solutions R package development clinical research information please visit www.rpact.com","code":""},{"path":"https://rpact-com.github.io/rpact/articles/rpact_getting_started.html","id":"contact","dir":"Articles","previous_headings":"","what":"Contact","title":"Getting started with rpact","text":"info@rpact.com www.rpact.com/contact","code":""},{"path":"https://rpact-com.github.io/rpact/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gernot Wassmer. Author. Friedrich Pahlke. Author, maintainer. Till Jensen. Contributor. Daniel Sabanes Bove. Contributor. Stephen Schueuerhuis. Contributor. Tobias Muetze. Contributor.","code":""},{"path":"https://rpact-com.github.io/rpact/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wassmer G, Pahlke F (2025). rpact: Confirmatory Adaptive Clinical Trial Design Analysis. doi:10.32614/CRAN.package.rpact, R package version 4.2.0, https://cran.r-project.org/package=rpact.","code":"@Manual{,   title = {rpact: Confirmatory Adaptive Clinical Trial Design and Analysis},   author = {Gernot Wassmer and Friedrich Pahlke},   year = {2025},   note = {R package version 4.2.0},   doi = {10.32614/CRAN.package.rpact},   url = {https://cran.r-project.org/package=rpact}, }"},{"path":"https://rpact-com.github.io/rpact/index.html","id":"rpact-","dir":"","previous_headings":"","what":"Confirmatory Adaptive Clinical Trial Design and Analysis","title":"Confirmatory Adaptive Clinical Trial Design and Analysis","text":"Confirmatory Adaptive Clinical Trial Design, Simulation, Analysis.","code":""},{"path":"https://rpact-com.github.io/rpact/index.html","id":"functional-range","dir":"","previous_headings":"","what":"Functional Range","title":"Confirmatory Adaptive Clinical Trial Design and Analysis","text":"Fixed sample design designs interim analysis stages means (continuous endpoint) rates (binary endpoint) survival trials flexible recruitment survival time options count data Assessment adaptive sample size/event number recalculations based conditional power Assessment treatment selection strategies multi-arm trials Adaptive analysis means, rates, survival data Adaptive designs analysis multi-arm trials Adaptive analysis simulation tools enrichment design testing means, rates, hazard ratios Automatic boundary recalculations trial analysis alpha spending approach, including - -running","code":""},{"path":"https://rpact-com.github.io/rpact/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Confirmatory Adaptive Clinical Trial Design and Analysis","text":"Install latest CRAN release via","code":"install.packages(\"rpact\")"},{"path":"https://rpact-com.github.io/rpact/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Confirmatory Adaptive Clinical Trial Design and Analysis","text":"use feature development version, can install development version rpact GitHub.","code":"# install.packages(\"pak\") pak::pak(\"rpact-com/rpact\")"},{"path":"https://rpact-com.github.io/rpact/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Confirmatory Adaptive Clinical Trial Design and Analysis","text":"documentation hosted www.rpact.org","code":""},{"path":"https://rpact-com.github.io/rpact/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Confirmatory Adaptive Clinical Trial Design and Analysis","text":"vignettes hosted www.rpact.org/vignettes","code":""},{"path":"https://rpact-com.github.io/rpact/index.html","id":"rpact-connect","dir":"","previous_headings":"","what":"RPACT Connect","title":"Confirmatory Adaptive Clinical Trial Design and Analysis","text":"Connecting insights, downloads, premium support: connect.rpact.com","code":""},{"path":"https://rpact-com.github.io/rpact/index.html","id":"the-rpact-user-group","dir":"","previous_headings":"","what":"The RPACT User Group","title":"Confirmatory Adaptive Clinical Trial Design and Analysis","text":"rpact project active user group consisting decision-makers users pharmaceutical industry CROs, meet regularly , e.g., discuss best practices. invite part RPACT User Group: benefit know-, shape open source development Pharma!","code":""},{"path":"https://rpact-com.github.io/rpact/index.html","id":"use-on-corporate-computer-systems","dir":"","previous_headings":"","what":"Use on corporate computer systems","title":"Confirmatory Adaptive Clinical Trial Design and Analysis","text":"Please contact us learn use rpact FDA/GxP-compliant validated corporate computer systems get copy formal validation documentation customized licensed exclusive use company, e.g., fulfill regulatory requirements. validation documentation contains personal access data performing installation qualification testPackage(). www.rpact.com/contact","code":""},{"path":"https://rpact-com.github.io/rpact/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Confirmatory Adaptive Clinical Trial Design and Analysis","text":"enables design analysis confirmatory adaptive group sequential designs powerful sample size calculator free charge open-source software licensed LGPL-3 particularly, implements methods described recent monograph Wassmer Brannath (2016) information please visit www.rpact.org enterprise R/Shiny software development services technical support rpact package consultancy user training scientists using R validated software solutions R package development clinical research information please visit www.rpact.com","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AccrualTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Accrual Time — AccrualTime","title":"Accrual Time — AccrualTime","text":"Class definition accrual time accrual intensity.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AccrualTime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accrual Time — AccrualTime","text":"AccrualTime class definition accrual time accrual intensity.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AccrualTime.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Accrual Time — AccrualTime","text":"endOfAccrualIsUserDefined TRUE, end accrual defined user (.e., length accrualTime equal length accrualIntensity -1). logical vector length 1. followUpTimeMustBeUserDefined Specifies whether follow time needs defined . logical vector length 1. maxNumberOfSubjectsIsUserDefined TRUE, maximum number subjects specified user, FALSE, calculated. maxNumberOfSubjectsCanBeCalculatedDirectly TRUE, maximum number subjects can directly calculated. logical vector length 1. absoluteAccrualIntensityEnabled TRUE, absolute accrual intensity enabled. logical vector length 1. accrualTime assumed accrual time intervals study. numeric vector. accrualIntensity absolute accrual intensities. numeric vector length kMax. accrualIntensityRelative relative accrual intensities. maxNumberOfSubjects maximum number subjects power calculations. numeric vector. remainingTime survival designs, remaining time observation. numeric vector length 1. piecewiseAccrualEnabled Indicates whether piecewise accrual selected. logical vector length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Class for Analysis Results — AnalysisResults","title":"Basic Class for Analysis Results — AnalysisResults","text":"basic class analysis results.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic Class for Analysis Results — AnalysisResults","text":"AnalysisResults basic class AnalysisResultsFisher, AnalysisResultsGroupSequential, AnalysisResultsInverseNormal, AnalysisResultsMultiArmFisher, AnalysisResultsMultiArmInverseNormal, AnalysisResultsConditionalDunnett, AnalysisResultsEnrichmentFisher, AnalysisResultsEnrichmentInverseNormal.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsConditionalDunnett.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis Results Multi-Arm Conditional Dunnett — AnalysisResultsConditionalDunnett","title":"Analysis Results Multi-Arm Conditional Dunnett — AnalysisResultsConditionalDunnett","text":"Class multi-arm analysis results based conditional Dunnett test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsConditionalDunnett.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis Results Multi-Arm Conditional Dunnett — AnalysisResultsConditionalDunnett","text":"object created directly; use getAnalysisResults suitable arguments create multi-arm analysis results conditional Dunnett test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsConditionalDunnett.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Analysis Results Multi-Arm Conditional Dunnett — AnalysisResultsConditionalDunnett","text":"normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. thetaH0 difference assumed effect H0. numeric vector length 1. pi1 assumed probability probabilities active treatment group two-group designs, alternative probability one-group design. pi2 assumed probability reference group two-group designs. numeric vector length 1 containing value 0 1. nPlanned sample size planned subsequent stages. numeric vector length kMax containing whole numbers. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. assumedStDevs Assumed standard deviations calculate conditional power multi-arm trials enrichment designs. numeric vector. piTreatments assumed rates treatment groups multi-arm enrichment designs, .e., designs multiple subsets. intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. varianceOption Defines way calculate variance multiple (.e., >2) treatment arms population enrichment designs testing means. Available options multiple arms: \"overallPooled\", \"pairwisePooled\", \"notPooled\". Available options enrichment designs: \"pooled\", \"pooledFromFull\", \"notPooled\". conditionalRejectionProbabilities probabilities rejecting null hypothesis stage, given stage reached. numeric vector length kMax containing values 0 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. repeatedConfidenceIntervalLowerBounds lower bound confidence intervals calculated stage trial. numeric vector length kMax. repeatedConfidenceIntervalUpperBounds upper bound confidence interval calculated stage trial. numeric vector length kMax. repeatedPValues p-values calculated stage trial. numeric vector length kMax containing values 0 1. piControl assumed probability control arm simulation sample size recalculation performed. numeric vector length 1 containing value 0 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsEnrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Class for Analysis Results Enrichment — AnalysisResultsEnrichment","title":"Basic Class for Analysis Results Enrichment — AnalysisResultsEnrichment","text":"basic class enrichment analysis results.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsEnrichment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic Class for Analysis Results Enrichment — AnalysisResultsEnrichment","text":"AnalysisResultsEnrichment basic class AnalysisResultsEnrichmentFisher AnalysisResultsEnrichmentInverseNormal.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsEnrichmentFisher.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis Results Enrichment Fisher — AnalysisResultsEnrichmentFisher","title":"Analysis Results Enrichment Fisher — AnalysisResultsEnrichmentFisher","text":"Class enrichment analysis results based Fisher combination test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsEnrichmentFisher.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis Results Enrichment Fisher — AnalysisResultsEnrichmentFisher","text":"object created directly; use getAnalysisResults suitable arguments create multi-arm analysis results Fisher combination test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsEnrichmentFisher.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Analysis Results Enrichment Fisher — AnalysisResultsEnrichmentFisher","text":"normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. thetaH0 difference assumed effect H0. numeric vector length 1. pi1 assumed probability probabilities active treatment group two-group designs, alternative probability one-group design. pi2 assumed probability reference group two-group designs. numeric vector length 1 containing value 0 1. nPlanned sample size planned subsequent stages. numeric vector length kMax containing whole numbers. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. assumedStDevs Assumed standard deviations calculate conditional power multi-arm trials enrichment designs. numeric vector. piTreatments assumed rates treatment groups multi-arm enrichment designs, .e., designs multiple subsets. intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. varianceOption Defines way calculate variance multiple (.e., >2) treatment arms population enrichment designs testing means. Available options multiple arms: \"overallPooled\", \"pairwisePooled\", \"notPooled\". Available options enrichment designs: \"pooled\", \"pooledFromFull\", \"notPooled\". conditionalRejectionProbabilities probabilities rejecting null hypothesis stage, given stage reached. numeric vector length kMax containing values 0 1. repeatedConfidenceIntervalLowerBounds lower bound confidence intervals calculated stage trial. numeric vector length kMax. repeatedConfidenceIntervalUpperBounds upper bound confidence interval calculated stage trial. numeric vector length kMax. repeatedPValues p-values calculated stage trial. numeric vector length kMax containing values 0 1. piControls assumed rates control group enrichment designs, .e., designs multiple subsets. conditionalPowerSimulated simulated conditional power, assumption observed assumed effect sizes. iterations number iterations used simulations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. stratifiedAnalysis enrichment designs, typically stratified analysis chosen. testing means rates, non-stratified analysis can performed overall data. survival data, stratified analysis possible. logical vector length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsEnrichmentInverseNormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis Results Enrichment Inverse Normal — AnalysisResultsEnrichmentInverseNormal","title":"Analysis Results Enrichment Inverse Normal — AnalysisResultsEnrichmentInverseNormal","text":"Class enrichment analysis results based inverse normal design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsEnrichmentInverseNormal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis Results Enrichment Inverse Normal — AnalysisResultsEnrichmentInverseNormal","text":"object created directly; use getAnalysisResults suitable arguments create enrichment analysis results inverse normal design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsEnrichmentInverseNormal.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Analysis Results Enrichment Inverse Normal — AnalysisResultsEnrichmentInverseNormal","text":"normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. thetaH0 difference assumed effect H0. numeric vector length 1. pi1 assumed probability probabilities active treatment group two-group designs, alternative probability one-group design. pi2 assumed probability reference group two-group designs. numeric vector length 1 containing value 0 1. nPlanned sample size planned subsequent stages. numeric vector length kMax containing whole numbers. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. assumedStDevs Assumed standard deviations calculate conditional power multi-arm trials enrichment designs. numeric vector. piTreatments assumed rates treatment groups multi-arm enrichment designs, .e., designs multiple subsets. intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. varianceOption Defines way calculate variance multiple (.e., >2) treatment arms population enrichment designs testing means. Available options multiple arms: \"overallPooled\", \"pairwisePooled\", \"notPooled\". Available options enrichment designs: \"pooled\", \"pooledFromFull\", \"notPooled\". conditionalRejectionProbabilities probabilities rejecting null hypothesis stage, given stage reached. numeric vector length kMax containing values 0 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. repeatedConfidenceIntervalLowerBounds lower bound confidence intervals calculated stage trial. numeric vector length kMax. repeatedConfidenceIntervalUpperBounds upper bound confidence interval calculated stage trial. numeric vector length kMax. repeatedPValues p-values calculated stage trial. numeric vector length kMax containing values 0 1. piControls assumed rates control group enrichment designs, .e., designs multiple subsets. stratifiedAnalysis enrichment designs, typically stratified analysis chosen. testing means rates, non-stratified analysis can performed overall data. survival data, stratified analysis possible. logical vector length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsFisher.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis Results Fisher — AnalysisResultsFisher","title":"Analysis Results Fisher — AnalysisResultsFisher","text":"Class analysis results based Fisher combination test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsFisher.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis Results Fisher — AnalysisResultsFisher","text":"object created directly; use getAnalysisResults suitable arguments create analysis results Fisher combination test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsFisher.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Analysis Results Fisher — AnalysisResultsFisher","text":"normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. thetaH0 difference assumed effect H0. numeric vector length 1. pi1 assumed probability probabilities active treatment group two-group designs, alternative probability one-group design. pi2 assumed probability reference group two-group designs. numeric vector length 1 containing value 0 1. nPlanned sample size planned subsequent stages. numeric vector length kMax containing whole numbers. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. assumedStDev assumed standard deviation(s) means analysis. numeric vector. equalVariances Describes variances two treatment groups assumed . logical vector length 1. testActions test decisions stage trial. character vector length kMax. conditionalRejectionProbabilities probabilities rejecting null hypothesis stage, given stage reached. numeric vector length kMax containing values 0 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. repeatedConfidenceIntervalLowerBounds lower bound confidence intervals calculated stage trial. numeric vector length kMax. repeatedConfidenceIntervalUpperBounds upper bound confidence interval calculated stage trial. numeric vector length kMax. repeatedPValues p-values calculated stage trial. numeric vector length kMax containing values 0 1. finalStage stage trial ends, either acceptance rejection null hypothesis. numeric vector length 1. finalPValues final p-value based stage-wise ordering. numeric vector length kMax containing values 0 1. finalConfidenceIntervalLowerBounds lower bound confidence interval based stage-wise ordering. numeric vector length kMax. finalConfidenceIntervalUpperBounds upper bound confidence interval based stage-wise ordering. numeric vector length kMax. medianUnbiasedEstimates calculated median unbiased estimates based stage-wise ordering. numeric vector length kMax. conditionalPowerSimulated simulated conditional power, assumption observed assumed effect sizes. iterations number iterations used simulations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsGroupSequential.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis Results Group Sequential — AnalysisResultsGroupSequential","title":"Analysis Results Group Sequential — AnalysisResultsGroupSequential","text":"Class analysis results results based group sequential design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsGroupSequential.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis Results Group Sequential — AnalysisResultsGroupSequential","text":"object created directly; use getAnalysisResults suitable arguments create analysis results group sequential design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsGroupSequential.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Analysis Results Group Sequential — AnalysisResultsGroupSequential","text":"normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. thetaH0 difference assumed effect H0. numeric vector length 1. pi1 assumed probability probabilities active treatment group two-group designs, alternative probability one-group design. pi2 assumed probability reference group two-group designs. numeric vector length 1 containing value 0 1. nPlanned sample size planned subsequent stages. numeric vector length kMax containing whole numbers. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. assumedStDev assumed standard deviation(s) means analysis. numeric vector. equalVariances Describes variances two treatment groups assumed . logical vector length 1. testActions test decisions stage trial. character vector length kMax. conditionalRejectionProbabilities probabilities rejecting null hypothesis stage, given stage reached. numeric vector length kMax containing values 0 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. repeatedConfidenceIntervalLowerBounds lower bound confidence intervals calculated stage trial. numeric vector length kMax. repeatedConfidenceIntervalUpperBounds upper bound confidence interval calculated stage trial. numeric vector length kMax. repeatedPValues p-values calculated stage trial. numeric vector length kMax containing values 0 1. finalStage stage trial ends, either acceptance rejection null hypothesis. numeric vector length 1. finalPValues final p-value based stage-wise ordering. numeric vector length kMax containing values 0 1. finalConfidenceIntervalLowerBounds lower bound confidence interval based stage-wise ordering. numeric vector length kMax. finalConfidenceIntervalUpperBounds upper bound confidence interval based stage-wise ordering. numeric vector length kMax. medianUnbiasedEstimates calculated median unbiased estimates based stage-wise ordering. numeric vector length kMax. maxInformation maximum information. numeric vector length 1 containing whole number. informationEpsilon absolute information epsilon, defines maximum distance observed information maximum information causes final analysis. Updates final analysis observed information final analysis smaller (\"-running\") planned maximum information. either positive integer value specifying absolute information epsilon floating point number >0 <1 define relative information epsilon.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsInverseNormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis Results Inverse Normal — AnalysisResultsInverseNormal","title":"Analysis Results Inverse Normal — AnalysisResultsInverseNormal","text":"Class analysis results results based inverse normal design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsInverseNormal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis Results Inverse Normal — AnalysisResultsInverseNormal","text":"object created directly; use getAnalysisResults suitable arguments create analysis results inverse normal design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsInverseNormal.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Analysis Results Inverse Normal — AnalysisResultsInverseNormal","text":"normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. thetaH0 difference assumed effect H0. numeric vector length 1. pi1 assumed probability probabilities active treatment group two-group designs, alternative probability one-group design. pi2 assumed probability reference group two-group designs. numeric vector length 1 containing value 0 1. nPlanned sample size planned subsequent stages. numeric vector length kMax containing whole numbers. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. assumedStDev assumed standard deviation(s) means analysis. numeric vector. equalVariances Describes variances two treatment groups assumed . logical vector length 1. testActions test decisions stage trial. character vector length kMax. conditionalRejectionProbabilities probabilities rejecting null hypothesis stage, given stage reached. numeric vector length kMax containing values 0 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. repeatedConfidenceIntervalLowerBounds lower bound confidence intervals calculated stage trial. numeric vector length kMax. repeatedConfidenceIntervalUpperBounds upper bound confidence interval calculated stage trial. numeric vector length kMax. repeatedPValues p-values calculated stage trial. numeric vector length kMax containing values 0 1. finalStage stage trial ends, either acceptance rejection null hypothesis. numeric vector length 1. finalPValues final p-value based stage-wise ordering. numeric vector length kMax containing values 0 1. finalConfidenceIntervalLowerBounds lower bound confidence interval based stage-wise ordering. numeric vector length kMax. finalConfidenceIntervalUpperBounds upper bound confidence interval based stage-wise ordering. numeric vector length kMax. medianUnbiasedEstimates calculated median unbiased estimates based stage-wise ordering. numeric vector length kMax.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsMultiArm.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Class for Analysis Results Multi-Arm — AnalysisResultsMultiArm","title":"Basic Class for Analysis Results Multi-Arm — AnalysisResultsMultiArm","text":"basic class multi-arm analysis results.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsMultiArm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic Class for Analysis Results Multi-Arm — AnalysisResultsMultiArm","text":"AnalysisResultsMultiArm basic class AnalysisResultsMultiArmFisher, AnalysisResultsMultiArmInverseNormal, AnalysisResultsConditionalDunnett.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsMultiArmFisher.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis Results Multi-Arm Fisher — AnalysisResultsMultiArmFisher","title":"Analysis Results Multi-Arm Fisher — AnalysisResultsMultiArmFisher","text":"Class multi-arm analysis results based Fisher combination test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsMultiArmFisher.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis Results Multi-Arm Fisher — AnalysisResultsMultiArmFisher","text":"object created directly; use getAnalysisResults suitable arguments create multi-arm analysis results Fisher combination test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsMultiArmFisher.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Analysis Results Multi-Arm Fisher — AnalysisResultsMultiArmFisher","text":"normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. thetaH0 difference assumed effect H0. numeric vector length 1. pi1 assumed probability probabilities active treatment group two-group designs, alternative probability one-group design. pi2 assumed probability reference group two-group designs. numeric vector length 1 containing value 0 1. nPlanned sample size planned subsequent stages. numeric vector length kMax containing whole numbers. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. assumedStDevs Assumed standard deviations calculate conditional power multi-arm trials enrichment designs. numeric vector. piTreatments assumed rates treatment groups multi-arm enrichment designs, .e., designs multiple subsets. intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. varianceOption Defines way calculate variance multiple (.e., >2) treatment arms population enrichment designs testing means. Available options multiple arms: \"overallPooled\", \"pairwisePooled\", \"notPooled\". Available options enrichment designs: \"pooled\", \"pooledFromFull\", \"notPooled\". conditionalRejectionProbabilities probabilities rejecting null hypothesis stage, given stage reached. numeric vector length kMax containing values 0 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. repeatedConfidenceIntervalLowerBounds lower bound confidence intervals calculated stage trial. numeric vector length kMax. repeatedConfidenceIntervalUpperBounds upper bound confidence interval calculated stage trial. numeric vector length kMax. repeatedPValues p-values calculated stage trial. numeric vector length kMax containing values 0 1. piControl assumed probability control arm simulation sample size recalculation performed. numeric vector length 1 containing value 0 1. conditionalPowerSimulated simulated conditional power, assumption observed assumed effect sizes. iterations number iterations used simulations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsMultiArmInverseNormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis Results Multi-Arm Inverse Normal — AnalysisResultsMultiArmInverseNormal","title":"Analysis Results Multi-Arm Inverse Normal — AnalysisResultsMultiArmInverseNormal","text":"Class multi-arm analysis results based inverse normal design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsMultiArmInverseNormal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis Results Multi-Arm Inverse Normal — AnalysisResultsMultiArmInverseNormal","text":"object created directly; use getAnalysisResults suitable arguments create multi-arm analysis results inverse normal design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsMultiArmInverseNormal.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Analysis Results Multi-Arm Inverse Normal — AnalysisResultsMultiArmInverseNormal","text":"normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. thetaH0 difference assumed effect H0. numeric vector length 1. pi1 assumed probability probabilities active treatment group two-group designs, alternative probability one-group design. pi2 assumed probability reference group two-group designs. numeric vector length 1 containing value 0 1. nPlanned sample size planned subsequent stages. numeric vector length kMax containing whole numbers. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. assumedStDevs Assumed standard deviations calculate conditional power multi-arm trials enrichment designs. numeric vector. piTreatments assumed rates treatment groups multi-arm enrichment designs, .e., designs multiple subsets. intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. varianceOption Defines way calculate variance multiple (.e., >2) treatment arms population enrichment designs testing means. Available options multiple arms: \"overallPooled\", \"pairwisePooled\", \"notPooled\". Available options enrichment designs: \"pooled\", \"pooledFromFull\", \"notPooled\". conditionalRejectionProbabilities probabilities rejecting null hypothesis stage, given stage reached. numeric vector length kMax containing values 0 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. repeatedConfidenceIntervalLowerBounds lower bound confidence intervals calculated stage trial. numeric vector length kMax. repeatedConfidenceIntervalUpperBounds upper bound confidence interval calculated stage trial. numeric vector length kMax. repeatedPValues p-values calculated stage trial. numeric vector length kMax containing values 0 1. piControl assumed probability control arm simulation sample size recalculation performed. numeric vector length 1 containing value 0 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsMultiHypotheses.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Class for Analysis Results Multi-Hypotheses — AnalysisResultsMultiHypotheses","title":"Basic Class for Analysis Results Multi-Hypotheses — AnalysisResultsMultiHypotheses","text":"basic class multi-hypotheses analysis results.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/AnalysisResultsMultiHypotheses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic Class for Analysis Results Multi-Hypotheses — AnalysisResultsMultiHypotheses","text":"AnalysisResultsMultiHypotheses basic class AnalysisResultsMultiArm AnalysisResultsEnrichment.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ClosedCombinationTestResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis Results Closed Combination Test — ClosedCombinationTestResults","title":"Analysis Results Closed Combination Test — ClosedCombinationTestResults","text":"Class multi-arm analysis results based closed combination test.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ClosedCombinationTestResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis Results Closed Combination Test — ClosedCombinationTestResults","text":"object created directly; use getAnalysisResults suitable arguments create multi-arm analysis results closed combination test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ClosedCombinationTestResults.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Analysis Results Closed Combination Test — ClosedCombinationTestResults","text":"intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. indices Indicates stages available analysis. adjustedStageWisePValues multiplicity adjusted p-values separate stages. numeric matrix. overallAdjustedTestStatistics overall adjusted test statistics. separatePValues p-values separate stages. numeric matrix. conditionalErrorRate calculated conditional error rate. secondStagePValues conditional Dunnett test, conditional unconditional p-value calculated second stage. rejected Indicates whether hypothesis rejected . rejectedIntersections simulated number rejected arms closed testing procedure.. logical matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional Power Results — ConditionalPowerResults","title":"Conditional Power Results — ConditionalPowerResults","text":"Class conditional power calculations","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional Power Results — ConditionalPowerResults","text":"object created directly; use getConditionalPower() suitable arguments create results group sequential combination test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResults.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Conditional Power Results — ConditionalPowerResults","text":"nPlanned sample size planned subsequent stages. numeric vector length kMax containing whole numbers. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. simulated Describes power Fisher's combination test simulated. applicable using Fisher designs. logical vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. assumedStDev assumed standard deviation(s) means analysis. numeric vector.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResultsEnrichmentMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional Power Results Enrichment Means — ConditionalPowerResultsEnrichmentMeans","title":"Conditional Power Results Enrichment Means — ConditionalPowerResultsEnrichmentMeans","text":"Class conditional power calculations enrichment means data","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResultsEnrichmentMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional Power Results Enrichment Means — ConditionalPowerResultsEnrichmentMeans","text":"object created directly; use getConditionalPower suitable arguments create results group sequential combination test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResultsEnrichmentMeans.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Conditional Power Results Enrichment Means — ConditionalPowerResultsEnrichmentMeans","text":"nPlanned sample size planned subsequent stages. numeric vector length kMax containing whole numbers. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. simulated Describes power Fisher's combination test simulated. applicable using Fisher designs. logical vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. assumedStDevs Assumed standard deviations calculate conditional power multi-arm trials enrichment designs. numeric vector.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResultsEnrichmentRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional Power Results Enrichment Rates — ConditionalPowerResultsEnrichmentRates","title":"Conditional Power Results Enrichment Rates — ConditionalPowerResultsEnrichmentRates","text":"Class conditional power calculations enrichment rates data","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResultsEnrichmentRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional Power Results Enrichment Rates — ConditionalPowerResultsEnrichmentRates","text":"object created directly; use getConditionalPower suitable arguments create results group sequential combination test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResultsEnrichmentRates.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Conditional Power Results Enrichment Rates — ConditionalPowerResultsEnrichmentRates","text":"nPlanned sample size planned subsequent stages. numeric vector length kMax containing whole numbers. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. simulated Describes power Fisher's combination test simulated. applicable using Fisher designs. logical vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. piTreatments assumed rates treatment groups multi-arm enrichment designs, .e., designs multiple subsets. piControls assumed rates control group enrichment designs, .e., designs multiple subsets.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResultsMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional Power Results Means — ConditionalPowerResultsMeans","title":"Conditional Power Results Means — ConditionalPowerResultsMeans","text":"Class conditional power calculations means data","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResultsMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional Power Results Means — ConditionalPowerResultsMeans","text":"object created directly; use getConditionalPower suitable arguments create results group sequential combination test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResultsMeans.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Conditional Power Results Means — ConditionalPowerResultsMeans","text":"nPlanned sample size planned subsequent stages. numeric vector length kMax containing whole numbers. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. simulated Describes power Fisher's combination test simulated. applicable using Fisher designs. logical vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. assumedStDev assumed standard deviation(s) means analysis. numeric vector.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResultsRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional Power Results Rates — ConditionalPowerResultsRates","title":"Conditional Power Results Rates — ConditionalPowerResultsRates","text":"Class conditional power calculations rates data","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResultsRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional Power Results Rates — ConditionalPowerResultsRates","text":"object created directly; use getConditionalPower suitable arguments create results group sequential combination test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResultsRates.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Conditional Power Results Rates — ConditionalPowerResultsRates","text":"nPlanned sample size planned subsequent stages. numeric vector length kMax containing whole numbers. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. simulated Describes power Fisher's combination test simulated. applicable using Fisher designs. logical vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. pi1 assumed probability probabilities active treatment group two-group designs, alternative probability one-group design. pi2 assumed probability reference group two-group designs. numeric vector length 1 containing value 0 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResultsSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional Power Results Survival — ConditionalPowerResultsSurvival","title":"Conditional Power Results Survival — ConditionalPowerResultsSurvival","text":"Class conditional power calculations survival data","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResultsSurvival.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional Power Results Survival — ConditionalPowerResultsSurvival","text":"object created directly; use getConditionalPower suitable arguments create results group sequential combination test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ConditionalPowerResultsSurvival.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Conditional Power Results Survival — ConditionalPowerResultsSurvival","text":"nPlanned sample size planned subsequent stages. numeric vector length kMax containing whole numbers. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. simulated Describes power Fisher's combination test simulated. applicable using Fisher designs. logical vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset — Dataset","title":"Dataset — Dataset","text":"Basic class datasets.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/Dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dataset — Dataset","text":"Dataset basic class DatasetMeans, DatasetRates, DatasetSurvival, DatasetEnrichmentSurvival. basic class contains fields stages groups several commonly used functions.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/Dataset.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Dataset — Dataset","text":"stages stage numbers trial. numeric vector length kMax containing whole numbers. groups group numbers. numeric vector.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/DatasetMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset of Means — DatasetMeans","title":"Dataset of Means — DatasetMeans","text":"Class dataset means.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/DatasetMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dataset of Means — DatasetMeans","text":"object created directly; better use getDataset suitable arguments create dataset means.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/DatasetMeans.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Dataset of Means — DatasetMeans","text":"groups group numbers. numeric vector. stages stage numbers trial. numeric vector length kMax containing whole numbers. sampleSizes sample sizes group stage. numeric vector length number stages times number groups containing whole numbers. means means. numeric vector length number stages times number groups. stDevs standard deviations. numeric vector length number stages times number groups. overallSampleSizes overall, .e., cumulative sample sizes. numeric vector length number stages times number groups. overallMeans overall, .e., cumulative means. numeric vector length number stages times number groups. overallStDevs overall, .e., cumulative standard deviations. numeric vector length number stages times number groups.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/DatasetRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset of Rates — DatasetRates","title":"Dataset of Rates — DatasetRates","text":"Class dataset rates.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/DatasetRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dataset of Rates — DatasetRates","text":"object created directly; better use getDataset suitable arguments create dataset rates.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/DatasetRates.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Dataset of Rates — DatasetRates","text":"groups group numbers. numeric vector. stages stage numbers trial. numeric vector length kMax containing whole numbers. sampleSizes sample sizes group stage. numeric vector length number stages times number groups containing whole numbers. overallSampleSizes overall, .e., cumulative sample sizes. numeric vector length number stages times number groups. events number events group stage. numeric vector length number stages times number groups. overallEvents overall, .e., cumulative events. numeric vector length number stages times number groups containing whole numbers.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/DatasetSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset of Survival Data — DatasetSurvival","title":"Dataset of Survival Data — DatasetSurvival","text":"Class dataset survival data.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/DatasetSurvival.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dataset of Survival Data — DatasetSurvival","text":"object created directly; better use getDataset suitable arguments create dataset survival data.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/DatasetSurvival.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Dataset of Survival Data — DatasetSurvival","text":"groups group numbers. numeric vector. stages stage numbers trial. numeric vector length kMax containing whole numbers. events number events group stage. numeric vector length number stages times number groups. overallEvents overall, .e., cumulative events. numeric vector length number stages times number groups containing whole numbers. allocationRatios observed allocation ratios. numeric vector length number stages times number groups. overallAllocationRatios cumulative allocation ratios. numeric vector length number stages times number groups. logRanks logrank test statistics stage trial. numeric vector length number stages times number groups. overallLogRanks overall, .e., cumulative logrank test statistics. numeric vector length number stages times number groups.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/EventProbabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Probabilities — EventProbabilities","title":"Event Probabilities — EventProbabilities","text":"Class definition event probabilities.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/EventProbabilities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Event Probabilities — EventProbabilities","text":"EventProbabilities class definition event probabilities.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/EventProbabilities.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Event Probabilities — EventProbabilities","text":"time time values. numeric vector. accrualTime assumed accrual time intervals study. numeric vector. accrualIntensity absolute accrual intensities. numeric vector length kMax. kappa shape Weibull distribution kappa!=1. numeric vector length 1. piecewiseSurvivalTime time intervals piecewise definition exponential survival time cumulative distribution function. numeric vector. lambda1 assumed hazard rate treatment group. numeric vector length kMax. lambda2 assumed hazard rate reference group. numeric vector length 1. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. hazardRatio hazard ratios consideration. numeric vector length kMax. dropoutRate1 assumed drop-rate treatment group. numeric vector length 1 containing value 0 1. dropoutRate2 assumed drop-rate control group. numeric vector length 1 containing value 0 1. dropoutTime assumed time drop-rates control treatment group. numeric vector length 1. maxNumberOfSubjects maximum number subjects power calculations. numeric vector. overallEventProbabilities Deprecated field removed one next releases. Use cumulativeEventProbabilities instead. cumulativeEventProbabilities cumulative event probabilities survival designs. numeric vector. eventProbabilities1 event probabilities treatment group 1. numeric vector. eventProbabilities2 event probabilities treatment group 2. numeric vector.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/FieldSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Field Set — FieldSet","title":"Field Set — FieldSet","text":"Basic class field sets.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/FieldSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Field Set — FieldSet","text":"field set implements basic functions set fields.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/MarkdownReporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Markdown Reporter for Test Results — MarkdownReporter","title":"Markdown Reporter for Test Results — MarkdownReporter","text":"class defines Markdown reporter test results, inheriting R6::Reporter class. logs test results Markdown format saves file named test_results.md.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/MarkdownReporter.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Markdown Reporter for Test Results — MarkdownReporter","text":"startTime start time test run. output character vector store log output. failures number test failures. fileName name current test file processed.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/MarkdownReporter.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Markdown Reporter for Test Results — MarkdownReporter","text":"initialize(...) Initializes reporter, setting output failures fields. log(...) Logs messages output field. start_reporter() Starts reporter, logging introduction test results header. start_file(file) Sets current file name processed. getContext() Gets context current file name. add_result(context, test, result) Adds test result log, marking passed failed. end_reporter() Ends reporter, logging summary saving output file. finalize() Finalizes reporter, displaying message test results saved.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/NumberOfSubjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Number Of Subjects — NumberOfSubjects","title":"Number Of Subjects — NumberOfSubjects","text":"Class definition number subjects results.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/NumberOfSubjects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number Of Subjects — NumberOfSubjects","text":"NumberOfSubjects class definition number subjects results.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/NumberOfSubjects.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Number Of Subjects — NumberOfSubjects","text":"time time values. numeric vector. accrualTime assumed accrual time intervals study. numeric vector. accrualIntensity absolute accrual intensities. numeric vector length kMax. maxNumberOfSubjects maximum number subjects power calculations. numeric vector. numberOfSubjects simulation results data set: number subjects consideration interim analysis takes place.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ParameterSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Set — ParameterSet","title":"Parameter Set — ParameterSet","text":"Basic class parameter sets.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/ParameterSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter Set — ParameterSet","text":"parameter set implements basic functions set parameters.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/PerformanceScore.html","id":null,"dir":"Reference","previous_headings":"","what":"Performance Score — PerformanceScore","title":"Performance Score — PerformanceScore","text":"Contains conditional performance score, sub-scores components according Herrmann et al. (2020) given simulation result.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/PerformanceScore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Performance Score — PerformanceScore","text":"Use getPerformanceScore calculate performance score.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/PiecewiseSurvivalTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Piecewise Exponential Survival Time — PiecewiseSurvivalTime","title":"Piecewise Exponential Survival Time — PiecewiseSurvivalTime","text":"Class definition piecewise survival times.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/PiecewiseSurvivalTime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Piecewise Exponential Survival Time — PiecewiseSurvivalTime","text":"PiecewiseSurvivalTime class definition piecewise survival times.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/PiecewiseSurvivalTime.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Piecewise Exponential Survival Time — PiecewiseSurvivalTime","text":"piecewiseSurvivalTime time intervals piecewise definition exponential survival time cumulative distribution function. numeric vector. lambda1 assumed hazard rate treatment group. numeric vector length kMax. lambda2 assumed hazard rate reference group. numeric vector length 1. hazardRatio hazard ratios consideration. numeric vector length kMax. pi1 assumed event rate treatment group. numeric vector length kMax containing values 0 1. pi2 assumed event rate control group. numeric vector length 1 containing value 0 1. median1 assumed median survival time treatment group. numeric vector. median2 assumed median survival time reference group. numeric vector length 1. eventTime assumed time event rates calculated. numeric vector length 1. kappa shape Weibull distribution kappa!=1. numeric vector length 1. piecewiseSurvivalEnabled Indicates whether specification piecewise definition survival time selected. logical vector length 1. delayedResponseAllowed TRUE, delayed response allowed, FALSE response delayed. delayedResponseEnabled TRUE, delayed response enabled, FALSE delayed response enabled.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/PlotSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Settings — PlotSettings","title":"Plot Settings — PlotSettings","text":"Class plot settings.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/PlotSettings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Settings — PlotSettings","text":"Collects typical plot settings object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/PlotSettings.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Plot Settings — PlotSettings","text":"lineSize line size. pointSize point size. pointColor point color, e.g., \"red\" \"blue\". mainTitleFontSize main tile font size. axesTextFontSize text font size. legendFontSize legend font size. scalingFactor scaling factor.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/PowerAndAverageSampleNumberResult.html","id":null,"dir":"Reference","previous_headings":"","what":"Power and Average Sample Number Result — PowerAndAverageSampleNumberResult","title":"Power and Average Sample Number Result — PowerAndAverageSampleNumberResult","text":"Class power average sample number (ASN) results.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/PowerAndAverageSampleNumberResult.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Power and Average Sample Number Result — PowerAndAverageSampleNumberResult","text":"object created directly; use getPowerAndAverageSampleNumber() suitable arguments create .","code":""},{"path":"https://rpact-com.github.io/rpact/reference/PowerAndAverageSampleNumberResult.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Power and Average Sample Number Result — PowerAndAverageSampleNumberResult","text":"nMax maximum sample size. numeric vector length 1 containing whole number. theta vector standardized effect sizes (theta values). numeric vector. averageSampleNumber average sample number calculated value theta nMax, specified maximum sample size exceeded. numeric vector. calculatedPower calculated power given scenario. overallEarlyStop overall early stopping probability. numeric vector. earlyStop probability stopping trial either efficacy futility. numeric vector. overallReject overall rejection probability. numeric vector. rejectPerStage probability reject hypothesis per stage trial. numeric matrix. overallFutility overall stopping futility probability. numeric vector. futilityPerStage per-stage probabilities stopping trial futility. numeric matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Simulation Results — SimulationResults","title":"Class for Simulation Results — SimulationResults","text":"class simulation results.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class for Simulation Results — SimulationResults","text":"SimulationResults basic class SimulationResultsMeans, SimulationResultsRates, SimulationResultsSurvival, SimulationResultsCountData, SimulationResultsMultiArmMeans, SimulationResultsMultiArmRates, SimulationResultsMultiArmSurvival, SimulationResultsEnrichmentMeans, SimulationResultsEnrichmentRates, SimulationResultsEnrichmentSurvival.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResults.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class for Simulation Results — SimulationResults","text":"seed seed used random number generation. numeric vector length 1. iterations number iterations used simulations. numeric vector length 1 containing whole number.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsCountData.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Simulation Results Count Data — SimulationResultsCountData","title":"Class for Simulation Results Count Data — SimulationResultsCountData","text":"class simulation results count data.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsCountData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class for Simulation Results Count Data — SimulationResultsCountData","text":"Use getSimulationCounts() create object type.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsCountData.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class for Simulation Results Count Data — SimulationResultsCountData","text":"maxNumberOfIterations number simulation iterations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. futilityPerStage per-stage probabilities stopping trial futility. numeric matrix. thetaH0 difference assumed effect H0. numeric vector length 1. accrualTime assumed accrual time intervals study. numeric vector. accrualIntensity absolute accrual intensities. numeric vector length kMax. groups group numbers. numeric vector. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. earlyStop probability stopping trial either efficacy futility. numeric vector. sampleSizes sample sizes group stage. numeric vector length number stages times number groups containing whole numbers. expectedNumberOfSubjects expected number subjects specified alternative. overallReject overall rejection probability. numeric vector. rejectPerStage probability reject hypothesis per stage trial. numeric matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsEnrichmentMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Simulation Results Enrichment Means — SimulationResultsEnrichmentMeans","title":"Class for Simulation Results Enrichment Means — SimulationResultsEnrichmentMeans","text":"class simulation results means enrichment designs.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsEnrichmentMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class for Simulation Results Enrichment Means — SimulationResultsEnrichmentMeans","text":"Use getSimulationEnrichmentMeans() create object type.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsEnrichmentMeans.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class for Simulation Results Enrichment Means — SimulationResultsEnrichmentMeans","text":"maxNumberOfIterations number simulation iterations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. futilityPerStage per-stage probabilities stopping trial futility. numeric matrix. futilityStop simulation results data set: indicates whether trial stopped futility . stDev standard deviation used sample size power calculation. numeric vector length 1. plannedSubjects Determines number cumulated (overall) subjects interim stages planned. two treatment arms, number subjects treatment arms. multi-arm designs, refers number subjects per selected active arm. numeric vector length kMax containing whole numbers. minNumberOfSubjectsPerStage Determines minimum number subjects per stage data-driven sample size recalculation. two treatment arms, number subjects treatment arms. multi-arm designs, minimum number subjects per selected active arm. numeric vector length kMax containing whole numbers. maxNumberOfSubjectsPerStage Determines maximum number subjects per stage data-driven sample size recalculation. two treatment arms, number subjects treatment arms. multi-arm designs, minimum number subjects per selected active arm. numeric vector length kMax containing whole numbers. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. stDevH1 standard deviation conditional power sample size recalculation performed. numeric vector length 1. calcSubjectsFunction optional function can entered define sample size recalculated. default, recalculation performed conditional power specified minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage. expectedNumberOfSubjects expected number subjects specified alternative. populations number populations enrichment design. numeric vector length 1 containing whole number. effectList list subsets, prevalences effect sizes columns number rows reflecting different situations considered. intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. stratifiedAnalysis enrichment designs, typically stratified analysis chosen. testing means rates, non-stratified analysis can performed overall data. survival data, stratified analysis possible. logical vector length 1. adaptations Indicates whether adaptation takes place interim k. logical vector length kMax minus 1. typeOfSelection way treatment arms populations selected interim. character vector length 1. effectMeasure Criterion treatment arm/population selection, either based test statistic (\"testStatistic\") effect estimate (\"effectEstimate\"). character vector length 1. successCriterion Defines study stopped efficacy interim. \"\" stops trial efficacy criterion fulfilled selected treatment arms/populations, \"atLeastOne\" stops least one selected treatment arms/populations shown superior control interim. character vector length 1. epsilonValue Needs specified typeOfSelection = \"epsilon\". numeric vector length 1. rValue Needs specified typeOfSelection = \"rBest\". numeric vector length 1. threshold selection criterion: treatment arm/population selected effectMeasure exceeds threshold. Either single numeric value numeric vector length activeArms referring separate threshold condition treatment arm. selectPopulationsFunction optional function can entered define way populations selected. earlyStop probability stopping trial either efficacy futility. numeric vector. selectedPopulations selected populations enrichment designs. numberOfPopulations number populations enrichment design. numeric matrix. rejectAtLeastOne probability reject least one (multiple) hypotheses. numeric vector. rejectedPopulationsPerStage simulated number rejected populations per stage. successPerStage simulated success probabilities per stage success defined user. numeric matrix. sampleSizes sample sizes group stage. numeric vector length number stages times number groups containing whole numbers. conditionalPowerAchieved calculated conditional power, assumption observed assumed effect sizes. numeric matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsEnrichmentRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Simulation Results Enrichment Rates — SimulationResultsEnrichmentRates","title":"Class for Simulation Results Enrichment Rates — SimulationResultsEnrichmentRates","text":"class simulation results rates enrichment designs.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsEnrichmentRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class for Simulation Results Enrichment Rates — SimulationResultsEnrichmentRates","text":"Use getSimulationEnrichmentRates() create object type.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsEnrichmentRates.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class for Simulation Results Enrichment Rates — SimulationResultsEnrichmentRates","text":"maxNumberOfIterations number simulation iterations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. futilityPerStage per-stage probabilities stopping trial futility. numeric matrix. futilityStop simulation results data set: indicates whether trial stopped futility . directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. plannedSubjects Determines number cumulated (overall) subjects interim stages planned. two treatment arms, number subjects treatment arms. multi-arm designs, refers number subjects per selected active arm. numeric vector length kMax containing whole numbers. minNumberOfSubjectsPerStage Determines minimum number subjects per stage data-driven sample size recalculation. two treatment arms, number subjects treatment arms. multi-arm designs, minimum number subjects per selected active arm. numeric vector length kMax containing whole numbers. maxNumberOfSubjectsPerStage Determines maximum number subjects per stage data-driven sample size recalculation. two treatment arms, number subjects treatment arms. multi-arm designs, minimum number subjects per selected active arm. numeric vector length kMax containing whole numbers. calcSubjectsFunction optional function can entered define sample size recalculated. default, recalculation performed conditional power specified minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage. expectedNumberOfSubjects expected number subjects specified alternative. populations number populations enrichment design. numeric vector length 1 containing whole number. effectList list subsets, prevalences effect sizes columns number rows reflecting different situations considered. intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. stratifiedAnalysis enrichment designs, typically stratified analysis chosen. testing means rates, non-stratified analysis can performed overall data. survival data, stratified analysis possible. logical vector length 1. adaptations Indicates whether adaptation takes place interim k. logical vector length kMax minus 1. piTreatmentH1 assumed probabilities active arm sample size recalculation performed conditional power calculated. piControlH1 assumed probability reference group, conditional power calculated. numeric vector length 1 containing value 0 1. typeOfSelection way treatment arms populations selected interim. character vector length 1. effectMeasure Criterion treatment arm/population selection, either based test statistic (\"testStatistic\") effect estimate (\"effectEstimate\"). character vector length 1. successCriterion Defines study stopped efficacy interim. \"\" stops trial efficacy criterion fulfilled selected treatment arms/populations, \"atLeastOne\" stops least one selected treatment arms/populations shown superior control interim. character vector length 1. epsilonValue Needs specified typeOfSelection = \"epsilon\". numeric vector length 1. rValue Needs specified typeOfSelection = \"rBest\". numeric vector length 1. threshold selection criterion: treatment arm/population selected effectMeasure exceeds threshold. Either single numeric value numeric vector length activeArms referring separate threshold condition treatment arm. selectPopulationsFunction optional function can entered define way populations selected. earlyStop probability stopping trial either efficacy futility. numeric vector. selectedPopulations selected populations enrichment designs. numberOfPopulations number populations enrichment design. numeric matrix. rejectAtLeastOne probability reject least one (multiple) hypotheses. numeric vector. rejectedPopulationsPerStage simulated number rejected populations per stage. successPerStage simulated success probabilities per stage success defined user. numeric matrix. sampleSizes sample sizes group stage. numeric vector length number stages times number groups containing whole numbers. conditionalPowerAchieved calculated conditional power, assumption observed assumed effect sizes. numeric matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsEnrichmentSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Simulation Results Enrichment Survival — SimulationResultsEnrichmentSurvival","title":"Class for Simulation Results Enrichment Survival — SimulationResultsEnrichmentSurvival","text":"class simulation results survival enrichment designs.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsEnrichmentSurvival.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class for Simulation Results Enrichment Survival — SimulationResultsEnrichmentSurvival","text":"Use getSimulationEnrichmentSurvival() create object type.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsEnrichmentSurvival.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class for Simulation Results Enrichment Survival — SimulationResultsEnrichmentSurvival","text":"maxNumberOfIterations number simulation iterations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. futilityPerStage per-stage probabilities stopping trial futility. numeric matrix. futilityStop simulation results data set: indicates whether trial stopped futility . directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. plannedSubjects Determines number cumulated (overall) subjects interim stages planned. two treatment arms, number subjects treatment arms. multi-arm designs, refers number subjects per selected active arm. numeric vector length kMax containing whole numbers. minNumberOfSubjectsPerStage Determines minimum number subjects per stage data-driven sample size recalculation. two treatment arms, number subjects treatment arms. multi-arm designs, minimum number subjects per selected active arm. numeric vector length kMax containing whole numbers. maxNumberOfSubjectsPerStage Determines maximum number subjects per stage data-driven sample size recalculation. two treatment arms, number subjects treatment arms. multi-arm designs, minimum number subjects per selected active arm. numeric vector length kMax containing whole numbers. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. calcEventsFunction optional function can entered define event size recalculated. default, recalculation performed conditional power specified minNumberOfEventsPerStage maxNumberOfEventsPerStage. expectedNumberOfEvents expected number events specified alternative. numeric vector. populations number populations enrichment design. numeric vector length 1 containing whole number. effectList list subsets, prevalences effect sizes columns number rows reflecting different situations considered. intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. stratifiedAnalysis enrichment designs, typically stratified analysis chosen. testing means rates, non-stratified analysis can performed overall data. survival data, stratified analysis possible. logical vector length 1. adaptations Indicates whether adaptation takes place interim k. logical vector length kMax minus 1. typeOfSelection way treatment arms populations selected interim. character vector length 1. effectMeasure Criterion treatment arm/population selection, either based test statistic (\"testStatistic\") effect estimate (\"effectEstimate\"). character vector length 1. successCriterion Defines study stopped efficacy interim. \"\" stops trial efficacy criterion fulfilled selected treatment arms/populations, \"atLeastOne\" stops least one selected treatment arms/populations shown superior control interim. character vector length 1. epsilonValue Needs specified typeOfSelection = \"epsilon\". numeric vector length 1. rValue Needs specified typeOfSelection = \"rBest\". numeric vector length 1. threshold selection criterion: treatment arm/population selected effectMeasure exceeds threshold. Either single numeric value numeric vector length activeArms referring separate threshold condition treatment arm. selectPopulationsFunction optional function can entered define way populations selected. correlationComputation \"alternative\", correlation matrix according Deng et al. (Biometrics, 2019) accounting respective alternative used simulating log-rank statistics many--one design. \"null\", constant correlation matrix valid null hypothesis used. earlyStop probability stopping trial either efficacy futility. numeric vector. selectedPopulations selected populations enrichment designs. numberOfPopulations number populations enrichment design. numeric matrix. rejectAtLeastOne probability reject least one (multiple) hypotheses. numeric vector. rejectedPopulationsPerStage simulated number rejected populations per stage. successPerStage simulated success probabilities per stage success defined user. numeric matrix. eventsPerStage Deprecated: use singleEventsPerStage cumulativeEventsPerStage instead numeric matrix. singleNumberOfEventsPerStage Deprecated: use singleEventsPerArmAndStage singleEventsPerSubsetAndStage instead singleEventsPerSubsetAndStage number events per subset stage used analysis. conditionalPowerAchieved calculated conditional power, assumption observed assumed effect sizes. numeric matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Simulation Results Means — SimulationResultsMeans","title":"Class for Simulation Results Means — SimulationResultsMeans","text":"class simulation results means.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class for Simulation Results Means — SimulationResultsMeans","text":"Use getSimulationMeans() create object type. SimulationResultsMeans basic class SimulationResultsMeans, SimulationResultsMultiArmMeans, SimulationResultsEnrichmentMeans.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsMeans.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class for Simulation Results Means — SimulationResultsMeans","text":"maxNumberOfIterations number simulation iterations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. futilityPerStage per-stage probabilities stopping trial futility. numeric matrix. futilityStop simulation results data set: indicates whether trial stopped futility . stDev standard deviation used sample size power calculation. numeric vector length 1. plannedSubjects Determines number cumulated (overall) subjects interim stages planned. two treatment arms, number subjects treatment arms. multi-arm designs, refers number subjects per selected active arm. numeric vector length kMax containing whole numbers. minNumberOfSubjectsPerStage Determines minimum number subjects per stage data-driven sample size recalculation. two treatment arms, number subjects treatment arms. multi-arm designs, minimum number subjects per selected active arm. numeric vector length kMax containing whole numbers. maxNumberOfSubjectsPerStage Determines maximum number subjects per stage data-driven sample size recalculation. two treatment arms, number subjects treatment arms. multi-arm designs, minimum number subjects per selected active arm. numeric vector length kMax containing whole numbers. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. stDevH1 standard deviation conditional power sample size recalculation performed. numeric vector length 1. calcSubjectsFunction optional function can entered define sample size recalculated. default, recalculation performed conditional power specified minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage. expectedNumberOfSubjects expected number subjects specified alternative. meanRatio Specifies sample size one-sided testing H0: mu1/mu2 = thetaH0 calculated. logical vector length 1. thetaH0 difference assumed effect H0. numeric vector length 1. normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. alternative alternative hypothesis value(s) testing means. numeric vector. groups group numbers. numeric vector. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. effect effect randomly creating normally distributed responses. numeric vector length kMax. earlyStop probability stopping trial either efficacy futility. numeric vector. sampleSizes sample sizes group stage. numeric vector length number stages times number groups containing whole numbers. overallReject overall rejection probability. numeric vector. rejectPerStage probability reject hypothesis per stage trial. numeric matrix. conditionalPowerAchieved calculated conditional power, assumption observed assumed effect sizes. numeric matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsMultiArmMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Simulation Results Multi-Arm Means — SimulationResultsMultiArmMeans","title":"Class for Simulation Results Multi-Arm Means — SimulationResultsMultiArmMeans","text":"class simulation results means multi-arm designs.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsMultiArmMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class for Simulation Results Multi-Arm Means — SimulationResultsMultiArmMeans","text":"Use getSimulationMultiArmMeans() create object type.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsMultiArmMeans.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class for Simulation Results Multi-Arm Means — SimulationResultsMultiArmMeans","text":"maxNumberOfIterations number simulation iterations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. futilityPerStage per-stage probabilities stopping trial futility. numeric matrix. futilityStop simulation results data set: indicates whether trial stopped futility . stDev standard deviation used sample size power calculation. numeric vector length 1. plannedSubjects Determines number cumulated (overall) subjects interim stages planned. two treatment arms, number subjects treatment arms. multi-arm designs, refers number subjects per selected active arm. numeric vector length kMax containing whole numbers. minNumberOfSubjectsPerStage Determines minimum number subjects per stage data-driven sample size recalculation. two treatment arms, number subjects treatment arms. multi-arm designs, minimum number subjects per selected active arm. numeric vector length kMax containing whole numbers. maxNumberOfSubjectsPerStage Determines maximum number subjects per stage data-driven sample size recalculation. two treatment arms, number subjects treatment arms. multi-arm designs, minimum number subjects per selected active arm. numeric vector length kMax containing whole numbers. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. stDevH1 standard deviation conditional power sample size recalculation performed. numeric vector length 1. calcSubjectsFunction optional function can entered define sample size recalculated. default, recalculation performed conditional power specified minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage. expectedNumberOfSubjects expected number subjects specified alternative. activeArms number active treatment arms compared control. numeric vector length 1 containing whole number. effectMatrix matrix effect sizes activeArms columns number rows reflecting different situations consider. typeOfShape shape dose-response relationship treatment groups. character vector length 1. muMaxVector range effect sizes treatment group highest response \"linear\" \"sigmoidEmax\" model. numeric vector. gED50 ED50 sigmoid Emax model. necessary typeOfShape = \"sigmoidEmax\" specified. numeric vector length 1. slope slope sigmoid Emax model, typeOfShape = \"sigmoidEmax\" numeric vector length 1. intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. adaptations Indicates whether adaptation takes place interim k. logical vector length kMax minus 1. typeOfSelection way treatment arms populations selected interim. character vector length 1. effectMeasure Criterion treatment arm/population selection, either based test statistic (\"testStatistic\") effect estimate (\"effectEstimate\"). character vector length 1. successCriterion Defines study stopped efficacy interim. \"\" stops trial efficacy criterion fulfilled selected treatment arms/populations, \"atLeastOne\" stops least one selected treatment arms/populations shown superior control interim. character vector length 1. epsilonValue Needs specified typeOfSelection = \"epsilon\". numeric vector length 1. rValue Needs specified typeOfSelection = \"rBest\". numeric vector length 1. threshold selection criterion: treatment arm/population selected effectMeasure exceeds threshold. Either single numeric value numeric vector length activeArms referring separate threshold condition treatment arm. selectArmsFunction optional function can entered define treatment arms selected. earlyStop probability stopping trial either efficacy futility. numeric vector. selectedArms selected arms multi-armed designs. numberOfActiveArms number active arms multi-armed design. numeric matrix. rejectAtLeastOne probability reject least one (multiple) hypotheses. numeric vector. rejectedArmsPerStage simulated number rejected arms per stage. successPerStage simulated success probabilities per stage success defined user. numeric matrix. sampleSizes sample sizes group stage. numeric vector length number stages times number groups containing whole numbers. conditionalPowerAchieved calculated conditional power, assumption observed assumed effect sizes. numeric matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsMultiArmRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Simulation Results Multi-Arm Rates — SimulationResultsMultiArmRates","title":"Class for Simulation Results Multi-Arm Rates — SimulationResultsMultiArmRates","text":"class simulation results rates multi-arm designs.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsMultiArmRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class for Simulation Results Multi-Arm Rates — SimulationResultsMultiArmRates","text":"Use getSimulationMultiArmRates() create object type.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsMultiArmRates.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class for Simulation Results Multi-Arm Rates — SimulationResultsMultiArmRates","text":"maxNumberOfIterations number simulation iterations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. futilityPerStage per-stage probabilities stopping trial futility. numeric matrix. futilityStop simulation results data set: indicates whether trial stopped futility . directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. plannedSubjects Determines number cumulated (overall) subjects interim stages planned. two treatment arms, number subjects treatment arms. multi-arm designs, refers number subjects per selected active arm. numeric vector length kMax containing whole numbers. maxNumberOfSubjects maximum number subjects power calculations. numeric vector. calcSubjectsFunction optional function can entered define sample size recalculated. default, recalculation performed conditional power specified minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage. expectedNumberOfSubjects expected number subjects specified alternative. activeArms number active treatment arms compared control. numeric vector length 1 containing whole number. effectMatrix matrix effect sizes activeArms columns number rows reflecting different situations consider. typeOfShape shape dose-response relationship treatment groups. character vector length 1. piMaxVector range assumed probabilities treatment group highest response \"linear\" \"sigmoidEmax\" model. piControl assumed probability control arm simulation sample size recalculation performed. numeric vector length 1 containing value 0 1. piH1 assumed probability active treatment arm(s) sample size recalculation performed. numeric vector length 1 containing value 0 1. piControlH1 assumed probability reference group, conditional power calculated. numeric vector length 1 containing value 0 1. gED50 ED50 sigmoid Emax model. necessary typeOfShape = \"sigmoidEmax\" specified. numeric vector length 1. slope slope sigmoid Emax model, typeOfShape = \"sigmoidEmax\" numeric vector length 1. intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. adaptations Indicates whether adaptation takes place interim k. logical vector length kMax minus 1. typeOfSelection way treatment arms populations selected interim. character vector length 1. effectMeasure Criterion treatment arm/population selection, either based test statistic (\"testStatistic\") effect estimate (\"effectEstimate\"). character vector length 1. successCriterion Defines study stopped efficacy interim. \"\" stops trial efficacy criterion fulfilled selected treatment arms/populations, \"atLeastOne\" stops least one selected treatment arms/populations shown superior control interim. character vector length 1. epsilonValue Needs specified typeOfSelection = \"epsilon\". numeric vector length 1. rValue Needs specified typeOfSelection = \"rBest\". numeric vector length 1. threshold selection criterion: treatment arm/population selected effectMeasure exceeds threshold. Either single numeric value numeric vector length activeArms referring separate threshold condition treatment arm. selectArmsFunction optional function can entered define treatment arms selected. earlyStop probability stopping trial either efficacy futility. numeric vector. selectedArms selected arms multi-armed designs. numberOfActiveArms number active arms multi-armed design. numeric matrix. rejectAtLeastOne probability reject least one (multiple) hypotheses. numeric vector. rejectedArmsPerStage simulated number rejected arms per stage. successPerStage simulated success probabilities per stage success defined user. numeric matrix. sampleSizes sample sizes group stage. numeric vector length number stages times number groups containing whole numbers. conditionalPowerAchieved calculated conditional power, assumption observed assumed effect sizes. numeric matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsMultiArmSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Simulation Results Multi-Arm Survival — SimulationResultsMultiArmSurvival","title":"Class for Simulation Results Multi-Arm Survival — SimulationResultsMultiArmSurvival","text":"class simulation results survival multi-arm designs.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsMultiArmSurvival.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class for Simulation Results Multi-Arm Survival — SimulationResultsMultiArmSurvival","text":"Use getSimulationMultiArmSurvival() create object type.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsMultiArmSurvival.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class for Simulation Results Multi-Arm Survival — SimulationResultsMultiArmSurvival","text":"maxNumberOfIterations number simulation iterations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. futilityPerStage per-stage probabilities stopping trial futility. numeric matrix. futilityStop simulation results data set: indicates whether trial stopped futility . directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. plannedEvents Determines number cumulated (overall) events survival designs interim stages planned. two treatment arms, number events treatment arms. multi-arm designs, refers overall number events selected arms plus control. numeric vector length kMax containing whole numbers. minNumberOfEventsPerStage Determines minimum number events per stage data-driven sample size recalculation. numeric vector length kMax containing whole numbers. maxNumberOfEventsPerStage Determines maximum number events per stage data-driven sample size recalculation. numeric vector length kMax containing whole numbers. expectedNumberOfEvents expected number events specified alternative. numeric vector. activeArms number active treatment arms compared control. numeric vector length 1 containing whole number. effectMatrix matrix effect sizes activeArms columns number rows reflecting different situations consider. typeOfShape shape dose-response relationship treatment groups. character vector length 1. omegaMaxVector range hazard ratios highest response \"linear\" \"sigmoidEmax\" model. numeric vector. gED50 ED50 sigmoid Emax model. necessary typeOfShape = \"sigmoidEmax\" specified. numeric vector length 1. slope slope sigmoid Emax model, typeOfShape = \"sigmoidEmax\" numeric vector length 1. intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. adaptations Indicates whether adaptation takes place interim k. logical vector length kMax minus 1. epsilonValue Needs specified typeOfSelection = \"epsilon\". numeric vector length 1. rValue Needs specified typeOfSelection = \"rBest\". numeric vector length 1. threshold selection criterion: treatment arm/population selected effectMeasure exceeds threshold. Either single numeric value numeric vector length activeArms referring separate threshold condition treatment arm. selectArmsFunction optional function can entered define treatment arms selected. correlationComputation \"alternative\", correlation matrix according Deng et al. (Biometrics, 2019) accounting respective alternative used simulating log-rank statistics many--one design. \"null\", constant correlation matrix valid null hypothesis used. earlyStop probability stopping trial either efficacy futility. numeric vector. selectedArms selected arms multi-armed designs. numberOfActiveArms number active arms multi-armed design. numeric matrix. rejectAtLeastOne probability reject least one (multiple) hypotheses. numeric vector. rejectedArmsPerStage simulated number rejected arms per stage. successPerStage simulated success probabilities per stage success defined user. numeric matrix. eventsPerStage Deprecated: use singleEventsPerStage cumulativeEventsPerStage instead numeric matrix. singleNumberOfEventsPerStage Deprecated: use singleEventsPerArmAndStage singleEventsPerSubsetAndStage instead singleEventsPerArmAndStage number events per arm stage used analysis. singleEventsPerStage single number events per stage. numeric matrix. cumulativeEventsPerStage cumulative number events per stage. numeric matrix. conditionalPowerAchieved calculated conditional power, assumption observed assumed effect sizes. numeric matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Simulation Results Rates — SimulationResultsRates","title":"Class for Simulation Results Rates — SimulationResultsRates","text":"class simulation results rates.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class for Simulation Results Rates — SimulationResultsRates","text":"Use getSimulationRates() create object type. SimulationResultsRates basic class SimulationResultsRates, SimulationResultsMultiArmRates, SimulationResultsEnrichmentRates.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsRates.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class for Simulation Results Rates — SimulationResultsRates","text":"maxNumberOfIterations number simulation iterations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. futilityPerStage per-stage probabilities stopping trial futility. numeric matrix. futilityStop simulation results data set: indicates whether trial stopped futility . directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. plannedSubjects Determines number cumulated (overall) subjects interim stages planned. two treatment arms, number subjects treatment arms. multi-arm designs, refers number subjects per selected active arm. numeric vector length kMax containing whole numbers. maxNumberOfSubjects maximum number subjects power calculations. numeric vector. calcSubjectsFunction optional function can entered define sample size recalculated. default, recalculation performed conditional power specified minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage. expectedNumberOfSubjects expected number subjects specified alternative. riskRatio Specifies sample size one-sided testing H0: pi1 / pi2 = thetaH0 calculated. logical vector length 1. thetaH0 difference assumed effect H0. numeric vector length 1. normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. pi1 assumed probability probabilities active treatment group two-group designs, alternative probability one-group design. pi2 assumed probability reference group two-group designs. numeric vector length 1 containing value 0 1. groups group numbers. numeric vector. pi1H1 assumed probability active treatment group two-group designs, assumed probability one treatment group design, conditional power calculated. numeric vector length 1 containing value 0 1. pi2H1 assumed probability reference group two-group designs, conditional power calculated. numeric vector length 1 containing value 0 1. effect effect randomly creating normally distributed responses. numeric vector length kMax. earlyStop probability stopping trial either efficacy futility. numeric vector. sampleSizes sample sizes group stage. numeric vector length number stages times number groups containing whole numbers. overallReject overall rejection probability. numeric vector. rejectPerStage probability reject hypothesis per stage trial. numeric matrix. conditionalPowerAchieved calculated conditional power, assumption observed assumed effect sizes. numeric matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for Simulation Results Survival — SimulationResultsSurvival","title":"Class for Simulation Results Survival — SimulationResultsSurvival","text":"class simulation results survival.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsSurvival.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class for Simulation Results Survival — SimulationResultsSurvival","text":"Use getSimulationSurvival() create object type. SimulationResultsSurvival basic class SimulationResultsSurvival, SimulationResultsMultiArmSurvival, SimulationResultsEnrichmentSurvival.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SimulationResultsSurvival.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class for Simulation Results Survival — SimulationResultsSurvival","text":"maxNumberOfIterations number simulation iterations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. conditionalPower conditional power stage trial. numeric vector length 1 containing value 0 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. futilityPerStage per-stage probabilities stopping trial futility. numeric matrix. futilityStop simulation results data set: indicates whether trial stopped futility . directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. plannedEvents Determines number cumulated (overall) events survival designs interim stages planned. two treatment arms, number events treatment arms. multi-arm designs, refers overall number events selected arms plus control. numeric vector length kMax containing whole numbers. minNumberOfEventsPerStage Determines minimum number events per stage data-driven sample size recalculation. numeric vector length kMax containing whole numbers. maxNumberOfEventsPerStage Determines maximum number events per stage data-driven sample size recalculation. numeric vector length kMax containing whole numbers. thetaH1 assumed effect alternative hypothesis. survival designs, refers hazard ratio. numeric vector. calcEventsFunction optional function can entered define event size recalculated. default, recalculation performed conditional power specified minNumberOfEventsPerStage maxNumberOfEventsPerStage. expectedNumberOfEvents expected number events specified alternative. numeric vector. pi1 assumed event rate treatment group. numeric vector length kMax containing values 0 1. pi2 assumed event rate control group. numeric vector length 1 containing value 0 1. median1 assumed median survival time treatment group. numeric vector. median2 assumed median survival time reference group. numeric vector length 1. maxNumberOfSubjects maximum number subjects power calculations. numeric vector. accrualTime assumed accrual time intervals study. numeric vector. accrualIntensity absolute accrual intensities. numeric vector length kMax. dropoutRate1 assumed drop-rate treatment group. numeric vector length 1 containing value 0 1. dropoutRate2 assumed drop-rate control group. numeric vector length 1 containing value 0 1. dropoutTime assumed time drop-rates control treatment group. numeric vector length 1. eventTime assumed time event rates calculated. numeric vector length 1. thetaH0 difference assumed effect H0. numeric vector length 1. allocation1 number subjects assigned treatment 1 subsequent order. numeric vector length 1 containing whole number. allocation2 number subjects assigned treatment 2 subsequent order. numeric vector length 1 containing whole number. kappa shape Weibull distribution kappa!=1. numeric vector length 1. piecewiseSurvivalTime time intervals piecewise definition exponential survival time cumulative distribution function. numeric vector. lambda1 assumed hazard rate treatment group. numeric vector length kMax. lambda2 assumed hazard rate reference group. numeric vector length 1. earlyStop probability stopping trial either efficacy futility. numeric vector. hazardRatio hazard ratios consideration. numeric vector length kMax. studyDuration study duration specified effect size. positive numeric vector. eventsNotAchieved simulated number cases often number events reached. numeric matrix. numberOfSubjects simulation results data set: number subjects consideration interim analysis takes place. numberOfSubjects1 simulation results data set: number subjects consideration treatment arm 1 interim analysis takes place. numberOfSubjects2 simulation results data set: number subjects consideration treatment arm 2 interim analysis takes place. singleEventsPerStage single number events per stage. numeric matrix. cumulativeEventsPerStage cumulative number events per stage. numeric matrix. expectedNumberOfSubjects expected number subjects specified alternative. rejectPerStage probability reject hypothesis per stage trial. numeric matrix. overallReject overall rejection probability. numeric vector. conditionalPowerAchieved calculated conditional power, assumption observed assumed effect sizes. numeric matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Stage Results — StageResults","title":"Basic Stage Results — StageResults","text":"Basic class stage results.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic Stage Results — StageResults","text":"StageResults basic class StageResultsMeans, StageResultsRates, StageResultsSurvival, StageResultsMultiArmMeans, StageResultsMultiArmRates, StageResultsMultiArmSurvival, StageResultsEnrichmentMeans, StageResultsEnrichmentRates, StageResultsEnrichmentSurvival.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResults.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Basic Stage Results — StageResults","text":"stages stage numbers trial. numeric vector length kMax containing whole numbers. testStatistics stage-wise test statistics. numeric vector length kMax. pValues stage-wise p-values. numeric vector length kMax containing values 0 1. combInverseNormal test statistics stages inverse normal test. numeric vector length kMax. combFisher test statistics stages Fisher's combination test. numeric vector length kMax containing values 0 1. effectSizes stage-wise effect sizes. numeric vector length kMax. testActions test decisions stage trial. character vector length kMax. weightsFisher weights Fisher's combination test. numeric vector length kMax. weightsInverseNormal weights inverse normal statistic. numeric vector length kMax.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsEnrichmentMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Stage Results Enrichment Means — StageResultsEnrichmentMeans","title":"Stage Results Enrichment Means — StageResultsEnrichmentMeans","text":"Class stage results enrichment means data","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsEnrichmentMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stage Results Enrichment Means — StageResultsEnrichmentMeans","text":"object created directly; use getStageResults suitable arguments create stage results dataset enrichment means.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsEnrichmentMeans.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Stage Results Enrichment Means — StageResultsEnrichmentMeans","text":"stages stage numbers trial. numeric vector length kMax containing whole numbers. thetaH0 difference assumed effect H0. numeric vector length 1. direction Specifies direction alternative, either \"upper\" \"lower\". applicable one-sided testing. normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. varianceOption Defines way calculate variance multiple (.e., >2) treatment arms population enrichment designs testing means. Available options multiple arms: \"overallPooled\", \"pairwisePooled\", \"notPooled\". Available options enrichment designs: \"pooled\", \"pooledFromFull\", \"notPooled\". intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. testStatistics stage-wise test statistics. numeric vector length kMax. overallTestStatistics overall, .e., cumulated test statistics. numeric vector length kMax. pValues stage-wise p-values. numeric vector length kMax containing values 0 1. overallPValues overall, .e., cumulated p-values. numeric vector length kMax containing values 0 1. overallStDevs overall, .e., cumulative standard deviations. numeric vector length number stages times number groups. overallPooledStDevs overall pooled standard deviations. numeric matrix. separatePValues p-values separate stages. numeric matrix. effectSizes stage-wise effect sizes. numeric vector length kMax. singleStepAdjustedPValues adjusted p-value testing multiple hypotheses per stage trial. stratifiedAnalysis enrichment designs, typically stratified analysis chosen. testing means rates, non-stratified analysis can performed overall data. survival data, stratified analysis possible. logical vector length 1. combInverseNormal test statistics stages inverse normal test. numeric vector length kMax. combFisher test statistics stages Fisher's combination test. numeric vector length kMax containing values 0 1. weightsFisher weights Fisher's combination test. numeric vector length kMax. weightsInverseNormal weights inverse normal statistic. numeric vector length kMax.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsEnrichmentRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Stage Results Enrichment Rates — StageResultsEnrichmentRates","title":"Stage Results Enrichment Rates — StageResultsEnrichmentRates","text":"Class stage results enrichment rates data.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsEnrichmentRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stage Results Enrichment Rates — StageResultsEnrichmentRates","text":"object created directly; use getStageResults suitable arguments create stage results dataset enrichment rates.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsEnrichmentRates.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Stage Results Enrichment Rates — StageResultsEnrichmentRates","text":"stages stage numbers trial. numeric vector length kMax containing whole numbers. testStatistics stage-wise test statistics. numeric vector length kMax. pValues stage-wise p-values. numeric vector length kMax containing values 0 1. combInverseNormal test statistics stages inverse normal test. numeric vector length kMax. combFisher test statistics stages Fisher's combination test. numeric vector length kMax containing values 0 1. effectSizes stage-wise effect sizes. numeric vector length kMax. testActions test decisions stage trial. character vector length kMax. weightsFisher weights Fisher's combination test. numeric vector length kMax. weightsInverseNormal weights inverse normal statistic. numeric vector length kMax.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsEnrichmentSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Stage Results Enrichment Survival — StageResultsEnrichmentSurvival","title":"Stage Results Enrichment Survival — StageResultsEnrichmentSurvival","text":"Class stage results enrichment survival data.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsEnrichmentSurvival.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stage Results Enrichment Survival — StageResultsEnrichmentSurvival","text":"object created directly; use getStageResults suitable arguments create stage results dataset enrichment survival.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsEnrichmentSurvival.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Stage Results Enrichment Survival — StageResultsEnrichmentSurvival","text":"stages stage numbers trial. numeric vector length kMax containing whole numbers. testStatistics stage-wise test statistics. numeric vector length kMax. pValues stage-wise p-values. numeric vector length kMax containing values 0 1. combInverseNormal test statistics stages inverse normal test. numeric vector length kMax. combFisher test statistics stages Fisher's combination test. numeric vector length kMax containing values 0 1. effectSizes stage-wise effect sizes. numeric vector length kMax. testActions test decisions stage trial. character vector length kMax. weightsFisher weights Fisher's combination test. numeric vector length kMax. weightsInverseNormal weights inverse normal statistic. numeric vector length kMax.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Stage Results of Means — StageResultsMeans","title":"Stage Results of Means — StageResultsMeans","text":"Class stage results means.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stage Results of Means — StageResultsMeans","text":"object created directly; use getStageResults suitable arguments create stage results dataset means.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsMeans.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Stage Results of Means — StageResultsMeans","text":"stages stage numbers trial. numeric vector length kMax containing whole numbers. testStatistics stage-wise test statistics. numeric vector length kMax. overallTestStatistics overall, .e., cumulated test statistics. numeric vector length kMax. pValues stage-wise p-values. numeric vector length kMax containing values 0 1. overallPValues overall, .e., cumulated p-values. numeric vector length kMax containing values 0 1. effectSizes stage-wise effect sizes. numeric vector length kMax. testActions test decisions stage trial. character vector length kMax. direction Specifies direction alternative, either \"upper\" \"lower\". applicable one-sided testing. normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. equalVariances Describes variances two treatment groups assumed . logical vector length 1. combFisher test statistics stages Fisher's combination test. numeric vector length kMax containing values 0 1. weightsFisher weights Fisher's combination test. numeric vector length kMax. combInverseNormal test statistics stages inverse normal test. numeric vector length kMax. weightsInverseNormal weights inverse normal statistic. numeric vector length kMax. ... Names dataInput.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsMultiArmMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Stage Results Multi Arm Means — StageResultsMultiArmMeans","title":"Stage Results Multi Arm Means — StageResultsMultiArmMeans","text":"Class stage results multi arm means data","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsMultiArmMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stage Results Multi Arm Means — StageResultsMultiArmMeans","text":"object created directly; use getStageResults suitable arguments create stage results dataset multi arm means.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsMultiArmMeans.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Stage Results Multi Arm Means — StageResultsMultiArmMeans","text":"stages stage numbers trial. numeric vector length kMax containing whole numbers. testStatistics stage-wise test statistics. numeric vector length kMax. pValues stage-wise p-values. numeric vector length kMax containing values 0 1. combInverseNormal test statistics stages inverse normal test. numeric vector length kMax. combFisher test statistics stages Fisher's combination test. numeric vector length kMax containing values 0 1. effectSizes stage-wise effect sizes. numeric vector length kMax. testActions test decisions stage trial. character vector length kMax. weightsFisher weights Fisher's combination test. numeric vector length kMax. weightsInverseNormal weights inverse normal statistic. numeric vector length kMax. combInverseNormal test statistics stages inverse normal test. numeric vector length kMax. combFisher test statistics stages Fisher's combination test. numeric vector length kMax containing values 0 1. overallTestStatistics overall, .e., cumulated test statistics. numeric vector length kMax. overallStDevs overall, .e., cumulative standard deviations. numeric vector length number stages times number groups. overallPooledStDevs overall pooled standard deviations. numeric matrix. overallPValues overall, .e., cumulated p-values. numeric vector length kMax containing values 0 1. testStatistics stage-wise test statistics. numeric vector length kMax. separatePValues p-values separate stages. numeric matrix. effectSizes stage-wise effect sizes. numeric vector length kMax. singleStepAdjustedPValues adjusted p-value testing multiple hypotheses per stage trial. intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. varianceOption Defines way calculate variance multiple (.e., >2) treatment arms population enrichment designs testing means. Available options multiple arms: \"overallPooled\", \"pairwisePooled\", \"notPooled\". Available options enrichment designs: \"pooled\", \"pooledFromFull\", \"notPooled\". normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsMultiArmRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Stage Results Multi Arm Rates — StageResultsMultiArmRates","title":"Stage Results Multi Arm Rates — StageResultsMultiArmRates","text":"Class stage results multi arm rates data","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsMultiArmRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stage Results Multi Arm Rates — StageResultsMultiArmRates","text":"object created directly; use getStageResults suitable arguments create stage results dataset multi arm rates.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsMultiArmRates.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Stage Results Multi Arm Rates — StageResultsMultiArmRates","text":"stages stage numbers trial. numeric vector length kMax containing whole numbers. testStatistics stage-wise test statistics. numeric vector length kMax. pValues stage-wise p-values. numeric vector length kMax containing values 0 1. combInverseNormal test statistics stages inverse normal test. numeric vector length kMax. combFisher test statistics stages Fisher's combination test. numeric vector length kMax containing values 0 1. effectSizes stage-wise effect sizes. numeric vector length kMax. testActions test decisions stage trial. character vector length kMax. weightsFisher weights Fisher's combination test. numeric vector length kMax. weightsInverseNormal weights inverse normal statistic. numeric vector length kMax. combInverseNormal test statistics stages inverse normal test. numeric vector length kMax. combFisher test statistics stages Fisher's combination test. numeric vector length kMax containing values 0 1. overallTestStatistics overall, .e., cumulated test statistics. numeric vector length kMax. overallPValues overall, .e., cumulated p-values. numeric vector length kMax containing values 0 1. testStatistics stage-wise test statistics. numeric vector length kMax. separatePValues p-values separate stages. numeric matrix. effectSizes stage-wise effect sizes. numeric vector length kMax. singleStepAdjustedPValues adjusted p-value testing multiple hypotheses per stage trial. intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsMultiArmSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Stage Results Multi Arm Survival — StageResultsMultiArmSurvival","title":"Stage Results Multi Arm Survival — StageResultsMultiArmSurvival","text":"Class stage results multi arm survival data","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsMultiArmSurvival.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stage Results Multi Arm Survival — StageResultsMultiArmSurvival","text":"object created directly; use getStageResults suitable arguments create stage results dataset multi arm survival.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsMultiArmSurvival.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Stage Results Multi Arm Survival — StageResultsMultiArmSurvival","text":"stages stage numbers trial. numeric vector length kMax containing whole numbers. testStatistics stage-wise test statistics. numeric vector length kMax. pValues stage-wise p-values. numeric vector length kMax containing values 0 1. combInverseNormal test statistics stages inverse normal test. numeric vector length kMax. combFisher test statistics stages Fisher's combination test. numeric vector length kMax containing values 0 1. effectSizes stage-wise effect sizes. numeric vector length kMax. testActions test decisions stage trial. character vector length kMax. weightsFisher weights Fisher's combination test. numeric vector length kMax. weightsInverseNormal weights inverse normal statistic. numeric vector length kMax. combInverseNormal test statistics stages inverse normal test. numeric vector length kMax. combFisher test statistics stages Fisher's combination test. numeric vector length kMax containing values 0 1. overallTestStatistics overall, .e., cumulated test statistics. numeric vector length kMax. overallPValues overall, .e., cumulated p-values. numeric vector length kMax containing values 0 1. testStatistics stage-wise test statistics. numeric vector length kMax. separatePValues p-values separate stages. numeric matrix. effectSizes stage-wise effect sizes. numeric vector length kMax. singleStepAdjustedPValues adjusted p-value testing multiple hypotheses per stage trial. intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Stage Results of Rates — StageResultsRates","title":"Stage Results of Rates — StageResultsRates","text":"Class stage results rates.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stage Results of Rates — StageResultsRates","text":"object created directly; use getStageResults suitable arguments create stage results dataset rates.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsRates.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Stage Results of Rates — StageResultsRates","text":"stages stage numbers trial. numeric vector length kMax containing whole numbers. testStatistics stage-wise test statistics. numeric vector length kMax. overallTestStatistics overall, .e., cumulated test statistics. numeric vector length kMax. pValues stage-wise p-values. numeric vector length kMax containing values 0 1. overallPValues overall, .e., cumulated p-values. numeric vector length kMax containing values 0 1. effectSizes stage-wise effect sizes. numeric vector length kMax. direction Specifies direction alternative, either \"upper\" \"lower\". applicable one-sided testing. testActions test decisions stage trial. character vector length kMax. thetaH0 difference assumed effect H0. numeric vector length 1. normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. weightsFisher weights Fisher's combination test. numeric vector length kMax. weightsInverseNormal weights inverse normal statistic. numeric vector length kMax. combInverseNormal test statistics stages inverse normal test. numeric vector length kMax. combFisher test statistics stages Fisher's combination test. numeric vector length kMax containing values 0 1. ... Names dataInput.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Stage Results of Survival Data — StageResultsSurvival","title":"Stage Results of Survival Data — StageResultsSurvival","text":"Class stage results survival data.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsSurvival.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stage Results of Survival Data — StageResultsSurvival","text":"object created directly; use getStageResults suitable arguments create stage results dataset survival data.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/StageResultsSurvival.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Stage Results of Survival Data — StageResultsSurvival","text":"stages stage numbers trial. numeric vector length kMax containing whole numbers. testStatistics stage-wise test statistics. numeric vector length kMax. overallTestStatistics overall, .e., cumulated test statistics. numeric vector length kMax. separatePValues p-values separate stages. numeric matrix. singleStepAdjustedPValues adjusted p-value testing multiple hypotheses per stage trial. overallPValues overall, .e., cumulated p-values. numeric vector length kMax containing values 0 1. direction Specifies direction alternative, either \"upper\" \"lower\". applicable one-sided testing. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. intersectionTest multiple test used intersection hypotheses closed systems hypotheses. character vector length 1. combInverseNormal test statistics stages inverse normal test. numeric vector length kMax. combFisher test statistics stages Fisher's combination test. numeric vector length kMax containing values 0 1. effectSizes stage-wise effect sizes. numeric vector length kMax. testActions test decisions stage trial. character vector length kMax. thetaH0 difference assumed effect H0. numeric vector length 1. weightsFisher weights Fisher's combination test. numeric vector length kMax. weightsInverseNormal weights inverse normal statistic. numeric vector length kMax. normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. ... Names dataInput.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/SummaryFactory.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Factory — SummaryFactory","title":"Summary Factory — SummaryFactory","text":"Basic class summaries","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Trial Design — TrialDesign","title":"Basic Trial Design — TrialDesign","text":"Basic class trial designs.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic Trial Design — TrialDesign","text":"TrialDesign basic class TrialDesignFisher, TrialDesignGroupSequential, TrialDesignInverseNormal, TrialDesignConditionalDunnett.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesign.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Basic Trial Design — TrialDesign","text":"kMax maximum number stages K. numeric vector length 1 containing whole number. alpha significance level alpha, default 0.025. numeric vector length 1 containing value 0 1. stages stage numbers trial. numeric vector length kMax containing whole numbers. informationRates information rates (must fixed prior trial), default (1:kMax) / kMax. numeric vector length kMax containing values 0 1. userAlphaSpending user defined alpha spending. Contains cumulative alpha-spending (type error rate) interim stage. numeric vector length kMax containing values 0 1. criticalValues critical values stage trial. numeric vector length kMax. stageLevels adjusted significance levels reach significance group sequential design. numeric vector length kMax containing values 0 1. alphaSpent cumulative alpha spent stage. numeric vector length kMax containing values 0 1. bindingFutility TRUE, calculation critical values affected futility bounds futility threshold binding sense study must stopped futility condition reached (default FALSE) logical vector length 1. tolerance numerical tolerance, default 1e-06. numeric vector length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignCharacteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial Design Characteristics — TrialDesignCharacteristics","title":"Trial Design Characteristics — TrialDesignCharacteristics","text":"Class trial design characteristics.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignCharacteristics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trial Design Characteristics — TrialDesignCharacteristics","text":"TrialDesignCharacteristics contains fields required collect characteristics design. object created directly; use getDesignCharacteristics suitable arguments create .","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignCharacteristics.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Trial Design Characteristics — TrialDesignCharacteristics","text":"nFixed sample size fixed (one-stage) design. positive numeric vector. shift shift value group sequential test characteristics. numeric vector length 1. inflationFactor relative increase maximum sample size group sequential design compared fixed sample size case. positive numeric vector length 1. stages stage numbers trial. numeric vector length kMax containing whole numbers. information information stages needed achieve power specified design. numeric vector length kMax. power one-sided power stage trial. numeric vector length kMax containing values 0 1. rejectionProbabilities rejection probabilities treatments arms populations stages. numeric vector. futilityProbabilities overall probabilities stopping trial futility. numeric vector length kMax minus 1 containing values 0 1. averageSampleNumber1 expected sample size H1. positive numeric vector length 1. averageSampleNumber01 expected sample size value H0 H1. positive numeric vector length 1. averageSampleNumber0 expected sample size H0. positive numeric vector length 1.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignConditionalDunnett.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional Dunnett Design — TrialDesignConditionalDunnett","title":"Conditional Dunnett Design — TrialDesignConditionalDunnett","text":"Trial design conditional Dunnett tests.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignConditionalDunnett.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional Dunnett Design — TrialDesignConditionalDunnett","text":"object created directly; use getDesignConditionalDunnett suitable arguments create conditional Dunnett test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignConditionalDunnett.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Conditional Dunnett Design — TrialDesignConditionalDunnett","text":"kMax maximum number stages K. numeric vector length 1 containing whole number. alpha significance level alpha, default 0.025. numeric vector length 1 containing value 0 1. stages stage numbers trial. numeric vector length kMax containing whole numbers. informationRates information rates (must fixed prior trial), default (1:kMax) / kMax. numeric vector length kMax containing values 0 1. userAlphaSpending user defined alpha spending. Contains cumulative alpha-spending (type error rate) interim stage. numeric vector length kMax containing values 0 1. criticalValues critical values stage trial. numeric vector length kMax. stageLevels adjusted significance levels reach significance group sequential design. numeric vector length kMax containing values 0 1. alphaSpent cumulative alpha spent stage. numeric vector length kMax containing values 0 1. bindingFutility TRUE, calculation critical values affected futility bounds futility threshold binding sense study must stopped futility condition reached (default FALSE) logical vector length 1. tolerance numerical tolerance, default 1e-06. numeric vector length 1. informationAtInterim information expected interim, default informationAtInterim = 0.5. numeric vector length 1 containing value 0 1. secondStageConditioning way second stage p-values calculated within closed system hypotheses. FALSE, unconditional adjusted p-values used, otherwise conditional adjusted p-values calculated. logical vector length 1. sided Describes alternative one-sided (1) two-sided (2). numeric vector length 1 containing whole number.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignFisher.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher Design — TrialDesignFisher","title":"Fisher Design — TrialDesignFisher","text":"Trial design Fisher's combination test.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignFisher.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fisher Design — TrialDesignFisher","text":"object created directly; use getDesignFisher suitable arguments create Fisher combination test design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignFisher.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Fisher Design — TrialDesignFisher","text":"kMax maximum number stages K. numeric vector length 1 containing whole number. alpha significance level alpha, default 0.025. numeric vector length 1 containing value 0 1. stages stage numbers trial. numeric vector length kMax containing whole numbers. informationRates information rates (must fixed prior trial), default (1:kMax) / kMax. numeric vector length kMax containing values 0 1. userAlphaSpending user defined alpha spending. Contains cumulative alpha-spending (type error rate) interim stage. numeric vector length kMax containing values 0 1. criticalValues critical values stage trial. numeric vector length kMax. stageLevels adjusted significance levels reach significance group sequential design. numeric vector length kMax containing values 0 1. alphaSpent cumulative alpha spent stage. numeric vector length kMax containing values 0 1. bindingFutility TRUE, calculation critical values affected futility bounds futility threshold binding sense study must stopped futility condition reached (default FALSE) logical vector length 1. tolerance numerical tolerance, default 1e-06. numeric vector length 1. method \"equalAlpha\", \"fullAlpha\", \"noInteraction\", \"userDefinedAlpha\", default \"equalAlpha\". details, see Wassmer, 1999, doi: 10.1002/(SICI)1521-4036(199906)41:3%3C279::AID-BIMJ279%3E3.0.CO;2-V. alpha0Vec stopping futility bounds stage-wise p-values Fisher's combination test. numeric vector length kMax minus 1 containing values 0 1. scale scale Fisher's combination test. Numeric vector length kMax-1 applies Fisher's design unequally spaced information rates. numeric vector length kMax minus 1 containing values 0 1. nonStochasticCurtailment TRUE, stopping rule based phenomenon non-stochastic curtailment rather stochastic reasoning. logical vector length 1. sided Describes alternative one-sided (1) two-sided (2). numeric vector length 1 containing whole number. simAlpha observed alpha error simulations performed. numeric vector length 1 containing value 0 1. iterations number iterations used simulations. numeric vector length 1 containing whole number. seed seed used random number generation. numeric vector length 1.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignGroupSequential.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Sequential Design — TrialDesignGroupSequential","title":"Group Sequential Design — TrialDesignGroupSequential","text":"Trial design group sequential design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignGroupSequential.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Group Sequential Design — TrialDesignGroupSequential","text":"object created directly; use getDesignGroupSequential() suitable arguments create group sequential design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignGroupSequential.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Group Sequential Design — TrialDesignGroupSequential","text":"kMax maximum number stages K. numeric vector length 1 containing whole number. alpha significance level alpha, default 0.025. numeric vector length 1 containing value 0 1. stages stage numbers trial. numeric vector length kMax containing whole numbers. informationRates information rates (must fixed prior trial), default (1:kMax) / kMax. numeric vector length kMax containing values 0 1. userAlphaSpending user defined alpha spending. Contains cumulative alpha-spending (type error rate) interim stage. numeric vector length kMax containing values 0 1. criticalValues critical values stage trial. numeric vector length kMax. stageLevels adjusted significance levels reach significance group sequential design. numeric vector length kMax containing values 0 1. alphaSpent cumulative alpha spent stage. numeric vector length kMax containing values 0 1. bindingFutility TRUE, calculation critical values affected futility bounds futility threshold binding sense study must stopped futility condition reached (default FALSE) logical vector length 1. tolerance numerical tolerance, default 1e-06. numeric vector length 1. typeOfDesign type design. character vector length 1. beta Type II error rate necessary providing sample size calculations  (e.g., getSampleSizeMeans), beta spending function designs, optimum designs, default 0.20. numeric vector length 1 containing value 0 1. deltaWT Delta Wang & Tsiatis Delta class. numeric vector length 1. deltaPT1 Delta1 Pampallona & Tsiatis class rejecting H0 boundaries. numeric vector length 1. deltaPT0 Delta0 Pampallona & Tsiatis class rejecting H1 (accepting H0) boundaries. numeric vector length 1. futilityBounds futility bounds stage trial. numeric vector length kMax. gammaA parameter alpha spending function. numeric vector length 1. gammaB parameter beta spending function. numeric vector length 1. optimizationCriterion optimization criterion optimum design within Wang & Tsiatis class (\"ASNH1\", \"ASNIFH1\", \"ASNsum\"), default \"ASNH1\". sided Describes alternative one-sided (1) two-sided (2). numeric vector length 1 containing whole number. betaSpent cumulative beta level spent stage trial. applicable beta-spending designs. numeric vector length kMax containing values 0 1. typeBetaSpending type beta spending. character vector length 1. userBetaSpending user defined beta spending. Contains cumulative beta-spending interim stage. numeric vector length kMax containing values 0 1. power one-sided power stage trial. numeric vector length kMax containing values 0 1. twoSidedPower Specifies power defined two-sided stage trial. logical vector length 1. constantBoundsHP constant bounds stage kMax - 1 Haybittle & Peto design (default 3). numeric vector length 1. betaAdjustment TRUE, beta spending values linearly adjusted overlapping decision regions futility stopping earlier stages occurs. applicable two-sided beta-spending designs. logical vector length 1. delayedInformation Delay information delayed response designs. numeric vector length kMax minus 1 containing values 0 1. decisionCriticalValues decision critical values stage trial delayed response design. numeric vector length kMax. reversalProbabilities probability switch stopping trial success (futility) reaching non-rejection (rejection) delayed response design. numeric vector length kMax minus 1 containing values 0 1.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignInverseNormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse Normal Design — TrialDesignInverseNormal","title":"Inverse Normal Design — TrialDesignInverseNormal","text":"Trial design inverse normal method.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignInverseNormal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inverse Normal Design — TrialDesignInverseNormal","text":"object created directly; use getDesignInverseNormal() suitable arguments create inverse normal design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignInverseNormal.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Inverse Normal Design — TrialDesignInverseNormal","text":"kMax maximum number stages K. numeric vector length 1 containing whole number. alpha significance level alpha, default 0.025. numeric vector length 1 containing value 0 1. stages stage numbers trial. numeric vector length kMax containing whole numbers. informationRates information rates (must fixed prior trial), default (1:kMax) / kMax. numeric vector length kMax containing values 0 1. userAlphaSpending user defined alpha spending. Contains cumulative alpha-spending (type error rate) interim stage. numeric vector length kMax containing values 0 1. criticalValues critical values stage trial. numeric vector length kMax. stageLevels adjusted significance levels reach significance group sequential design. numeric vector length kMax containing values 0 1. alphaSpent cumulative alpha spent stage. numeric vector length kMax containing values 0 1. bindingFutility TRUE, calculation critical values affected futility bounds futility threshold binding sense study must stopped futility condition reached (default FALSE) logical vector length 1. tolerance numerical tolerance, default 1e-06. numeric vector length 1. typeOfDesign type design. character vector length 1. beta Type II error rate necessary providing sample size calculations  (e.g., getSampleSizeMeans), beta spending function designs, optimum designs, default 0.20. numeric vector length 1 containing value 0 1. deltaWT Delta Wang & Tsiatis Delta class. numeric vector length 1. deltaPT1 Delta1 Pampallona & Tsiatis class rejecting H0 boundaries. numeric vector length 1. deltaPT0 Delta0 Pampallona & Tsiatis class rejecting H1 (accepting H0) boundaries. numeric vector length 1. futilityBounds futility bounds stage trial. numeric vector length kMax. gammaA parameter alpha spending function. numeric vector length 1. gammaB parameter beta spending function. numeric vector length 1. optimizationCriterion optimization criterion optimum design within Wang & Tsiatis class (\"ASNH1\", \"ASNIFH1\", \"ASNsum\"), default \"ASNH1\". sided Describes alternative one-sided (1) two-sided (2). numeric vector length 1 containing whole number. betaSpent cumulative beta level spent stage trial. applicable beta-spending designs. numeric vector length kMax containing values 0 1. typeBetaSpending type beta spending. character vector length 1. userBetaSpending user defined beta spending. Contains cumulative beta-spending interim stage. numeric vector length kMax containing values 0 1. power one-sided power stage trial. numeric vector length kMax containing values 0 1. twoSidedPower Specifies power defined two-sided stage trial. logical vector length 1. constantBoundsHP constant bounds stage kMax - 1 Haybittle & Peto design (default 3). numeric vector length 1. betaAdjustment TRUE, beta spending values linearly adjusted overlapping decision regions futility stopping earlier stages occurs. applicable two-sided beta-spending designs. logical vector length 1. delayedInformation Delay information delayed response designs. numeric vector length kMax minus 1 containing values 0 1. decisionCriticalValues decision critical values stage trial delayed response design. numeric vector length kMax. reversalProbabilities probability switch stopping trial success (futility) reaching non-rejection (rejection) delayed response design. numeric vector length kMax minus 1 containing values 0 1.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignPlan.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Trial Design Plan — TrialDesignPlan","title":"Basic Trial Design Plan — TrialDesignPlan","text":"Basic class trial design plans.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignPlan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic Trial Design Plan — TrialDesignPlan","text":"TrialDesignPlan basic class TrialDesignPlanMeans, TrialDesignPlanRates, TrialDesignPlanSurvival.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignPlanCountData.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial Design Plan Count Data — TrialDesignPlanCountData","title":"Trial Design Plan Count Data — TrialDesignPlanCountData","text":"Trial design plan count data.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignPlanCountData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trial Design Plan Count Data — TrialDesignPlanCountData","text":"object created directly; use getSampleSizeCounts() suitable arguments create design plan dataset rates.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignPlanCountData.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Trial Design Plan Count Data — TrialDesignPlanCountData","text":"thetaH0 difference assumed effect H0. numeric vector length 1. groups group numbers. numeric vector. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. optimumAllocationRatio allocation ratio optimum respect overall sample size given power. logical vector length 1. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. lambda1 assumed hazard rate treatment group. numeric vector length kMax. lambda2 assumed hazard rate reference group. numeric vector length 1. lambda numeric value vector represents assumed rate homogeneous Poisson process pooled treatment groups numeric vector. theta vector standardized effect sizes (theta values). numeric vector. nFixed sample size fixed (one-stage) design. positive numeric vector. nFixed1 sample size treatment arm 1 fixed (one-stage) design. positive numeric vector. nFixed2 sample size treatment arm 2 fixed (one-stage) design. positive numeric vector. maxNumberOfSubjects maximum number subjects power calculations. numeric vector. maxNumberOfSubjects1 maximum number subjects treatment arm 1. numeric vector. maxNumberOfSubjects2 maximum number subjects treatment arm 2. numeric vector. overallReject overall rejection probability. numeric vector. rejectPerStage probability reject hypothesis per stage trial. numeric matrix. futilityStop simulation results data set: indicates whether trial stopped futility . futilityPerStage per-stage probabilities stopping trial futility. numeric matrix. earlyStop probability stopping trial either efficacy futility. numeric vector. overdispersion numeric value represents assumed overdispersion negative binomial distribution numeric vector. fixedExposureTime specified, fixed time exposure per subject count data numeric vector. accrualTime assumed accrual time intervals study. numeric vector. accrualIntensity absolute accrual intensities. numeric vector length kMax. followUpTime assumed follow-time study. numeric vector length 1. calendarTime calendar time numeric vector. expectedStudyDurationH1 expected study duration H1 numeric vector. studyTime study time numeric vector. numberOfSubjects simulation results data set: number subjects consideration interim analysis takes place. expectedNumberOfSubjectsH1 expected number subjects H1. numeric vector. informationOverStages information stages numeric vector. expectedInformationH0 expected information H0 numeric vector. expectedInformationH01 expected information H0/H1 numeric vector. expectedInformationH1 expected information H1 numeric vector. maxInformation maximum information. numeric vector length 1 containing whole number. futilityBoundsPValueScale futility bounds stage trial p-value scale. numeric matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignPlanMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial Design Plan Means — TrialDesignPlanMeans","title":"Trial Design Plan Means — TrialDesignPlanMeans","text":"Trial design plan means.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignPlanMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trial Design Plan Means — TrialDesignPlanMeans","text":"object created directly; use getSampleSizeMeans() suitable arguments create design plan dataset means.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignPlanMeans.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Trial Design Plan Means — TrialDesignPlanMeans","text":"meanRatio Specifies sample size one-sided testing H0: mu1/mu2 = thetaH0 calculated. logical vector length 1. thetaH0 difference assumed effect H0. numeric vector length 1. normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. alternative alternative hypothesis value(s) testing means. numeric vector. stDev standard deviation used sample size power calculation. numeric vector length 1. groups group numbers. numeric vector. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. optimumAllocationRatio allocation ratio optimum respect overall sample size given power. logical vector length 1. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. effect effect randomly creating normally distributed responses. numeric vector length kMax. overallReject overall rejection probability. numeric vector. rejectPerStage probability reject hypothesis per stage trial. numeric matrix. futilityStop simulation results data set: indicates whether trial stopped futility . futilityPerStage per-stage probabilities stopping trial futility. numeric matrix. earlyStop probability stopping trial either efficacy futility. numeric vector. expectedNumberOfSubjects expected number subjects specified alternative. nFixed sample size fixed (one-stage) design. positive numeric vector. nFixed1 sample size treatment arm 1 fixed (one-stage) design. positive numeric vector. nFixed2 sample size treatment arm 2 fixed (one-stage) design. positive numeric vector. informationRates information rates (must fixed prior trial), default (1:kMax) / kMax. numeric vector length kMax containing values 0 1. maxNumberOfSubjects maximum number subjects power calculations. numeric vector. maxNumberOfSubjects1 maximum number subjects treatment arm 1. numeric vector. maxNumberOfSubjects2 maximum number subjects treatment arm 2. numeric vector. numberOfSubjects simulation results data set: number subjects consideration interim analysis takes place. numberOfSubjects1 simulation results data set: number subjects consideration treatment arm 1 interim analysis takes place. numberOfSubjects2 simulation results data set: number subjects consideration treatment arm 2 interim analysis takes place. expectedNumberOfSubjectsH0 expected number subjects H0. numeric vector. expectedNumberOfSubjectsH01 expected number subjects value H0 H1. numeric vector. expectedNumberOfSubjectsH1 expected number subjects H1. numeric vector. criticalValuesEffectScale critical values stage trial effect size scale. criticalValuesEffectScaleLower lower critical values stage trial effect size scale. numeric matrix. criticalValuesEffectScaleUpper upper critical values stage trial effect size scale. numeric matrix. criticalValuesPValueScale critical values stage trial p-value scale. futilityBoundsEffectScale futility bounds stage trial effect size scale. numeric matrix. futilityBoundsEffectScaleLower lower futility bounds stage trial effect size scale. numeric matrix. futilityBoundsEffectScaleUpper upper futility bounds stage trial effect size scale. numeric matrix. futilityBoundsPValueScale futility bounds stage trial p-value scale. numeric matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignPlanRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial Design Plan Rates — TrialDesignPlanRates","title":"Trial Design Plan Rates — TrialDesignPlanRates","text":"Trial design plan rates.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignPlanRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trial Design Plan Rates — TrialDesignPlanRates","text":"object created directly; use getSampleSizeRates() suitable arguments create design plan dataset rates.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignPlanRates.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Trial Design Plan Rates — TrialDesignPlanRates","text":"riskRatio Specifies sample size one-sided testing H0: pi1 / pi2 = thetaH0 calculated. logical vector length 1. thetaH0 difference assumed effect H0. numeric vector length 1. normalApproximation Describes normal approximation used calculating p-values. Default means FALSE TRUE rates hazard ratio. logical vector length 1. conservative Conservative sample size calculation enabled logical vector length 1. pi1 assumed probability probabilities active treatment group two-group designs, alternative probability one-group design. pi2 assumed probability reference group two-group designs. numeric vector length 1 containing value 0 1. groups group numbers. numeric vector. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. optimumAllocationRatio allocation ratio optimum respect overall sample size given power. logical vector length 1. directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. effect effect randomly creating normally distributed responses. numeric vector length kMax. overallReject overall rejection probability. numeric vector. rejectPerStage probability reject hypothesis per stage trial. numeric matrix. futilityStop simulation results data set: indicates whether trial stopped futility . futilityPerStage per-stage probabilities stopping trial futility. numeric matrix. earlyStop probability stopping trial either efficacy futility. numeric vector. expectedNumberOfSubjects expected number subjects specified alternative. nFixed sample size fixed (one-stage) design. positive numeric vector. nFixed1 sample size treatment arm 1 fixed (one-stage) design. positive numeric vector. nFixed2 sample size treatment arm 2 fixed (one-stage) design. positive numeric vector. informationRates information rates (must fixed prior trial), default (1:kMax) / kMax. numeric vector length kMax containing values 0 1. maxNumberOfSubjects maximum number subjects power calculations. numeric vector. maxNumberOfSubjects1 maximum number subjects treatment arm 1. numeric vector. maxNumberOfSubjects2 maximum number subjects treatment arm 2. numeric vector. numberOfSubjects simulation results data set: number subjects consideration interim analysis takes place. numberOfSubjects1 simulation results data set: number subjects consideration treatment arm 1 interim analysis takes place. numberOfSubjects2 simulation results data set: number subjects consideration treatment arm 2 interim analysis takes place. expectedNumberOfSubjectsH0 expected number subjects H0. numeric vector. expectedNumberOfSubjectsH01 expected number subjects value H0 H1. numeric vector. expectedNumberOfSubjectsH1 expected number subjects H1. numeric vector. criticalValuesEffectScale critical values stage trial effect size scale. criticalValuesEffectScaleLower lower critical values stage trial effect size scale. numeric matrix. criticalValuesEffectScaleUpper upper critical values stage trial effect size scale. numeric matrix. criticalValuesPValueScale critical values stage trial p-value scale. futilityBoundsEffectScale futility bounds stage trial effect size scale. numeric matrix. futilityBoundsEffectScaleLower lower futility bounds stage trial effect size scale. numeric matrix. futilityBoundsEffectScaleUpper upper futility bounds stage trial effect size scale. numeric matrix. futilityBoundsPValueScale futility bounds stage trial p-value scale. numeric matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignPlanSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial Design Plan Survival — TrialDesignPlanSurvival","title":"Trial Design Plan Survival — TrialDesignPlanSurvival","text":"Trial design plan survival data.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignPlanSurvival.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trial Design Plan Survival — TrialDesignPlanSurvival","text":"object created directly; use getSampleSizeSurvival() suitable arguments create design plan dataset survival data.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignPlanSurvival.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Trial Design Plan Survival — TrialDesignPlanSurvival","text":"thetaH0 difference assumed effect H0. numeric vector length 1. typeOfComputation type computation used, either \"Schoenfeld\", \"Freedman\", \"HsiehFreedman\". directionUpper Specifies direction alternative, applicable one-sided testing. Default TRUE means larger values test statistics yield smaller p-values. logical vector length 1. pi1 assumed event rate treatment group. numeric vector length kMax containing values 0 1. pi2 assumed event rate control group. numeric vector length 1 containing value 0 1. median1 assumed median survival time treatment group. numeric vector. median2 assumed median survival time reference group. numeric vector length 1. lambda1 assumed hazard rate treatment group. numeric vector length kMax. lambda2 assumed hazard rate reference group. numeric vector length 1. hazardRatio hazard ratios consideration. numeric vector length kMax. maxNumberOfSubjects maximum number subjects power calculations. numeric vector. maxNumberOfSubjects1 maximum number subjects treatment arm 1. numeric vector. maxNumberOfSubjects2 maximum number subjects treatment arm 2. numeric vector. maxNumberOfEvents maximum number events power calculations. positive numeric vector length kMax. allocationRatioPlanned planned allocation ratio (n1 / n2) groups. multi-arm designs, allocation ratio relating active arm(s) control. positive numeric vector length 1. optimumAllocationRatio allocation ratio optimum respect overall sample size given power. logical vector length 1. accountForObservationTimes FALSE, event rates used calculation maximum number subjects. logical vector length 1. eventTime assumed time event rates calculated. numeric vector length 1. accrualTime assumed accrual time intervals study. numeric vector. totalAccrualTime total accrual time, .e., maximum accrualTime. positive numeric vector length 1. accrualIntensity absolute accrual intensities. numeric vector length kMax. accrualIntensityRelative relative accrual intensities. kappa shape Weibull distribution kappa!=1. numeric vector length 1. piecewiseSurvivalTime time intervals piecewise definition exponential survival time cumulative distribution function. numeric vector. followUpTime assumed follow-time study. numeric vector length 1. dropoutRate1 assumed drop-rate treatment group. numeric vector length 1 containing value 0 1. dropoutRate2 assumed drop-rate control group. numeric vector length 1 containing value 0 1. dropoutTime assumed time drop-rates control treatment group. numeric vector length 1. chi calculated event probability end trial. numeric vector. expectedNumberOfEvents expected number events specified alternative. numeric vector. eventsFixed number events fixed sample size design. numeric vector. nFixed sample size fixed (one-stage) design. positive numeric vector. nFixed1 sample size treatment arm 1 fixed (one-stage) design. positive numeric vector. nFixed2 sample size treatment arm 2 fixed (one-stage) design. positive numeric vector. overallReject overall rejection probability. numeric vector. rejectPerStage probability reject hypothesis per stage trial. numeric matrix. futilityStop simulation results data set: indicates whether trial stopped futility . futilityPerStage per-stage probabilities stopping trial futility. numeric matrix. earlyStop probability stopping trial either efficacy futility. numeric vector. informationRates information rates (must fixed prior trial), default (1:kMax) / kMax. numeric vector length kMax containing values 0 1. analysisTime estimated time analysis. numeric matrix. studyDurationH1 study duration alternative hypothesis. positive numeric vector. studyDuration study duration specified effect size. positive numeric vector. maxStudyDuration maximum study duration survival designs. numeric vector. eventsPerStage Deprecated: use singleEventsPerStage cumulativeEventsPerStage instead numeric matrix. singleEventsPerStage single number events per stage. numeric matrix. cumulativeEventsPerStage cumulative number events per stage. numeric matrix. expectedEventsH0 expected number events H0. numeric vector. expectedEventsH01 expected number events value H0 H1. numeric vector. expectedEventsH1 expected number events H1. numeric vector. numberOfSubjects simulation results data set: number subjects consideration interim analysis takes place. numberOfSubjects1 simulation results data set: number subjects consideration treatment arm 1 interim analysis takes place. numberOfSubjects2 simulation results data set: number subjects consideration treatment arm 2 interim analysis takes place. expectedNumberOfSubjectsH1 expected number subjects H1. numeric vector. expectedNumberOfSubjects expected number subjects specified alternative. criticalValuesEffectScale critical values stage trial effect size scale. criticalValuesEffectScaleLower lower critical values stage trial effect size scale. numeric matrix. criticalValuesEffectScaleUpper upper critical values stage trial effect size scale. numeric matrix. criticalValuesPValueScale critical values stage trial p-value scale. futilityBoundsEffectScale futility bounds stage trial effect size scale. numeric matrix. futilityBoundsEffectScaleLower lower futility bounds stage trial effect size scale. numeric matrix. futilityBoundsEffectScaleUpper upper futility bounds stage trial effect size scale. numeric matrix. futilityBoundsPValueScale futility bounds stage trial p-value scale. numeric matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for trial design sets. — TrialDesignSet","title":"Class for trial design sets. — TrialDesignSet","text":"TrialDesignSet class creating collection different trial designs.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class for trial design sets. — TrialDesignSet","text":"object created directly; better use getDesignSet() suitable arguments create set designs.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/TrialDesignSet.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class for trial design sets. — TrialDesignSet","text":"designs trial designs compared. design trial design. variedParameters character vector containing names parameters vary designs.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.AnalysisResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce AnalysisResults to a Data Frame — as.data.frame.AnalysisResults","title":"Coerce AnalysisResults to a Data Frame — as.data.frame.AnalysisResults","text":"Returns AnalysisResults object data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.AnalysisResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce AnalysisResults to a Data Frame — as.data.frame.AnalysisResults","text":"","code":"# S3 method for class 'AnalysisResults' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   ...,   niceColumnNamesEnabled = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.AnalysisResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce AnalysisResults to a Data Frame — as.data.frame.AnalysisResults","text":"x AnalysisResults object created getAnalysisResults(). ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. niceColumnNamesEnabled Logical. TRUE, nice looking column names used; syntactic names (variable names) otherwise (see make.names).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.AnalysisResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce AnalysisResults to a Data Frame — as.data.frame.AnalysisResults","text":"Returns data.frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.AnalysisResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce AnalysisResults to a Data Frame — as.data.frame.AnalysisResults","text":"Coerces analysis results data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.ParameterSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce Parameter Set to a Data Frame — as.data.frame.ParameterSet","title":"Coerce Parameter Set to a Data Frame — as.data.frame.ParameterSet","text":"Returns ParameterSet data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.ParameterSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce Parameter Set to a Data Frame — as.data.frame.ParameterSet","text":"","code":"# S3 method for class 'ParameterSet' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   ...,   niceColumnNamesEnabled = FALSE,   includeAllParameters = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.ParameterSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce Parameter Set to a Data Frame — as.data.frame.ParameterSet","text":"x FieldSet object. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. niceColumnNamesEnabled Logical. TRUE, nice looking column names used; syntactic names (variable names) otherwise (see make.names). includeAllParameters Logical. TRUE, available parameters included data frame; meaningful parameter selection otherwise, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.ParameterSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce Parameter Set to a Data Frame — as.data.frame.ParameterSet","text":"Returns data.frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.ParameterSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce Parameter Set to a Data Frame — as.data.frame.ParameterSet","text":"Coerces parameter set data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.PowerAndAverageSampleNumberResult.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce Power And Average Sample Number Result to a Data Frame — as.data.frame.PowerAndAverageSampleNumberResult","title":"Coerce Power And Average Sample Number Result to a Data Frame — as.data.frame.PowerAndAverageSampleNumberResult","text":"Returns PowerAndAverageSampleNumberResult data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.PowerAndAverageSampleNumberResult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce Power And Average Sample Number Result to a Data Frame — as.data.frame.PowerAndAverageSampleNumberResult","text":"","code":"# S3 method for class 'PowerAndAverageSampleNumberResult' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   niceColumnNamesEnabled = FALSE,   includeAllParameters = FALSE,   ... )"},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.PowerAndAverageSampleNumberResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce Power And Average Sample Number Result to a Data Frame — as.data.frame.PowerAndAverageSampleNumberResult","text":"x PowerAndAverageSampleNumberResult object. niceColumnNamesEnabled Logical. TRUE, nice looking column names used; syntactic names (variable names) otherwise (see make.names). includeAllParameters Logical. TRUE, available parameters included data frame; meaningful parameter selection otherwise, default FALSE. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.PowerAndAverageSampleNumberResult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce Power And Average Sample Number Result to a Data Frame — as.data.frame.PowerAndAverageSampleNumberResult","text":"Returns data.frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.PowerAndAverageSampleNumberResult.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce Power And Average Sample Number Result to a Data Frame — as.data.frame.PowerAndAverageSampleNumberResult","text":"Coerces PowerAndAverageSampleNumberResult object data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.PowerAndAverageSampleNumberResult.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce Power And Average Sample Number Result to a Data Frame — as.data.frame.PowerAndAverageSampleNumberResult","text":"","code":"if (FALSE) { # \\dontrun{ data <- as.data.frame(getPowerAndAverageSampleNumber(getDesignGroupSequential())) head(data) dim(data) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.StageResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce Stage Results to a Data Frame — as.data.frame.StageResults","title":"Coerce Stage Results to a Data Frame — as.data.frame.StageResults","text":"Returns StageResults data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.StageResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce Stage Results to a Data Frame — as.data.frame.StageResults","text":"","code":"# S3 method for class 'StageResults' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   niceColumnNamesEnabled = FALSE,   includeAllParameters = FALSE,   type = 1,   ... )"},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.StageResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce Stage Results to a Data Frame — as.data.frame.StageResults","text":"x StageResults object. niceColumnNamesEnabled Logical. TRUE, nice looking column names used; syntactic names (variable names) otherwise (see make.names). includeAllParameters Logical. TRUE, available parameters included data frame; meaningful parameter selection otherwise, default FALSE. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.StageResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce Stage Results to a Data Frame — as.data.frame.StageResults","text":"Returns data.frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.StageResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce Stage Results to a Data Frame — as.data.frame.StageResults","text":"Coerces stage results data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce TrialDesign to a Data Frame — as.data.frame.TrialDesign","title":"Coerce TrialDesign to a Data Frame — as.data.frame.TrialDesign","text":"Returns TrialDesign data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce TrialDesign to a Data Frame — as.data.frame.TrialDesign","text":"","code":"# S3 method for class 'TrialDesign' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   niceColumnNamesEnabled = FALSE,   includeAllParameters = FALSE,   ... )"},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce TrialDesign to a Data Frame — as.data.frame.TrialDesign","text":"x TrialDesign object. niceColumnNamesEnabled Logical. TRUE, nice looking column names used; syntactic names (variable names) otherwise (see make.names). includeAllParameters Logical. TRUE, available parameters included data frame; meaningful parameter selection otherwise, default FALSE. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce TrialDesign to a Data Frame — as.data.frame.TrialDesign","text":"Returns data.frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce TrialDesign to a Data Frame — as.data.frame.TrialDesign","text":"element TrialDesign converted column data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce TrialDesign to a Data Frame — as.data.frame.TrialDesign","text":"","code":"if (FALSE) { # \\dontrun{ as.data.frame(getDesignGroupSequential()) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignCharacteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce TrialDesignCharacteristics to a Data Frame — as.data.frame.TrialDesignCharacteristics","title":"Coerce TrialDesignCharacteristics to a Data Frame — as.data.frame.TrialDesignCharacteristics","text":"Returns TrialDesignCharacteristics data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce TrialDesignCharacteristics to a Data Frame — as.data.frame.TrialDesignCharacteristics","text":"","code":"# S3 method for class 'TrialDesignCharacteristics' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   niceColumnNamesEnabled = FALSE,   includeAllParameters = FALSE,   ... )"},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce TrialDesignCharacteristics to a Data Frame — as.data.frame.TrialDesignCharacteristics","text":"x TrialDesignCharacteristics object. niceColumnNamesEnabled Logical. TRUE, nice looking column names used; syntactic names (variable names) otherwise (see make.names). includeAllParameters Logical. TRUE, available parameters included data frame; meaningful parameter selection otherwise, default FALSE. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce TrialDesignCharacteristics to a Data Frame — as.data.frame.TrialDesignCharacteristics","text":"Returns data.frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignCharacteristics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce TrialDesignCharacteristics to a Data Frame — as.data.frame.TrialDesignCharacteristics","text":"element TrialDesignCharacteristics converted column data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignCharacteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce TrialDesignCharacteristics to a Data Frame — as.data.frame.TrialDesignCharacteristics","text":"","code":"if (FALSE) { # \\dontrun{ as.data.frame(getDesignCharacteristics(getDesignGroupSequential())) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignPlan.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce Trial Design Plan to a Data Frame — as.data.frame.TrialDesignPlan","title":"Coerce Trial Design Plan to a Data Frame — as.data.frame.TrialDesignPlan","text":"Returns TrialDesignPlan data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignPlan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce Trial Design Plan to a Data Frame — as.data.frame.TrialDesignPlan","text":"","code":"# S3 method for class 'TrialDesignPlan' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   niceColumnNamesEnabled = FALSE,   includeAllParameters = FALSE,   ... )"},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignPlan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce Trial Design Plan to a Data Frame — as.data.frame.TrialDesignPlan","text":"x TrialDesignPlan object. niceColumnNamesEnabled Logical. TRUE, nice looking column names used; syntactic names (variable names) otherwise (see make.names). includeAllParameters Logical. TRUE, available parameters included data frame; meaningful parameter selection otherwise, default FALSE. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignPlan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce Trial Design Plan to a Data Frame — as.data.frame.TrialDesignPlan","text":"Returns data.frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignPlan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce Trial Design Plan to a Data Frame — as.data.frame.TrialDesignPlan","text":"Coerces design plan data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignPlan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce Trial Design Plan to a Data Frame — as.data.frame.TrialDesignPlan","text":"","code":"if (FALSE) { # \\dontrun{ as.data.frame(getSampleSizeMeans()) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce Trial Design Set to a Data Frame — as.data.frame.TrialDesignSet","title":"Coerce Trial Design Set to a Data Frame — as.data.frame.TrialDesignSet","text":"Returns TrialDesignSet data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce Trial Design Set to a Data Frame — as.data.frame.TrialDesignSet","text":"","code":"# S3 method for class 'TrialDesignSet' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   niceColumnNamesEnabled = FALSE,   includeAllParameters = FALSE,   addPowerAndAverageSampleNumber = FALSE,   theta = seq(-1, 1, 0.02),   nMax = NA_integer_,   ... )"},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce Trial Design Set to a Data Frame — as.data.frame.TrialDesignSet","text":"x TrialDesignSet object. niceColumnNamesEnabled Logical. TRUE, nice looking column names used; syntactic names (variable names) otherwise (see make.names). includeAllParameters Logical. TRUE, available parameters included data frame; meaningful parameter selection otherwise, default FALSE. addPowerAndAverageSampleNumber TRUE, power average sample size added data frame, default FALSE. theta vector standardized effect sizes (theta values), default sequence -1 1. nMax maximum sample size. Must positive integer length 1. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce Trial Design Set to a Data Frame — as.data.frame.TrialDesignSet","text":"Returns data.frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce Trial Design Set to a Data Frame — as.data.frame.TrialDesignSet","text":"Coerces design set data frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.data.frame.TrialDesignSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce Trial Design Set to a Data Frame — as.data.frame.TrialDesignSet","text":"","code":"if (FALSE) { # \\dontrun{ designSet <- getDesignSet(design = getDesignGroupSequential(), alpha = c(0.01, 0.05)) as.data.frame(designSet) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/as.matrix.FieldSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce Field Set to a Matrix — as.matrix.FieldSet","title":"Coerce Field Set to a Matrix — as.matrix.FieldSet","text":"Returns FrameSet matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.matrix.FieldSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce Field Set to a Matrix — as.matrix.FieldSet","text":"","code":"# S3 method for class 'FieldSet' as.matrix(x, ..., enforceRowNames = TRUE, niceColumnNamesEnabled = TRUE)"},{"path":"https://rpact-com.github.io/rpact/reference/as.matrix.FieldSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce Field Set to a Matrix — as.matrix.FieldSet","text":"x FieldSet object. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. enforceRowNames TRUE, row names created depending object type, default TRUE. niceColumnNamesEnabled Logical. TRUE, nice looking column names used; syntactic names (variable names) otherwise (see make.names).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.matrix.FieldSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce Field Set to a Matrix — as.matrix.FieldSet","text":"Returns matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as.matrix.FieldSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce Field Set to a Matrix — as.matrix.FieldSet","text":"Coerces frame set matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as251Normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Algorithm AS 251: Normal Distribution — as251Normal","title":"Algorithm AS 251: Normal Distribution — as251Normal","text":"Calculates Multivariate Normal Distribution Product Correlation Structure published Charles Dunnett, Algorithm 251.1 Appl.Statist. (1989), Vol.38, .3, doi:10.2307/2347754 .","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as251Normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Algorithm AS 251: Normal Distribution — as251Normal","text":"","code":"as251Normal(   lower,   upper,   sigma,   ...,   eps = 1e-06,   errorControl = c(\"strict\", \"halvingIntervals\"),   intervalSimpsonsRule = 0 )"},{"path":"https://rpact-com.github.io/rpact/reference/as251Normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Algorithm AS 251: Normal Distribution — as251Normal","text":"lower Lower limits integration. Array N dimensions upper Upper limits integration. Array N dimensions sigma Values defining correlation structure. Array N dimensions ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. eps desired accuracy. Defaults 1e-06 errorControl error control. set 1, strict error control based fourth derivative used. set zero, error control based halving intervals used intervalSimpsonsRule Interval width Simpson's rule. Value zero caused default .24 used","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as251Normal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Algorithm AS 251: Normal Distribution — as251Normal","text":"multivariate normal vector correlation structure defined rho(,j) = bpd() * bpd(j), computes probability vector falls rectangle n-space error less eps. function calculates bdp value sigma, determines right inf value calls mvnprd.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as251StudentT.html","id":null,"dir":"Reference","previous_headings":"","what":"Algorithm AS 251: Student T Distribution — as251StudentT","title":"Algorithm AS 251: Student T Distribution — as251StudentT","text":"Calculates Multivariate Normal Distribution Product Correlation Structure published Charles Dunnett, Algorithm 251.1 Appl.Statist. (1989), Vol.38, .3, doi:10.2307/2347754 .","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as251StudentT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Algorithm AS 251: Student T Distribution — as251StudentT","text":"","code":"as251StudentT(   lower,   upper,   sigma,   ...,   df,   eps = 1e-06,   errorControl = c(\"strict\", \"halvingIntervals\"),   intervalSimpsonsRule = 0 )"},{"path":"https://rpact-com.github.io/rpact/reference/as251StudentT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Algorithm AS 251: Student T Distribution — as251StudentT","text":"lower Lower limits integration. Array N dimensions upper Upper limits integration. Array N dimensions sigma Values defining correlation structure. Array N dimensions ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. df Degrees Freedom. Use 0 infinite D.F. eps desired accuracy. Defaults 1e-06 errorControl error control. set 1, strict error control based fourth derivative used. set zero, error control based halving intervals used intervalSimpsonsRule Interval width Simpson's rule. Value zero caused default .24 used","code":""},{"path":"https://rpact-com.github.io/rpact/reference/as251StudentT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Algorithm AS 251: Student T Distribution — as251StudentT","text":"multivariate normal vector correlation structure defined rho(,j) = bpd() * bpd(j), computes probability vector falls rectangle n-space error less eps. function calculates bdp value sigma, determines right inf value calls mvstud.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Enrichment Dataset of Means — dataEnrichmentMeans","title":"Enrichment Dataset of Means — dataEnrichmentMeans","text":"dataset containing sample sizes, means, standard deviations two groups. Use getDataset(dataEnrichmentMeans) create dataset object can processed getAnalysisResults().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentMeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enrichment Dataset of Means — dataEnrichmentMeans","text":"","code":"dataEnrichmentMeans"},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentMeans.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Enrichment Dataset of Means — dataEnrichmentMeans","text":"data.frame object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentMeansStratified.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratified Enrichment Dataset of Means — dataEnrichmentMeansStratified","title":"Stratified Enrichment Dataset of Means — dataEnrichmentMeansStratified","text":"dataset containing sample sizes, means, standard deviations two groups. Use getDataset(dataEnrichmentMeansStratified) create dataset object can processed getAnalysisResults().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentMeansStratified.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratified Enrichment Dataset of Means — dataEnrichmentMeansStratified","text":"","code":"dataEnrichmentMeansStratified"},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentMeansStratified.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stratified Enrichment Dataset of Means — dataEnrichmentMeansStratified","text":"data.frame object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Enrichment Dataset of Rates — dataEnrichmentRates","title":"Enrichment Dataset of Rates — dataEnrichmentRates","text":"dataset containing sample sizes events two groups. Use getDataset(dataEnrichmentRates) create dataset object can processed getAnalysisResults().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentRates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enrichment Dataset of Rates — dataEnrichmentRates","text":"","code":"dataEnrichmentRates"},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentRates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Enrichment Dataset of Rates — dataEnrichmentRates","text":"data.frame object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentRatesStratified.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratified Enrichment Dataset of Rates — dataEnrichmentRatesStratified","title":"Stratified Enrichment Dataset of Rates — dataEnrichmentRatesStratified","text":"dataset containing sample sizes events two groups. Use getDataset(dataEnrichmentRatesStratified) create dataset object can processed getAnalysisResults().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentRatesStratified.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratified Enrichment Dataset of Rates — dataEnrichmentRatesStratified","text":"","code":"dataEnrichmentRatesStratified"},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentRatesStratified.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stratified Enrichment Dataset of Rates — dataEnrichmentRatesStratified","text":"data.frame object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Enrichment Dataset of Survival Data — dataEnrichmentSurvival","title":"Enrichment Dataset of Survival Data — dataEnrichmentSurvival","text":"dataset containing log-rank statistics, events, allocation ratios two groups. Use getDataset(dataEnrichmentSurvival) create dataset object can processed getAnalysisResults().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enrichment Dataset of Survival Data — dataEnrichmentSurvival","text":"","code":"dataEnrichmentSurvival"},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentSurvival.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Enrichment Dataset of Survival Data — dataEnrichmentSurvival","text":"data.frame object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentSurvivalStratified.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratified Enrichment Dataset of Survival Data — dataEnrichmentSurvivalStratified","title":"Stratified Enrichment Dataset of Survival Data — dataEnrichmentSurvivalStratified","text":"dataset containing log-rank statistics, events, allocation ratios two groups. Use getDataset(dataEnrichmentSurvivalStratified) create dataset object can processed getAnalysisResults().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentSurvivalStratified.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratified Enrichment Dataset of Survival Data — dataEnrichmentSurvivalStratified","text":"","code":"dataEnrichmentSurvivalStratified"},{"path":"https://rpact-com.github.io/rpact/reference/dataEnrichmentSurvivalStratified.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stratified Enrichment Dataset of Survival Data — dataEnrichmentSurvivalStratified","text":"data.frame object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"One-Arm Dataset of Means — dataMeans","title":"One-Arm Dataset of Means — dataMeans","text":"dataset containing sample sizes, means, standard deviations one group. Use getDataset(dataMeans) create dataset object can processed getAnalysisResults().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataMeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-Arm Dataset of Means — dataMeans","text":"","code":"dataMeans"},{"path":"https://rpact-com.github.io/rpact/reference/dataMeans.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"One-Arm Dataset of Means — dataMeans","text":"data.frame object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataMultiArmMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-Arm Dataset of Means — dataMultiArmMeans","title":"Multi-Arm Dataset of Means — dataMultiArmMeans","text":"dataset containing sample sizes, means, standard deviations four groups. Use getDataset(dataMultiArmMeans) create dataset object can processed getAnalysisResults().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataMultiArmMeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-Arm Dataset of Means — dataMultiArmMeans","text":"","code":"dataMultiArmMeans"},{"path":"https://rpact-com.github.io/rpact/reference/dataMultiArmMeans.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Multi-Arm Dataset of Means — dataMultiArmMeans","text":"data.frame object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataMultiArmRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-Arm Dataset of Rates — dataMultiArmRates","title":"Multi-Arm Dataset of Rates — dataMultiArmRates","text":"dataset containing sample sizes events three groups. Use getDataset(dataMultiArmRates) create dataset object can processed getAnalysisResults().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataMultiArmRates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-Arm Dataset of Rates — dataMultiArmRates","text":"","code":"dataMultiArmRates"},{"path":"https://rpact-com.github.io/rpact/reference/dataMultiArmRates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Multi-Arm Dataset of Rates — dataMultiArmRates","text":"data.frame object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataMultiArmSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-Arm Dataset of Survival Data — dataMultiArmSurvival","title":"Multi-Arm Dataset of Survival Data — dataMultiArmSurvival","text":"dataset containing log-rank statistics, events, allocation ratios three groups. Use getDataset(dataMultiArmSurvival) create dataset object can processed getAnalysisResults().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataMultiArmSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-Arm Dataset of Survival Data — dataMultiArmSurvival","text":"","code":"dataMultiArmSurvival"},{"path":"https://rpact-com.github.io/rpact/reference/dataMultiArmSurvival.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Multi-Arm Dataset of Survival Data — dataMultiArmSurvival","text":"data.frame object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataRates.html","id":null,"dir":"Reference","previous_headings":"","what":"One-Arm Dataset of Rates — dataRates","title":"One-Arm Dataset of Rates — dataRates","text":"dataset containing sample sizes events one group. Use getDataset(dataRates) create dataset object can processed getAnalysisResults().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataRates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-Arm Dataset of Rates — dataRates","text":"","code":"dataRates"},{"path":"https://rpact-com.github.io/rpact/reference/dataRates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"One-Arm Dataset of Rates — dataRates","text":"data.frame object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"One-Arm Dataset of Survival Data — dataSurvival","title":"One-Arm Dataset of Survival Data — dataSurvival","text":"dataset containing log-rank statistics, events, allocation ratios one group. Use getDataset(dataSurvival) create dataset object can processed getAnalysisResults().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/dataSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-Arm Dataset of Survival Data — dataSurvival","text":"","code":"dataSurvival"},{"path":"https://rpact-com.github.io/rpact/reference/dataSurvival.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"One-Arm Dataset of Survival Data — dataSurvival","text":"data.frame object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/fetch.ParameterSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a single parameter — obtain","title":"Extract a single parameter — obtain","text":"Fetch parameter parameter set.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/fetch.ParameterSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a single parameter — obtain","text":"","code":"obtain(x, ..., output)  # S3 method for class 'ParameterSet' obtain(x, ..., output = c(\"named\", \"labeled\", \"value\", \"list\"))  fetch(x, ..., output)  # S3 method for class 'ParameterSet' fetch(x, ..., output = c(\"named\", \"labeled\", \"value\", \"list\"))"},{"path":"https://rpact-com.github.io/rpact/reference/fetch.ParameterSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a single parameter — obtain","text":"x ParameterSet object fetch . ... One variables specified : literal variable name positive integer, giving position counting left negative integer, giving position counting right. default returns last parameter. argument taken expression supports quasiquotation (can unquote column names column locations). output character defining output type follows: \"named\" (default) returns named value value single value, value inside named list otherwise \"value\" returns value \"list\" returns value inside named list","code":""},{"path":"https://rpact-com.github.io/rpact/reference/fetch.ParameterSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a single parameter — obtain","text":"","code":"if (FALSE) { # \\dontrun{ getDesignInverseNormal() |> fetch(kMax) getDesignInverseNormal() |> fetch(kMax, output = \"list\") } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getAccrualTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Accrual Time — getAccrualTime","title":"Get Accrual Time — getAccrualTime","text":"Returns AccrualTime object contains accrual time accrual intensity.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getAccrualTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Accrual Time — getAccrualTime","text":"","code":"getAccrualTime(   accrualTime = NA_real_,   ...,   accrualIntensity = NA_real_,   accrualIntensityType = c(\"auto\", \"absolute\", \"relative\"),   maxNumberOfSubjects = NA_real_ )"},{"path":"https://rpact-com.github.io/rpact/reference/getAccrualTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Accrual Time — getAccrualTime","text":"accrualTime assumed accrual time intervals study, default c(0, 12) (details see getAccrualTime()). ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. accrualIntensity numeric vector accrual intensities, default relative intensity 0.1 (details see getAccrualTime()). accrualIntensityType character value specifying accrual intensity input type. Must one \"auto\", \"absolute\", \"relative\"; default \"auto\", .e., values < 1 type \"relative\", otherwise \"absolute\". maxNumberOfSubjects maximum number subjects.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getAccrualTime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Accrual Time — getAccrualTime","text":"Returns AccrualTime object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getAccrualTime.html","id":"staggered-patient-entry","dir":"Reference","previous_headings":"","what":"Staggered patient entry","title":"Get Accrual Time — getAccrualTime","text":"accrualTime time period subjects' accrual study. can value defines end accrual vector. case, accrualTime can used define non-constant accrual time. , accrualTime vector defines accrual intervals. first element accrualTime must equal 0 , additionally, accrualIntensity needs specified. accrualIntensity value vector (depending length accrualTime) defines intensity subjects enter trial intervals defined accrualTime. accrualTime can also list combines definition accrual time accrual intensity (see examples details). length accrualTime length accrualIntensity (.e., end accrual undefined), maxNumberOfSubjects > 0 needs specified end accrual calculated. case, accrualIntensity number subjects per time unit, .e., absolute accrual intensity. length accrualTime equals length accrualIntensity - 1 (.e., end accrual defined), maxNumberOfSubjects calculated absolute accrual intensity given. elements accrualIntensity smaller 1, accrualIntensity defines relative intensity subjects enter trial. example, accrualIntensity = c(0.1, 0.2) specifies second accrual interval intensity doubled compared first accrual interval. actual (absolute) accrual intensity calculated calculated given maxNumberOfSubjects. Note default accrualIntensity = 0.1 meaning absolute accrual intensity calculated.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getAccrualTime.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Accrual Time — getAccrualTime","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getAccrualTime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Accrual Time — getAccrualTime","text":"","code":"if (FALSE) { # \\dontrun{ # Assume that in a trial the accrual after the first 6 months is doubled # and the total accrual time is 30 months. # Further assume that a total of 1000 subjects are entered in the trial. # The number of subjects to be accrued in the first 6 months and afterwards # is achieved through getAccrualTime(     accrualTime = c(0, 6, 30),     accrualIntensity = c(0.1, 0.2), maxNumberOfSubjects = 1000 )  # The same result is obtained via the list based definition getAccrualTime(     list(         \"0 - <6\"   = 0.1,         \"6 - <=30\" = 0.2     ),     maxNumberOfSubjects = 1000 )  # Calculate the end of accrual at given absolute intensity: getAccrualTime(     accrualTime = c(0, 6),     accrualIntensity = c(18, 36), maxNumberOfSubjects = 1000 )  # Via the list based definition this is getAccrualTime(     list(         \"0 - <6\" = 18,         \">=6\" = 36     ),     maxNumberOfSubjects = 1000 )  # You can use an accrual time object in getSampleSizeSurvival() or # getPowerSurvival(). # For example, if the maximum number of subjects and the follow up # time needs to be calculated for a given effect size: accrualTime <- getAccrualTime(     accrualTime = c(0, 6, 30),     accrualIntensity = c(0.1, 0.2) ) getSampleSizeSurvival(accrualTime = accrualTime, pi1 = 0.4, pi2 = 0.2)  # Or if the power and follow up time needs to be calculated for given # number of events and subjects: accrualTime <- getAccrualTime(     accrualTime = c(0, 6, 30),     accrualIntensity = c(0.1, 0.2), maxNumberOfSubjects = 110 ) getPowerSurvival(     accrualTime = accrualTime, pi1 = 0.4, pi2 = 0.2,     maxNumberOfEvents = 46 )  # How to show accrual time details  # You can use a sample size or power object as argument for the function # getAccrualTime(): sampleSize <- getSampleSizeSurvival(     accrualTime = c(0, 6), accrualIntensity = c(22, 53),     lambda2 = 0.05, hazardRatio = 0.8, followUpTime = 6 ) sampleSize accrualTime <- getAccrualTime(sampleSize) accrualTime } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getAnalysisResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Analysis Results — getAnalysisResults","title":"Get Analysis Results — getAnalysisResults","text":"Calculates returns analysis results specified design data.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getAnalysisResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Analysis Results — getAnalysisResults","text":"","code":"getAnalysisResults(   design,   dataInput,   ...,   directionUpper = NA,   thetaH0 = NA_real_,   nPlanned = NA_real_,   allocationRatioPlanned = 1,   stage = NA_integer_,   maxInformation = NULL,   informationEpsilon = NULL )"},{"path":"https://rpact-com.github.io/rpact/reference/getAnalysisResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Analysis Results — getAnalysisResults","text":"design trial design. dataInput summary data used calculating test results. either element DatasetMeans, DatasetRates, DatasetSurvival created function getDataset(). information see getDataset(). ... arguments passed methods (cf., separate functions \"See Also\" ), e.g., thetaH1 stDevH1 (assumedStDev / assumedStDevs), pi1, pi2, piTreatments, piControl(s) assumed effect size, standard deviation rates calculate conditional power nPlanned specified. survival designs, thetaH1 refers hazard ratio. one-armed trials binary outcome, pi1 can specified, two-armed trials binary outcome, pi1 pi2 can specified referring assumed treatment control rate, respectively. multi-armed enrichment designs, can specify value vector elements referring treatment arms sub-populations, respectively. testing rates, parameters specified piTreatments piControl (multi-arm designs) piTreatments piControls (enrichment designs). specified, conditional power calculated assumption observed effect sizes, standard deviations, rates, hazard ratios. iterations Iterations simulating power Fisher's combination test. power one remaining stages determined Fisher's combination test, estimated via simulation specified iterations, default 1000. seed Seed simulating conditional power Fisher's combination test. See , default random seed. normalApproximation type computation p-values. Default FALSE testing means (.e., t test used) TRUE testing rates hazard ratio. testing rates, normalApproximation = FALSE specified, binomial test (one sample) exact test Fisher (two samples) used calculating p-values. survival setting, normalApproximation = FALSE effect. equalVariances type t test. testing means two treatment groups, either t test assuming variances equal t test without assuming , .e., test Welch-Satterthwaite calculated, default TRUE. intersectionTest Defines multiple test intersection hypotheses closed system hypotheses testing multiple hypotheses. Five options available multi-arm designs: \"Dunnett\", \"Bonferroni\", \"Simes\", \"Sidak\", \"Hierarchical\", default \"Dunnett\". Four options available population enrichment designs: \"SpiessensDebois\" (one subset ), \"Bonferroni\", \"Simes\", \"Sidak\", default \"Simes\". varianceOption Defines way calculate variance multiple treatment arms (> 2) population enrichment designs testing means. multiple arms, three options available: \"overallPooled\", \"pairwisePooled\", \"notPooled\", default \"overallPooled\". enrichment designs, options : \"pooled\", \"pooledFromFull\" (one subset ), \"notPooled\", default \"pooled\". stratifiedAnalysis enrichment designs, typically stratified analysis chosen. testing means rates, also non-stratified analysis based overall data can performed. survival data, stratified analysis possible (see Brannath et al., 2009), default TRUE. directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. count data: bound testing H0: lambda1 / lambda2 = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. nPlanned additional (.e., \"new\" cumulative) sample size planned subsequent stages. argument must vector length equal number remaining stages contain combined sample size treatment groups two groups considered. survival outcomes, contain planned number additional events. multi-arm designs, per-comparison (combined) sample size. enrichment designs, (combined) sample size considered sub-population. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar. stage stage number (optional). Default: total number existing stages data input. maxInformation Positive value specifying maximum information. informationEpsilon Positive integer value specifying absolute information epsilon, defines maximum distance observed information maximum information causes final analysis. Updates final analysis case observed information final analysis smaller (\"-running\") planned maximum information maxInformation, default 0. Alternatively, floating-point number > 0 < 1 can specified define relative information epsilon.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getAnalysisResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Analysis Results — getAnalysisResults","text":"Returns AnalysisResults object. following generics (R generic functions) available result object: names obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getAnalysisResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Analysis Results — getAnalysisResults","text":"Given design dataset, given stage function calculates test results (effect sizes, stage-wise test statistics p-values, overall p-values test statistics, conditional rejection probability (CRP), conditional power, Repeated Confidence Intervals (RCIs), repeated overall p-values, final stage p-values, median unbiased effect estimates, final confidence intervals. designs two treatments arms (multi-arm designs) enrichment designs closed combination test performed. , additionally statistics used closed testing procedure provided. conditional power calculated planned sample size subsequent stages (nPlanned) specified. conditional power calculated either assumption observed effect assumption assumed effect, specified (see ). testing rates two-armed trial, pi1 pi2 typically refer rates treatment control group, respectively. mandatory, however, pi1 pi2 can interchanged. many--one multi-armed trials, piTreatments piControl refer rates treatment arms one control arm, interchanged. piTreatments piControls enrichment designs can principally interchanged, use plural form indicate rates can differently specified sub-populations. Median unbiased effect estimates confidence intervals calculated group sequential design inverse normal combination test design chosen, .e., applicable Fisher's p-value combination test design. inverse normal combination test design two stages, warning informs validity confidence interval theoretically shown sample size change performed. final stage p-value Fisher's combination test calculated two-stage design chosen. Fisher's combination test, conditional power one remaining stages estimated via simulation. Final stage p-values, median unbiased effect estimates, final confidence intervals calculated multi-arm enrichment designs.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getAnalysisResults.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Analysis Results — getAnalysisResults","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getAnalysisResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Analysis Results — getAnalysisResults","text":"","code":"if (FALSE) { # \\dontrun{ # Example 1 One-Sample t Test # Perform an analysis within a three-stage group sequential design with # O'Brien & Fleming boundaries and one-sample data with a continuous outcome # where H0: mu = 1.2 is to be tested dsnGS <- getDesignGroupSequential() dataMeans <- getDataset(     n = c(30, 30),     means = c(1.96, 1.76),     stDevs = c(1.92, 2.01) ) getAnalysisResults(design = dsnGS, dataInput = dataMeans, thetaH0 = 1.2)  # You can obtain the results when performing an inverse normal combination test # with these data by using the commands dsnIN <- getDesignInverseNormal() getAnalysisResults(design = dsnIN, dataInput = dataMeans, thetaH0 = 1.2)  # Example 2 Use Function Approach with Time to Event Data # Perform an analysis within a use function approach according to an # O'Brien & Fleming type use function and survival data where # where H0: hazard ratio = 1 is to be tested. The events were observed # over time and maxInformation = 120, informationEpsilon = 5 specifies # that 116 > 120 - 5 observed events defines the final analysis. design <- getDesignGroupSequential(typeOfDesign = \"asOF\") dataSurvival <- getDataset(     cumulativeEvents = c(33, 72, 116),     cumulativeLogRanks = c(1.33, 1.88, 1.902) ) getAnalysisResults(design,     dataInput = dataSurvival,     maxInformation = 120, informationEpsilon = 5 )  # Example 3 Multi-Arm Design # In a four-stage combination test design with O'Brien & Fleming boundaries # at the first stage the second treatment arm was dropped. With the Bonferroni # intersection test, the results together with the CRP, conditional power # (assuming a total of 40 subjects for each comparison and effect sizes 0.5 # and 0.8 for treatment arm 1 and 3, respectively, and standard deviation 1.2), # RCIs and p-values of a closed adaptive test procedure are # obtained as follows with the given data (treatment arm 4 refers to the # reference group; displayed with summary and plot commands): data <- getDataset(     n1 = c(22, 23),     n2 = c(21, NA),     n3 = c(20, 25),     n4 = c(25, 27),     means1 = c(1.63, 1.51),     means2 = c(1.4, NA),     means3 = c(0.91, 0.95),     means4 = c(0.83, 0.75),     stds1 = c(1.2, 1.4),     stds2 = c(1.3, NA),     stds3 = c(1.1, 1.14),     stds4 = c(1.02, 1.18) ) design <- getDesignInverseNormal(kMax = 4) x <- getAnalysisResults(design,     dataInput = data, intersectionTest = \"Bonferroni\",     nPlanned = c(40, 40), thetaH1 = c(0.5, NA, 0.8), assumedStDevs = 1.2 ) summary(x) if (require(ggplot2)) plot(x, thetaRange = c(0, 0.8)) design <- getDesignConditionalDunnett(secondStageConditioning = FALSE) y <- getAnalysisResults(design,     dataInput = data,     nPlanned = 40, thetaH1 = c(0.5, NA, 0.8), assumedStDevs = 1.2, stage = 1 ) summary(y) if (require(ggplot2)) plot(y, thetaRange = c(0, 0.4))  # Example 4 Enrichment Design # Perform an two-stage enrichment design analysis with O'Brien & Fleming boundaries # where one sub-population (S1) and a full population (F) are considered as primary # analysis sets. At interim, S1 is selected for further analysis and the sample # size is increased accordingly. With the Spiessens & Debois intersection test, # the results of a closed adaptive test procedure together with the CRP, repeated # RCIs and p-values are obtained as follows with the given data (displayed with # summary and plot commands): design <- getDesignInverseNormal(kMax = 2, typeOfDesign = \"OF\") dataS1 <- getDataset(     means1 = c(13.2, 12.8),     means2 = c(11.1, 10.8),     stDev1 = c(3.4, 3.3),     stDev2 = c(2.9, 3.5),     n1 = c(21, 42),     n2 = c(19, 39) ) dataNotS1 <- getDataset(     means1 = c(11.8, NA),     means2 = c(10.5, NA),     stDev1 = c(3.6, NA),     stDev2 = c(2.7, NA),     n1 = c(15, NA),     n2 = c(13, NA) ) dataBoth <- getDataset(S1 = dataS1, R = dataNotS1) x <- getAnalysisResults(design,     dataInput = dataBoth,     intersectionTest = \"SpiessensDebois\",     varianceOption = \"pooledFromFull\",     stratifiedAnalysis = TRUE ) summary(x) if (require(ggplot2)) plot(x, type = 2) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getAvailablePlotTypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Available Plot Types — plotTypes","title":"Get Available Plot Types — plotTypes","text":"Function identify available plot types object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getAvailablePlotTypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Available Plot Types — plotTypes","text":"","code":"plotTypes(   obj,   output = c(\"numeric\", \"caption\", \"numcap\", \"capnum\"),   numberInCaptionEnabled = FALSE )  getAvailablePlotTypes(   obj,   output = c(\"numeric\", \"caption\", \"numcap\", \"capnum\"),   numberInCaptionEnabled = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/getAvailablePlotTypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Available Plot Types — plotTypes","text":"obj object plot types shall identified, e.g. produced getDesignGroupSequential() getSampleSizeMeans(). output output type. Can one c(\"numeric\", \"caption\", \"numcap\", \"capnum\"). numberInCaptionEnabled TRUE, number added caption, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getAvailablePlotTypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Available Plot Types — plotTypes","text":"Returns list option either capnum numcap returns vector  character type option=caption numeric type option=numeric.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getAvailablePlotTypes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Available Plot Types — plotTypes","text":"plotTypes getAvailablePlotTypes() equivalent, .e., plotTypes short form getAvailablePlotTypes(). output: numeric: numeric output caption: caption character output numcap:  list number caption capnum:  list caption number","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getAvailablePlotTypes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Available Plot Types — plotTypes","text":"","code":"if (FALSE) { # \\dontrun{ design <- getDesignInverseNormal(kMax = 2) getAvailablePlotTypes(design, \"numeric\") plotTypes(design, \"caption\") getAvailablePlotTypes(design, \"numcap\") plotTypes(design, \"capnum\") } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getClosedCombinationTestResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Closed Combination Test Results — getClosedCombinationTestResults","title":"Get Closed Combination Test Results — getClosedCombinationTestResults","text":"Calculates returns results closed combination test multi-arm population enrichment designs.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getClosedCombinationTestResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Closed Combination Test Results — getClosedCombinationTestResults","text":"","code":"getClosedCombinationTestResults(stageResults)"},{"path":"https://rpact-com.github.io/rpact/reference/getClosedCombinationTestResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Closed Combination Test Results — getClosedCombinationTestResults","text":"stageResults results given stage, obtained getStageResults().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getClosedCombinationTestResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Closed Combination Test Results — getClosedCombinationTestResults","text":"Returns ClosedCombinationTestResults object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getClosedCombinationTestResults.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Closed Combination Test Results — getClosedCombinationTestResults","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getClosedCombinationTestResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Closed Combination Test Results — getClosedCombinationTestResults","text":"","code":"if (FALSE) { # \\dontrun{ # In a four-stage combination test design with O'Brien & Fleming boundaries # at the first stage the second treatment arm was dropped. With the Bonferroni # intersection test, the results of a closed adaptive test procedure are # obtained as follows with the given data (treatment arm 4 refers to the # reference group): data <- getDataset(     n1 = c(22, 23),     n2 = c(21, NA),     n3 = c(20, 25),     n4 = c(25, 27),     means1 = c(1.63, 1.51),     means2 = c(1.4, NA),     means3 = c(0.91, 0.95),     means4 = c(0.83, 0.75),     stds1 = c(1.2, 1.4),     stds2 = c(1.3, NA),     stds3 = c(1.1, 1.14),     stds4 = c(1.02, 1.18) )  design <- getDesignInverseNormal(kMax = 4) stageResults <- getStageResults(design,     dataInput = data,     intersectionTest = \"Bonferroni\" ) getClosedCombinationTestResults(stageResults) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getClosedConditionalDunnettTestResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Closed Conditional Dunnett Test Results — getClosedConditionalDunnettTestResults","title":"Get Closed Conditional Dunnett Test Results — getClosedConditionalDunnettTestResults","text":"Calculates returns results closed conditional Dunnett test.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getClosedConditionalDunnettTestResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Closed Conditional Dunnett Test Results — getClosedConditionalDunnettTestResults","text":"","code":"getClosedConditionalDunnettTestResults(   stageResults,   ...,   stage = stageResults$stage )"},{"path":"https://rpact-com.github.io/rpact/reference/getClosedConditionalDunnettTestResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Closed Conditional Dunnett Test Results — getClosedConditionalDunnettTestResults","text":"stageResults results given stage, obtained getStageResults(). ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. stage stage number (optional). Default: total number existing stages data input.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getClosedConditionalDunnettTestResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Closed Conditional Dunnett Test Results — getClosedConditionalDunnettTestResults","text":"Returns ClosedCombinationTestResults object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getClosedConditionalDunnettTestResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Closed Conditional Dunnett Test Results — getClosedConditionalDunnettTestResults","text":"performing conditional Dunnett test design must defined function getDesignConditionalDunnett(). See Koenig et al. (2008) Wassmer & Brannath (2016), chapter 11 details test procedure.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getClosedConditionalDunnettTestResults.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Closed Conditional Dunnett Test Results — getClosedConditionalDunnettTestResults","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getClosedConditionalDunnettTestResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Closed Conditional Dunnett Test Results — getClosedConditionalDunnettTestResults","text":"","code":"if (FALSE) { # \\dontrun{ # In a two-stage design a conditional Dunnett test should be performed # where the  unconditional second stage p-values should be used for the # test decision. # At the first stage the second treatment arm was dropped. The results of # a closed conditionsal Dunnett test are obtained as follows with the given # data (treatment arm 4 refers to the reference group): data <- getDataset(     n1 = c(22, 23),     n2 = c(21, NA),     n3 = c(20, 25),     n4 = c(25, 27),     means1 = c(1.63, 1.51),     means2 = c(1.4, NA),     means3 = c(0.91, 0.95),     means4 = c(0.83, 0.75),     stds1 = c(1.2, 1.4),     stds2 = c(1.3, NA),     stds3 = c(1.1, 1.14),     stds4 = c(1.02, 1.18) )  # For getting the results of the closed test procedure, use the following commands: design <- getDesignConditionalDunnett(secondStageConditioning = FALSE) stageResults <- getStageResults(design, dataInput = data) getClosedConditionalDunnettTestResults(stageResults) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getConditionalPower.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Conditional Power — getConditionalPower","title":"Get Conditional Power — getConditionalPower","text":"Calculates returns conditional power.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getConditionalPower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Conditional Power — getConditionalPower","text":"","code":"getConditionalPower(stageResults, ..., nPlanned, allocationRatioPlanned = 1)"},{"path":"https://rpact-com.github.io/rpact/reference/getConditionalPower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Conditional Power — getConditionalPower","text":"stageResults results given stage, obtained getStageResults(). ... (optional) arguments passed: thetaH1 stDevH1 (assumedStDev / assumedStDevs), pi1, pi2, piTreatments, piControl(s) assumed effect size, standard deviation rates calculate conditional power nPlanned specified. survival designs, thetaH1 refers hazard ratio. one-armed trials binary outcome, pi1 can specified, two-armed trials binary outcome, pi1 pi2 can specified referring assumed treatment control rate, respectively. multi-armed enrichment designs, can specify value vector elements referring treatment arms sub-populations, respectively. testing rates, parameters specified piTreatments piControl (multi-arm designs) piTreatments piControls (enrichment designs). specified, conditional power calculated assumption observed effect sizes, standard deviations, rates, hazard ratios. iterations Iterations simulating power Fisher's combination test. power one remaining stages determined Fisher's combination test, estimated via simulation specified iterations, default 1000. seed Seed simulating conditional power Fisher's combination test. See , default random seed. nPlanned additional (.e., \"new\" cumulative) sample size planned subsequent stages. argument must vector length equal number remaining stages contain combined sample size treatment groups two groups considered. survival outcomes, contain planned number additional events. multi-arm designs, per-comparison (combined) sample size. enrichment designs, (combined) sample size considered sub-population. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getConditionalPower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Conditional Power — getConditionalPower","text":"Returns ConditionalPowerResults object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getConditionalPower.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Conditional Power — getConditionalPower","text":"conditional power calculated planned sample size subsequent stages specified. testing rates two-armed trial, pi1 pi2 typically refer rates treatment control group, respectively. mandatory, however, pi1 pi2 can interchanged. many--one multi-armed trials, piTreatments piControl refer rates treatment arms one control arm, interchanged. piTreatments piControls enrichment designs can principally interchanged, use plural form indicate rates can differently specified sub-populations. Fisher's combination test, conditional power one remaining stages estimated via simulation.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getConditionalPower.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Conditional Power — getConditionalPower","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getConditionalPower.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Conditional Power — getConditionalPower","text":"","code":"if (FALSE) { # \\dontrun{ data <- getDataset(     n1     = c(22, 13, 22, 13),     n2     = c(22, 11, 22, 11),     means1 = c(1, 1.1, 1, 1),     means2 = c(1.4, 1.5, 1, 2.5),     stds1  = c(1, 2, 2, 1.3),     stds2  = c(1, 2, 2, 1.3) ) stageResults <- getStageResults(     getDesignGroupSequential(kMax = 4),     dataInput = data, stage = 2, directionUpper = FALSE ) getConditionalPower(stageResults, thetaH1 = -0.4,     nPlanned = c(64, 64), assumedStDev = 1.5,      allocationRatioPlanned = 3 ) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getConditionalRejectionProbabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Conditional Rejection Probabilities — getConditionalRejectionProbabilities","title":"Get Conditional Rejection Probabilities — getConditionalRejectionProbabilities","text":"Calculates conditional rejection probabilities (CRP) given test results.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getConditionalRejectionProbabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Conditional Rejection Probabilities — getConditionalRejectionProbabilities","text":"","code":"getConditionalRejectionProbabilities(stageResults, ...)"},{"path":"https://rpact-com.github.io/rpact/reference/getConditionalRejectionProbabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Conditional Rejection Probabilities — getConditionalRejectionProbabilities","text":"stageResults results given stage, obtained getStageResults(). ... (optional) arguments passed: iterations Iterations simulating conditional rejection probabilities Fisher's combination test. checking purposes, can estimated via simulation specified iterations. seed Seed simulating conditional rejection probabilities Fisher's combination test. See , default random seed.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getConditionalRejectionProbabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Conditional Rejection Probabilities — getConditionalRejectionProbabilities","text":"Returns numeric vector length kMax case multi-arm stage results matrix (column represents stage, row comparison) containing conditional rejection probabilities.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getConditionalRejectionProbabilities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Conditional Rejection Probabilities — getConditionalRejectionProbabilities","text":"conditional rejection probability probability, H0, reject H0 one subsequent (remaining) stages. probability calculated using specified design. testing rates survival design, normal approximation used, .e., calculated use prototype case testing mean normally distributed data known variance. conditional rejection probabilities provided specified stage. Fisher's combination test, can check validity CRP calculation via simulation.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getConditionalRejectionProbabilities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Conditional Rejection Probabilities — getConditionalRejectionProbabilities","text":"","code":"if (FALSE) { # \\dontrun{ # Calculate CRP for a Fisher's combination test design with # two remaining stages and check the results by simulation. design <- getDesignFisher(     kMax = 4, alpha = 0.01,     informationRates = c(0.1, 0.3, 0.8, 1) ) data <- getDataset(n = c(40, 40), events = c(20, 22)) sr <- getStageResults(design, data, thetaH0 = 0.4) getConditionalRejectionProbabilities(sr) getConditionalRejectionProbabilities(sr,     simulateCRP = TRUE,     seed = 12345, iterations = 10000 ) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Simulation Data — getData","title":"Get Simulation Data — getData","text":"Returns aggregated simulation data.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Simulation Data — getData","text":"","code":"getData(x)  getData.SimulationResults(x)"},{"path":"https://rpact-com.github.io/rpact/reference/getData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Simulation Data — getData","text":"x SimulationResults object created getSimulationMeans(),getSimulationRates(), getSimulationSurvival(), getSimulationMultiArmMeans(),getSimulationMultiArmRates(), getSimulationMultiArmSurvival().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Simulation Data — getData","text":"Returns data.frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Simulation Data — getData","text":"function can used get aggregated simulated data simulation results object, example, obtained getSimulationSurvival(). case, data frame contains following columns: iterationNumber: number simulation iteration. stageNumber: stage. pi1: assumed derived event rate treatment group. pi2: assumed derived event rate control group. hazardRatio: hazard ratio consideration (available). analysisTime: analysis time. numberOfSubjects: number subjects consideration (interim) analysis takes place. eventsPerStage1: observed number events per stage treatment group 1. eventsPerStage2: observed number events per stage treatment group 2. eventsPerStage: observed number events per stage treatment groups. rejectPerStage: 1 null hypothesis can rejected, 0 otherwise. eventsNotAchieved: 1 number events reached observed number subjects, 0 otherwise. futilityPerStage: 1 study stopped futility, 0 otherwise. testStatistic: test statistic used test decision, depends design chosen (group sequential, inverse normal, Fisher combination test)' logRankStatistic: Z-score statistic corresponds one-sided log-rank test considered stage. conditionalPowerAchieved: conditional power subsequent stage trial selected sample size effect. effect either estimated data can user defined thetaH1 pi1H1 pi2H1. trialStop: TRUE study stopped efficacy futility final stage, FALSE otherwise. hazardRatioEstimateLR: estimated hazard ratio, derived log-rank statistic. subset variables provided getSimulationMeans(), getSimulationRates(), getSimulationMultiArmMeans(),getSimulationMultiArmRates(), getSimulationMultiArmSurvival().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Simulation Data — getData","text":"","code":"if (FALSE) { # \\dontrun{ results <- getSimulationSurvival(     pi1 = seq(0.3, 0.6, 0.1), pi2 = 0.3, eventTime = 12,     accrualTime = 24, plannedEvents = 40, maxNumberOfSubjects = 200,     maxNumberOfIterations = 50 ) data <- getData(results) head(data) dim(data) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Dataset — getDataset","title":"Get Dataset — getDataset","text":"Creates dataset object returns .","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Dataset — getDataset","text":"","code":"getDataset(..., floatingPointNumbersEnabled = FALSE)  getDataSet(..., floatingPointNumbersEnabled = FALSE)"},{"path":"https://rpact-com.github.io/rpact/reference/getDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Dataset — getDataset","text":"... data.frame data vectors defining dataset. floatingPointNumbersEnabled TRUE, sample sizes event numbers can specified floating-point numbers (make sense, e.g., theoretical comparisons);  default floatingPointNumbersEnabled = FALSE, .e., samples sizes event numbers defined floating-point numbers truncated.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Dataset — getDataset","text":"Returns Dataset object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Dataset — getDataset","text":"different dataset types DatasetMeans, DatasetRates, DatasetSurvival can created follows: element DatasetMeans one sample created getDataset(sampleSizes =, means =, stDevs =) sampleSizes, means, stDevs vectors stage-wise sample sizes, means standard deviations length given number available stages. element DatasetMeans two samples created getDataset(sampleSizes1 =, sampleSizes2 =, means1 =, means2 =,  stDevs1 =, stDevs2 =) sampleSizes1, sampleSizes2, means1, means2, stDevs1, stDevs2 vectors stage-wise sample sizes, means standard deviations two treatment groups length given number available stages. element DatasetRates one sample created getDataset(sampleSizes =, events =) sampleSizes, events vectors stage-wise sample sizes events length given number available stages. element DatasetRates two samples created getDataset(sampleSizes1 =, sampleSizes2 =, events1 =, events2 =) sampleSizes1, sampleSizes2, events1, events2 vectors stage-wise sample sizes events  two treatment groups length given number available stages. element DatasetSurvival created getDataset(events =, logRanks =, allocationRatios =) events, logRanks, allocation ratios stage-wise events, (one-sided) logrank statistics, allocation ratios. element DatasetMeans, DatasetRates, DatasetSurvival one comparison created adding subsequent digits variable names. system can analyze data multi-arm many--one comparison setting group highest index represents control group. Prefix overall[Capital case first letter variable name]... variable names enables entering overall (cumulative) results calculates stage-wise statistics. Since rpact version 3.2, prefix cumulative[Capital case first letter variable name]... cum[Capital case first letter variable name]... can alternatively used . n can used place samplesizes. Note survival design usually overall (cumulative) events logrank test statistics provided output, getDataset(cumulativeEvents=, cumulativeLogRanks =, cumulativeAllocationRatios =)  usual command entering survival data. Note also cumulativeLogranks also z scores Cox regression can used. multi-arm designs, index refers considered comparison. example,   getDataset(events1=c(13, 33), logRanks1 = c(1.23, 1.55), events2 = c(16, NA), logRanks2 = c(1.55, NA))   refers case one active arm (1) considered stages whereas active arm 2 dropped interim. Number events logrank statistics entered corresponding comparison control (see Examples). enrichment designs, comparison two samples provided unstratified (sub-population wise) stratified data input. non-stratified (sub-population wise) data input data sets defined sub-populations S1, S2, ..., F, F refers full populations. Use getDataset(S1 = , S2, ..., F = ) defines data set used getAnalysisResults() (see examples) stratified data input data sets defined strata S1, S12, S2, ..., R, R refers remainder strata union sets full population. Use getDataset(S1 = , S12 = , S2, ..., R = ) defines data set used getAnalysisResults() (see examples) survival data, enrichment designs log-rank statistics can entered stratified log-rank statistics order provide strong control Type error rate. stratified data input, variables specified getDataset() cumEvents, cumExpectedEvents, cumVarianceEvents, cumAllocationRatios overallEvents, overallExpectedEvents, overallVarianceEvents, overallAllocationRatios. , (stratified) log-rank tests independent increments calculated.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Dataset — getDataset","text":"","code":"if (FALSE) { # \\dontrun{ # Create a Dataset of Means (one group): datasetOfMeans <- getDataset(     n      = c(22, 11, 22, 11),     means  = c(1, 1.1, 1, 1),     stDevs = c(1, 2, 2, 1.3) ) datasetOfMeans datasetOfMeans$show(showType = 2)  datasetOfMeans2 <- getDataset(     cumulativeSampleSizes = c(22, 33, 55, 66),     cumulativeMeans = c(1.000, 1.033, 1.020, 1.017),     cumulativeStDevs = c(1.00, 1.38, 1.64, 1.58) ) datasetOfMeans2 datasetOfMeans2$show(showType = 2) as.data.frame(datasetOfMeans2)  # Create a Dataset of Means (two groups): datasetOfMeans3 <- getDataset(     n1 = c(22, 11, 22, 11),     n2 = c(22, 13, 22, 13),     means1  = c(1, 1.1, 1, 1),     means2  = c(1.4, 1.5, 3, 2.5),     stDevs1 = c(1, 2, 2, 1.3),     stDevs2 = c(1, 2, 2, 1.3) ) datasetOfMeans3  datasetOfMeans4 <- getDataset(     cumulativeSampleSizes1 = c(22, 33, 55, 66),     cumulativeSampleSizes2 = c(22, 35, 57, 70),     cumulativeMeans1  = c(1, 1.033, 1.020, 1.017),     cumulativeMeans2  = c(1.4, 1.437, 2.040, 2.126),     cumulativeStDevs1 = c(1, 1.38, 1.64, 1.58),     cumulativeStDevs2 = c(1, 1.43, 1.82, 1.74) ) datasetOfMeans4  df <- data.frame(     stages = 1:4,     n1      = c(22, 11, 22, 11),     n2      = c(22, 13, 22, 13),     means1  = c(1, 1.1, 1, 1),     means2  = c(1.4, 1.5, 3, 2.5),     stDevs1 = c(1, 2, 2, 1.3),     stDevs2 = c(1, 2, 2, 1.3) ) datasetOfMeans5 <- getDataset(df) datasetOfMeans5  # Create a Dataset of Means (three groups) where the comparison of  # treatment arm 1 to control is dropped at the second interim stage: datasetOfMeans6 <- getDataset(    cumN1      = c(22, 33, NA),    cumN2      = c(20, 34, 56),    cumN3      = c(22, 31, 52),    cumMeans1  = c(1.64, 1.54, NA),    cumMeans2  = c(1.7, 1.5, 1.77),    cumMeans3  = c(2.5, 2.06, 2.99),    cumStDevs1 = c(1.5, 1.9, NA),    cumStDevs2 = c(1.3, 1.3, 1.1),    cumStDevs3 = c(1, 1.3, 1.8)) datasetOfMeans6  # Create a Dataset of Rates (one group): datasetOfRates <- getDataset(     n = c(8, 10, 9, 11),      events = c(4, 5, 5, 6) ) datasetOfRates  # Create a Dataset of Rates (two groups): datasetOfRates2 <- getDataset(     n2      = c(8, 10, 9, 11),     n1      = c(11, 13, 12, 13),     events2 = c(3, 5, 5, 6),     events1 = c(10, 10, 12, 12) ) datasetOfRates2  # Create a Dataset of Rates (three groups) where the comparison of  # treatment arm 2 to control is dropped at the first interim stage: datasetOfRates3 <- getDataset(     cumN1      = c(22, 33, 44),     cumN2      = c(20, NA, NA),     cumN3      = c(20, 34, 44),     cumEvents1 = c(11, 14, 22),     cumEvents2 = c(17, NA, NA),     cumEvents3 = c(17, 19, 33)) datasetOfRates3  # Create a Survival Dataset datasetSurvival <- getDataset(     cumEvents = c(8, 15, 19, 31),     cumAllocationRatios = c(1, 1, 1, 2),     cumLogRanks = c(1.52, 1.98, 1.99, 2.11) ) datasetSurvival   # Create a Survival Dataset with four comparisons where treatment # arm 2 was dropped at the first interim stage, and treatment arm 4 # at the second. datasetSurvival2 <- getDataset(     cumEvents1   = c(18, 45, 56),     cumEvents2   = c(22, NA, NA),     cumEvents3   = c(12, 41, 56),     cumEvents4   = c(27, 56, NA),     cumLogRanks1 = c(1.52, 1.98, 1.99),     cumLogRanks2 = c(3.43, NA, NA),     cumLogRanks3 = c(1.45, 1.67, 1.87),     cumLogRanks4 = c(1.12, 1.33, NA) ) datasetSurvival2  # Enrichment: Stratified and unstratified data input # The following data are from one study. Only the first  # (stratified) data input enables a stratified analysis.   # Stratified data input S1 <- getDataset(     sampleSize1 = c(18, 17),      sampleSize2 = c(12, 33),      mean1       = c(125.6, 111.1),      mean2       = c(107.7, 77.7),      stDev1      = c(120.1, 145.6),     stDev2      = c(128.5, 133.3))  S2 <- getDataset(     sampleSize1 = c(11, NA),      sampleSize2 = c(14, NA),      mean1       = c(100.1, NA),      mean2      = c( 68.3, NA),      stDev1      = c(116.8, NA),     stDev2      = c(124.0, NA))  S12 <- getDataset(                sampleSize1 = c(21, 17),      sampleSize2 = c(21, 12),      mean1       = c(135.9, 117.7),      mean2       = c(84.9, 107.7),      stDev1      = c(185.0, 92.3),     stDev2      = c(139.5, 107.7))  R <- getDataset(     sampleSize1 = c(19, NA),      sampleSize2 = c(33, NA),      mean1       = c(142.4, NA),      mean2       = c(77.1, NA),      stDev1      = c(120.6, NA),     stDev2      = c(163.5, NA))  dataEnrichment <- getDataset(S1 = S1, S2 = S2, S12 = S12, R = R) dataEnrichment  # Unstratified data input S1N <- getDataset(     sampleSize1 = c(39, 34),      sampleSize2 = c(33, 45),      stDev1      = c(156.503, 120.084),      stDev2      = c(134.025, 126.502),      mean1       = c(131.146, 114.4),      mean2       = c(93.191, 85.7)) S2N <- getDataset(     sampleSize1 = c(32, NA),      sampleSize2 = c(35, NA),      stDev1      = c(163.645, NA),      stDev2      = c(131.888, NA),     mean1       = c(123.594, NA),      mean2       = c(78.26, NA)) F <- getDataset(     sampleSize1 = c(69, NA),      sampleSize2 = c(80, NA),      stDev1      = c(165.468, NA),      stDev2      = c(143.979, NA),      mean1       = c(129.296, NA),      mean2       = c(82.187, NA)) dataEnrichmentN <- getDataset(S1 = S1N, S2 = S2N, F = F) dataEnrichmentN } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getDesignCharacteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Design Characteristics — getDesignCharacteristics","title":"Get Design Characteristics — getDesignCharacteristics","text":"Calculates characteristics design returns .","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Design Characteristics — getDesignCharacteristics","text":"","code":"getDesignCharacteristics(design = NULL, ...)"},{"path":"https://rpact-com.github.io/rpact/reference/getDesignCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Design Characteristics — getDesignCharacteristics","text":"design trial design. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignCharacteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Design Characteristics — getDesignCharacteristics","text":"Returns TrialDesignCharacteristics object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignCharacteristics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Design Characteristics — getDesignCharacteristics","text":"Calculates inflation factor (), expected reduction sample size H1, H0, value H0 H1. Furthermore, absolute information values calculated prototype case testing H0: mu = 0 H1: mu = 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignCharacteristics.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Design Characteristics — getDesignCharacteristics","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getDesignCharacteristics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Design Characteristics — getDesignCharacteristics","text":"","code":"if (FALSE) { # \\dontrun{ # Calculate design characteristics for a three-stage O'Brien & Fleming  # design at power 90% and compare it with Pocock's design.   getDesignCharacteristics(getDesignGroupSequential(beta = 0.1)) getDesignCharacteristics(getDesignGroupSequential(beta = 0.1, typeOfDesign = \"P\"))  } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getDesignConditionalDunnett.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Design Conditional Dunnett Test — getDesignConditionalDunnett","title":"Get Design Conditional Dunnett Test — getDesignConditionalDunnett","text":"Defines design perform analysis conditional Dunnett test.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignConditionalDunnett.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Design Conditional Dunnett Test — getDesignConditionalDunnett","text":"","code":"getDesignConditionalDunnett(   alpha = 0.025,   informationAtInterim = 0.5,   ...,   secondStageConditioning = TRUE,   directionUpper = NA )"},{"path":"https://rpact-com.github.io/rpact/reference/getDesignConditionalDunnett.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Design Conditional Dunnett Test — getDesignConditionalDunnett","text":"alpha significance level alpha, default 0.025. Must positive numeric length 1. informationAtInterim information expected interim, default informationAtInterim = 0.5. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. secondStageConditioning way second stage p-values calculated within closed system hypotheses. secondStageConditioning = FALSE specified, unconditional adjusted p-values used, otherwise conditional adjusted p-values calculated, default secondStageConditioning = TRUE (details, see Koenig et al., 2008). directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignConditionalDunnett.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Design Conditional Dunnett Test — getDesignConditionalDunnett","text":"Returns TrialDesign object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignConditionalDunnett.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Design Conditional Dunnett Test — getDesignConditionalDunnett","text":"performing conditional Dunnett test design must defined function. can define information fraction way compute second stage p-values design definition, analysis call. See getClosedConditionalDunnettTestResults() example Koenig et al. (2008) Wassmer & Brannath (2016), chapter 11 details test procedure.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignConditionalDunnett.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Design Conditional Dunnett Test — getDesignConditionalDunnett","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getDesignFisher.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Design Fisher — getDesignFisher","title":"Get Design Fisher — getDesignFisher","text":"Performs Fisher's combination test returns critical values design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignFisher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Design Fisher — getDesignFisher","text":"","code":"getDesignFisher(   ...,   kMax = NA_integer_,   alpha = NA_real_,   method = c(\"equalAlpha\", \"fullAlpha\", \"noInteraction\", \"userDefinedAlpha\"),   userAlphaSpending = NA_real_,   alpha0Vec = NA_real_,   informationRates = NA_real_,   sided = 1,   bindingFutility = NA,   directionUpper = NA,   tolerance = 1e-14,   iterations = 0,   seed = NA_real_ )"},{"path":"https://rpact-com.github.io/rpact/reference/getDesignFisher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Design Fisher — getDesignFisher","text":"... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. kMax maximum number stages K. Must positive integer length 1 (default value 3). maximum selectable kMax 20 group sequential inverse normal 6 Fisher combination test designs. alpha significance level alpha, default 0.025. Must positive numeric length 1. method \"equalAlpha\", \"fullAlpha\", \"noInteraction\", \"userDefinedAlpha\", default \"equalAlpha\" (details, see Wassmer, 1999). userAlphaSpending user defined alpha spending. Numeric vector length kMax containing cumulative alpha-spending (Type error rate) interim stage: 0 <= alpha_1 <= ... <= alpha_K <= alpha. alpha0Vec Stopping futility bounds stage-wise p-values. informationRates information rates t_1, ..., t_kMax (must fixed prior trial), default (1:kMax) / kMax. weighted inverse normal design, weights derived w_1 = sqrt(t_1), w_k = sqrt(t_k - t_(k-1)). weighted Fisher's combination test, weights (scales) w_k = sqrt((t_k - t_(k-1)) / t_1) (see documentation). sided alternative one-sided (1) two-sided (2), default 1. Must positive integer length 1. bindingFutility bindingFutility = TRUE specified calculation critical values affected futility bounds (default TRUE). directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. tolerance numerical tolerance, default 1e-14. iterations number simulation iterations, e.g., getDesignFisher(iterations = 100000) checks validity critical values design. default value iterations 0, .e., simulation executed. seed Seed simulating power Fisher's combination test. See , default random seed.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignFisher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Design Fisher — getDesignFisher","text":"Returns TrialDesign object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignFisher.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Design Fisher — getDesignFisher","text":"getDesignFisher() calculates critical values stage levels Fisher's combination test described Bauer (1989), Bauer Koehne (1994), Bauer Roehmel (1995), Wassmer (1999) equally unequally sized stages.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignFisher.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Design Fisher — getDesignFisher","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getDesignFisher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Design Fisher — getDesignFisher","text":"","code":"if (FALSE) { # \\dontrun{ # Calculate critical values for a two-stage Fisher's combination test  # with full level alpha = 0.05 at the final stage and stopping for  # futility bound alpha0 = 0.50, as described in Bauer and Koehne (1994).  getDesignFisher(kMax = 2, method = \"fullAlpha\", alpha = 0.05, alpha0Vec = 0.50)  } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getDesignGroupSequential.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Design Group Sequential — getDesignGroupSequential","title":"Get Design Group Sequential — getDesignGroupSequential","text":"Provides adjusted boundaries defines group sequential design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignGroupSequential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Design Group Sequential — getDesignGroupSequential","text":"","code":"getDesignGroupSequential(   ...,   kMax = NA_integer_,   alpha = NA_real_,   beta = NA_real_,   sided = 1L,   informationRates = NA_real_,   futilityBounds = NA_real_,   typeOfDesign = c(\"OF\", \"P\", \"WT\", \"PT\", \"HP\", \"WToptimum\", \"asP\", \"asOF\", \"asKD\",     \"asHSD\", \"asUser\", \"noEarlyEfficacy\"),   deltaWT = NA_real_,   deltaPT1 = NA_real_,   deltaPT0 = NA_real_,   optimizationCriterion = c(\"ASNH1\", \"ASNIFH1\", \"ASNsum\"),   gammaA = NA_real_,   typeBetaSpending = c(\"none\", \"bsP\", \"bsOF\", \"bsKD\", \"bsHSD\", \"bsUser\"),   userAlphaSpending = NA_real_,   userBetaSpending = NA_real_,   gammaB = NA_real_,   bindingFutility = NA,   directionUpper = NA,   betaAdjustment = NA,   constantBoundsHP = 3,   twoSidedPower = NA,   delayedInformation = NA_real_,   tolerance = 1e-08 )"},{"path":"https://rpact-com.github.io/rpact/reference/getDesignGroupSequential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Design Group Sequential — getDesignGroupSequential","text":"... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. kMax maximum number stages K. Must positive integer length 1 (default value 3). maximum selectable kMax 20 group sequential inverse normal 6 Fisher combination test designs. alpha significance level alpha, default 0.025. Must positive numeric length 1. beta Type II error rate, necessary providing sample size calculations (e.g., getSampleSizeMeans()), beta spending function designs, optimum designs, default 0.20. Must positive numeric length 1. sided alternative one-sided (1) two-sided (2), default 1. Must positive integer length 1. informationRates information rates t_1, ..., t_kMax (must fixed prior trial), default (1:kMax) / kMax. weighted inverse normal design, weights derived w_1 = sqrt(t_1), w_k = sqrt(t_k - t_(k-1)). weighted Fisher's combination test, weights (scales) w_k = sqrt((t_k - t_(k-1)) / t_1) (see documentation). futilityBounds futility bounds, defined test statistic z scale (numeric vector length kMax - 1). typeOfDesign type design. Type design one following: O'Brien & Fleming (\"\"), Pocock (\"P\"), Wang & Tsiatis Delta class (\"WT\"), Pampallona & Tsiatis (\"PT\"), Haybittle & Peto (\"HP\"), Optimum design within Wang & Tsiatis class (\"WToptimum\"), O'Brien & Fleming type alpha spending (\"asOF\"), Pocock type alpha spending (\"asP\"), Kim & DeMets alpha spending (\"asKD\"), Hwang, Shi & DeCani alpha spending (\"asHSD\"), user defined alpha spending (\"asUser\"), early efficacy stop (\"noEarlyEfficacy\"), default \"\". deltaWT Delta Wang & Tsiatis Delta class. deltaPT1 Delta1 Pampallona & Tsiatis class rejecting H0 boundaries. deltaPT0 Delta0 Pampallona & Tsiatis class rejecting H1 boundaries. optimizationCriterion Optimization criterion optimum design within Wang & Tsiatis class (\"ASNH1\", \"ASNIFH1\", \"ASNsum\"), default \"ASNH1\", see details. gammaA Parameter alpha spending function. typeBetaSpending Type beta spending. Type beta spending one following: O'Brien & Fleming type beta spending, Pocock type beta spending, Kim & DeMets beta spending, Hwang, Shi & DeCani beta spending, user defined beta spending (\"bsOF\", \"bsP\", \"bsKD\", \"bsHSD\", \"bsUser\", default \"none\"). userAlphaSpending user defined alpha spending. Numeric vector length kMax containing cumulative alpha-spending (Type error rate) interim stage: 0 <= alpha_1 <= ... <= alpha_K <= alpha. userBetaSpending user defined beta spending. Vector length kMax containing cumulative beta-spending interim stage. gammaB Parameter beta spending function. bindingFutility Logical. bindingFutility = TRUE specified calculation critical values affected futility bounds futility threshold binding sense study must stopped futility condition reached (default FALSE). directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. betaAdjustment two-sided beta spending designs, betaAdjustement = TRUE linear adjustment beta spending values performed overlapping decision regions futility stopping earlier stages occurs, otherwise adjustment performed (default TRUE). constantBoundsHP constant bounds stage kMax - 1 Haybittle & Peto design (default 3). twoSidedPower two-sided testing, twoSidedPower = TRUE specified sample size calculation performed considering tails distribution. Default FALSE, .e., assumed one tail probability equal 0 power directed one part. delayedInformation Delay information delayed response designs. Can numeric value numeric vector length kMax - 1 tolerance numerical tolerance, default 1e-08.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignGroupSequential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Design Group Sequential — getDesignGroupSequential","text":"Returns TrialDesign object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignGroupSequential.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Design Group Sequential — getDesignGroupSequential","text":"Depending typeOfDesign parameters specified, others . example, typeOfDesign \"asHSD\" selected, gammaA needs specified. alpha spending approach specified (\"asOF\", \"asP\", \"asKD\", \"asHSD\", \"asUser\") additionally beta spending function can specified produce futility bounds. optimum designs, \"ASNH1\" minimizes expected sample size H1, \"ASNIFH1\" minimizes sum maximum sample expected sample size H1, \"ASNsum\"  minimizes sum maximum sample size, expected sample size value midway H0 H1, expected sample size H1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignGroupSequential.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Design Group Sequential — getDesignGroupSequential","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getDesignGroupSequential.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Design Group Sequential — getDesignGroupSequential","text":"","code":"if (FALSE) { # \\dontrun{ # Calculate two-sided critical values for a four-stage  # Wang & Tsiatis design with Delta = 0.25 at level alpha = 0.05 getDesignGroupSequential(kMax = 4, alpha = 0.05, sided = 2,      typeOfDesign = \"WT\", deltaWT = 0.25)   # Calculate one-sided critical values and binding futility bounds for a three-stage  # design with alpha- and beta-spending functions according to Kim & DeMets with gamma = 2.5 # (planned informationRates as specified, default alpha = 0.025 and beta = 0.2) getDesignGroupSequential(kMax = 3, informationRates = c(0.3, 0.75, 1),      typeOfDesign = \"asKD\", gammaA = 2.5, typeBetaSpending = \"bsKD\",      gammaB = 2.5, bindingFutility = TRUE)  # Calculate the Pocock type alpha spending critical values if the first  # interim analysis was performed after 40% of the maximum information was observed # and the second after 70% of the maximum information was observed (default alpha = 0.025) getDesignGroupSequential(informationRates = c(0.4, 0.7), typeOfDesign = \"asP\")  } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getDesignInverseNormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Design Inverse Normal — getDesignInverseNormal","title":"Get Design Inverse Normal — getDesignInverseNormal","text":"Provides adjusted boundaries defines group sequential design use inverse normal combination test.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignInverseNormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Design Inverse Normal — getDesignInverseNormal","text":"","code":"getDesignInverseNormal(   ...,   kMax = NA_integer_,   alpha = NA_real_,   beta = NA_real_,   sided = 1L,   informationRates = NA_real_,   futilityBounds = NA_real_,   typeOfDesign = c(\"OF\", \"P\", \"WT\", \"PT\", \"HP\", \"WToptimum\", \"asP\", \"asOF\", \"asKD\",     \"asHSD\", \"asUser\", \"noEarlyEfficacy\"),   deltaWT = NA_real_,   deltaPT1 = NA_real_,   deltaPT0 = NA_real_,   optimizationCriterion = c(\"ASNH1\", \"ASNIFH1\", \"ASNsum\"),   gammaA = NA_real_,   typeBetaSpending = c(\"none\", \"bsP\", \"bsOF\", \"bsKD\", \"bsHSD\", \"bsUser\"),   userAlphaSpending = NA_real_,   userBetaSpending = NA_real_,   gammaB = NA_real_,   bindingFutility = NA,   directionUpper = NA,   betaAdjustment = NA,   constantBoundsHP = 3,   twoSidedPower = NA,   tolerance = 1e-08 )"},{"path":"https://rpact-com.github.io/rpact/reference/getDesignInverseNormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Design Inverse Normal — getDesignInverseNormal","text":"... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. kMax maximum number stages K. Must positive integer length 1 (default value 3). maximum selectable kMax 20 group sequential inverse normal 6 Fisher combination test designs. alpha significance level alpha, default 0.025. Must positive numeric length 1. beta Type II error rate, necessary providing sample size calculations (e.g., getSampleSizeMeans()), beta spending function designs, optimum designs, default 0.20. Must positive numeric length 1. sided alternative one-sided (1) two-sided (2), default 1. Must positive integer length 1. informationRates information rates t_1, ..., t_kMax (must fixed prior trial), default (1:kMax) / kMax. weighted inverse normal design, weights derived w_1 = sqrt(t_1), w_k = sqrt(t_k - t_(k-1)). weighted Fisher's combination test, weights (scales) w_k = sqrt((t_k - t_(k-1)) / t_1) (see documentation). futilityBounds futility bounds, defined test statistic z scale (numeric vector length kMax - 1). typeOfDesign type design. Type design one following: O'Brien & Fleming (\"\"), Pocock (\"P\"), Wang & Tsiatis Delta class (\"WT\"), Pampallona & Tsiatis (\"PT\"), Haybittle & Peto (\"HP\"), Optimum design within Wang & Tsiatis class (\"WToptimum\"), O'Brien & Fleming type alpha spending (\"asOF\"), Pocock type alpha spending (\"asP\"), Kim & DeMets alpha spending (\"asKD\"), Hwang, Shi & DeCani alpha spending (\"asHSD\"), user defined alpha spending (\"asUser\"), early efficacy stop (\"noEarlyEfficacy\"), default \"\". deltaWT Delta Wang & Tsiatis Delta class. deltaPT1 Delta1 Pampallona & Tsiatis class rejecting H0 boundaries. deltaPT0 Delta0 Pampallona & Tsiatis class rejecting H1 boundaries. optimizationCriterion Optimization criterion optimum design within Wang & Tsiatis class (\"ASNH1\", \"ASNIFH1\", \"ASNsum\"), default \"ASNH1\", see details. gammaA Parameter alpha spending function. typeBetaSpending Type beta spending. Type beta spending one following: O'Brien & Fleming type beta spending, Pocock type beta spending, Kim & DeMets beta spending, Hwang, Shi & DeCani beta spending, user defined beta spending (\"bsOF\", \"bsP\", \"bsKD\", \"bsHSD\", \"bsUser\", default \"none\"). userAlphaSpending user defined alpha spending. Numeric vector length kMax containing cumulative alpha-spending (Type error rate) interim stage: 0 <= alpha_1 <= ... <= alpha_K <= alpha. userBetaSpending user defined beta spending. Vector length kMax containing cumulative beta-spending interim stage. gammaB Parameter beta spending function. bindingFutility Logical. bindingFutility = TRUE specified calculation critical values affected futility bounds futility threshold binding sense study must stopped futility condition reached (default FALSE). directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. betaAdjustment two-sided beta spending designs, betaAdjustement = TRUE linear adjustment beta spending values performed overlapping decision regions futility stopping earlier stages occurs, otherwise adjustment performed (default TRUE). constantBoundsHP constant bounds stage kMax - 1 Haybittle & Peto design (default 3). twoSidedPower two-sided testing, twoSidedPower = TRUE specified sample size calculation performed considering tails distribution. Default FALSE, .e., assumed one tail probability equal 0 power directed one part. tolerance numerical tolerance, default 1e-08.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignInverseNormal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Design Inverse Normal — getDesignInverseNormal","text":"Returns TrialDesign object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignInverseNormal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Design Inverse Normal — getDesignInverseNormal","text":"Depending typeOfDesign parameters specified, others . example, typeOfDesign \"asHSD\" selected, gammaA needs specified. alpha spending approach specified (\"asOF\", \"asP\", \"asKD\", \"asHSD\", \"asUser\") additionally beta spending function can specified produce futility bounds. optimum designs, \"ASNH1\" minimizes expected sample size H1, \"ASNIFH1\" minimizes sum maximum sample expected sample size H1, \"ASNsum\"  minimizes sum maximum sample size, expected sample size value midway H0 H1, expected sample size H1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignInverseNormal.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Design Inverse Normal — getDesignInverseNormal","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getDesignInverseNormal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Design Inverse Normal — getDesignInverseNormal","text":"","code":"if (FALSE) { # \\dontrun{ # Calculate two-sided critical values for a four-stage  # Wang & Tsiatis design with Delta = 0.25 at level alpha = 0.05 getDesignInverseNormal(kMax = 4, alpha = 0.05, sided = 2,      typeOfDesign = \"WT\", deltaWT = 0.25)   # Defines a two-stage design at one-sided alpha = 0.025 with provision of early stopping   # if the one-sided p-value exceeds 0.5 at interim and no early stopping for efficacy.  # The futility bound is non-binding. getDesignInverseNormal(kMax = 2, typeOfDesign = \"noEarlyEfficacy\", futilityBounds = 0)    # Calculate one-sided critical values and binding futility bounds for a three-stage  # design with alpha- and beta-spending functions according to Kim & DeMets with gamma = 2.5 # (planned informationRates as specified, default alpha = 0.025 and beta = 0.2) getDesignInverseNormal(kMax = 3, informationRates = c(0.3, 0.75, 1),      typeOfDesign = \"asKD\", gammaA = 2.5, typeBetaSpending = \"bsKD\",      gammaB = 2.5, bindingFutility = TRUE) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getDesignSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Design Set — getDesignSet","title":"Get Design Set — getDesignSet","text":"Creates trial design set object returns .","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Design Set — getDesignSet","text":"","code":"getDesignSet(...)"},{"path":"https://rpact-com.github.io/rpact/reference/getDesignSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Design Set — getDesignSet","text":"... designs design one design parameters, e.g., deltaWT = c(0.1, 0.3, 0.4). design master design (optional, need specify additional parameter shall varied). designs designs compare (optional, need specify variable variedParameters).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Design Set — getDesignSet","text":"Returns TrialDesignSet object. following generics (R generic functions) available result object: names obtain field names, length obtain number design, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Design Set — getDesignSet","text":"Specify master design one design parameters list designs.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignSet.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Design Set — getDesignSet","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getDesignSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Design Set — getDesignSet","text":"","code":"if (FALSE) { # \\dontrun{ # Example 1 design <- getDesignGroupSequential(     alpha = 0.05, kMax = 6,     sided = 2, typeOfDesign = \"WT\", deltaWT = 0.1 ) designSet <- getDesignSet() designSet$add(design = design, deltaWT = c(0.3, 0.4)) if (require(ggplot2)) plot(designSet, type = 1)  # Example 2 (shorter script) design <- getDesignGroupSequential(     alpha = 0.05, kMax = 6,     sided = 2, typeOfDesign = \"WT\", deltaWT = 0.1 ) designSet <- getDesignSet(design = design, deltaWT = c(0.3, 0.4)) if (require(ggplot2)) plot(designSet, type = 1)  # Example 3 (use of designs instead of design) d1 <- getDesignGroupSequential(     alpha = 0.05, kMax = 2,     sided = 1, beta = 0.2, typeOfDesign = \"asHSD\",     gammaA = 0.5, typeBetaSpending = \"bsHSD\", gammaB = 0.5 ) d2 <- getDesignGroupSequential(     alpha = 0.05, kMax = 4,     sided = 1, beta = 0.2, typeOfDesign = \"asP\",     typeBetaSpending = \"bsP\" ) designSet <- getDesignSet(     designs = c(d1, d2),     variedParameters = c(\"typeOfDesign\", \"kMax\") ) if (require(ggplot2)) plot(designSet, type = 8, nMax = 20) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getEventProbabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Event Probabilities — getEventProbabilities","title":"Get Event Probabilities — getEventProbabilities","text":"Returns event probabilities specified parameters given time vector.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getEventProbabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Event Probabilities — getEventProbabilities","text":"","code":"getEventProbabilities(   time,   ...,   accrualTime = c(0, 12),   accrualIntensity = 0.1,   accrualIntensityType = c(\"auto\", \"absolute\", \"relative\"),   kappa = 1,   piecewiseSurvivalTime = NA_real_,   lambda2 = NA_real_,   lambda1 = NA_real_,   allocationRatioPlanned = 1,   hazardRatio = NA_real_,   dropoutRate1 = 0,   dropoutRate2 = 0,   dropoutTime = 12,   maxNumberOfSubjects = NA_real_ )"},{"path":"https://rpact-com.github.io/rpact/reference/getEventProbabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Event Probabilities — getEventProbabilities","text":"time numeric vector time values. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. accrualTime assumed accrual time intervals study, default c(0, 12) (details see getAccrualTime()). accrualIntensity numeric vector accrual intensities, default relative intensity 0.1 (details see getAccrualTime()). accrualIntensityType character value specifying accrual intensity input type. Must one \"auto\", \"absolute\", \"relative\"; default \"auto\", .e., values < 1 type \"relative\", otherwise \"absolute\". kappa numeric value > 0. kappa != 1 used specification shape Weibull distribution. Default 1, .e., exponential survival distribution used instead Weibull distribution. Note Weibull distribution used piecewise definition survival time distribution, .e., piecewiselambda (single value) kappa can specified. function equivalent pweibull(t, shape = kappa, scale = 1 / lambda) stats package, .e., scale parameter 1 / 'hazard rate'. example, getPiecewiseExponentialDistribution(time = 130, piecewiseLambda = 0.01, kappa = 4.2) pweibull(q = 130, shape = 4.2, scale = 1 / 0.01) provide result. piecewiseSurvivalTime vector specifies time intervals piecewise definition exponential survival time cumulative distribution function  (details see getPiecewiseSurvivalTime()). lambda2 assumed hazard rate reference group, default. lambda2 can also used define piecewise exponentially distributed survival times (see details). Must positive numeric length 1. lambda1 assumed hazard rate treatment group, default. lambda1 can also used define piecewise exponentially distributed survival times (see details). Must positive numeric length 1. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. allocationRatioPlanned = 0 entered, optimal allocation ratio yielding smallest overall sample size determined. hazardRatio vector hazard ratios consideration. event hazard rates treatment groups defined, hazard ratio needs specified calculated, default. Must positive numeric length 1. dropoutRate1 assumed drop-rate treatment group, default 0. dropoutRate2 assumed drop-rate control group, default 0. dropoutTime assumed time drop-rates control treatment group, default 12. maxNumberOfSubjects maxNumberOfSubjects > 0 specified, end accrual specified accrualIntensity specified number subjects determined accrualIntensity calculated fixed end accrual.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getEventProbabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Event Probabilities — getEventProbabilities","text":"Returns EventProbabilities object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getEventProbabilities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Event Probabilities — getEventProbabilities","text":"function computes overall event probabilities two treatment groups design. details parameters see getSampleSizeSurvival().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getEventProbabilities.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Event Probabilities — getEventProbabilities","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getEventProbabilities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Event Probabilities — getEventProbabilities","text":"","code":"if (FALSE) { # \\dontrun{ # Calculate event probabilities for staggered subjects' entry, piecewisely defined # survival time and hazards, and plot it. timeVector <- seq(0, 100, 1) y <- getEventProbabilities(timeVector, accrualTime = c(0, 20, 60),      accrualIntensity = c(5, 20),      piecewiseSurvivalTime = c(0, 20, 80),     lambda2 = c(0.02, 0.06, 0.1),      hazardRatio = 2 ) plot(timeVector, y$cumulativeEventProbabilities, type = 'l') } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getFinalConfidenceInterval.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Final Confidence Interval — getFinalConfidenceInterval","title":"Get Final Confidence Interval — getFinalConfidenceInterval","text":"Returns final confidence interval parameter interest. based prototype case, .e., test testing mean normally distributed variables.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getFinalConfidenceInterval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Final Confidence Interval — getFinalConfidenceInterval","text":"","code":"getFinalConfidenceInterval(   design,   dataInput,   ...,   directionUpper = NA,   thetaH0 = NA_real_,   tolerance = 1e-06,   stage = NA_integer_ )"},{"path":"https://rpact-com.github.io/rpact/reference/getFinalConfidenceInterval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Final Confidence Interval — getFinalConfidenceInterval","text":"design trial design. dataInput summary data used calculating test results. either element DatasetMeans, DatasetRates, DatasetSurvival created function getDataset(). information see getDataset(). ... (optional) arguments passed: normalApproximation type computation p-values. Default FALSE testing means (.e., t test used) TRUE testing rates hazard ratio. testing rates, normalApproximation = FALSE specified, binomial test (one sample) exact test Fisher (two samples) used calculating p-values. survival setting, normalApproximation = FALSE effect. equalVariances type t test. testing means two treatment groups, either t test assuming variances equal t test without assuming , .e., test Welch-Satterthwaite calculated, default TRUE. directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. count data: bound testing H0: lambda1 / lambda2 = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. tolerance numerical tolerance, default 1e-06. Must positive numeric length 1. stage stage number (optional). Default: total number existing stages data input.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getFinalConfidenceInterval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Final Confidence Interval — getFinalConfidenceInterval","text":"Returns list containing finalStage, medianUnbiased, finalConfidenceInterval, medianUnbiasedGeneral, finalConfidenceIntervalGeneral.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getFinalConfidenceInterval.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Final Confidence Interval — getFinalConfidenceInterval","text":"Depending design dataInput final confidence interval median unbiased estimate based stage-wise ordering sample space calculated returned. Additionally, non-standardized (\"general\") version provided, estimated standard deviation must used obtain confidence interval parameter interest. inverse normal combination test design two stages, warning informs validity confidence interval theoretically shown sample size change performed.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getFinalConfidenceInterval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Final Confidence Interval — getFinalConfidenceInterval","text":"","code":"if (FALSE) { # \\dontrun{ design <- getDesignInverseNormal(kMax = 2) data <- getDataset(     n = c(20, 30),     means = c(50, 51),     stDevs = c(130, 140) ) getFinalConfidenceInterval(design, dataInput = data) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getFinalPValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Final P Value — getFinalPValue","title":"Get Final P Value — getFinalPValue","text":"Returns final p-value given stage results.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getFinalPValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Final P Value — getFinalPValue","text":"","code":"getFinalPValue(stageResults, ...)"},{"path":"https://rpact-com.github.io/rpact/reference/getFinalPValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Final P Value — getFinalPValue","text":"stageResults results given stage, obtained getStageResults(). ... available backward compatibility.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getFinalPValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Final P Value — getFinalPValue","text":"Returns list containing finalStage, pFinal.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getFinalPValue.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Final P Value — getFinalPValue","text":"calculation final p-value based stage-wise ordering sample space. enables calculation non-adaptive adaptive case. Fisher's combination test, available kMax = 2 .","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getFinalPValue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Final P Value — getFinalPValue","text":"","code":"if (FALSE) { # \\dontrun{ design <- getDesignInverseNormal(kMax = 2) data <- getDataset(     n      = c( 20,  30),     means  = c( 50,  51),     stDevs = c(130, 140) ) getFinalPValue(getStageResults(design, dataInput = data)) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getGroupSequentialProbabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Group Sequential Probabilities — getGroupSequentialProbabilities","title":"Get Group Sequential Probabilities — getGroupSequentialProbabilities","text":"Calculates probabilities group sequential setting.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getGroupSequentialProbabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Group Sequential Probabilities — getGroupSequentialProbabilities","text":"","code":"getGroupSequentialProbabilities(decisionMatrix, informationRates)"},{"path":"https://rpact-com.github.io/rpact/reference/getGroupSequentialProbabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Group Sequential Probabilities — getGroupSequentialProbabilities","text":"decisionMatrix matrix either 2 4 rows kMax = length(informationRates) columns, see details. informationRates information rates t_1, ..., t_kMax (must fixed prior trial), default (1:kMax) / kMax. weighted inverse normal design, weights derived w_1 = sqrt(t_1), w_k = sqrt(t_k - t_(k-1)). weighted Fisher's combination test, weights (scales) w_k = sqrt((t_k - t_(k-1)) / t_1) (see documentation).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getGroupSequentialProbabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Group Sequential Probabilities — getGroupSequentialProbabilities","text":"Returns numeric matrix containing probabilities described details section.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getGroupSequentialProbabilities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Group Sequential Probabilities — getGroupSequentialProbabilities","text":"Given sequence information rates (fixing correlation structure), decisionMatrix either 2 4 rows kMax = length(informationRates) columns, function calculates probability matrix containing, two rows, probabilities: P(Z_1 < l_1), P(l_1 < Z_1 < u_1, Z_2 < l_2),..., P(l_kMax-1 < Z_kMax-1 < u_kMax-1, Z_kMax < l_l_kMax) P(Z_1 < u_1), P(l_1 < Z_1 < u_1, Z_2 < u_2),..., P(l_kMax-1 < Z_kMax-1 < u_kMax-1, Z_kMax < u_l_kMax) P(Z_1 < Inf), P(l_1 < Z_1 < u_1, Z_2 < Inf),..., P(l_kMax-1 < Z_kMax-1 < u_kMax-1, Z_kMax < Inf) continuation matrix l_1,...,l_kMax u_1,...,u_kMax , output matrix function provides per stage (column) cumulative probabilities values specified decisionMatrix Inf, reaching stage, .e., test statistics continuation region preceding stages. 4 rows, continuation region contains two regions probability matrix obtained analogously (cf., Wassmer Brannath, 2016).","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getGroupSequentialProbabilities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Group Sequential Probabilities — getGroupSequentialProbabilities","text":"","code":"if (FALSE) { # \\dontrun{ # Calculate Type I error rates in the two-sided group sequential setting when # performing kMax stages with constant critical boundaries at level alpha: alpha <- 0.05 kMax <- 10 decisionMatrix <- matrix(c(     rep(-qnorm(1 - alpha / 2), kMax),     rep(qnorm(1 - alpha / 2), kMax) ), nrow = 2, byrow = TRUE) informationRates <- (1:kMax) / kMax probs <- getGroupSequentialProbabilities(decisionMatrix, informationRates) cumsum(probs[3, ] - probs[2, ] + probs[1, ])  # Do the same for a one-sided design without futility boundaries: decisionMatrix <- matrix(c(     rep(-Inf, kMax),     rep(qnorm(1 - alpha), kMax) ), nrow = 2, byrow = TRUE) informationRates <- (1:kMax) / kMax probs <- getGroupSequentialProbabilities(decisionMatrix, informationRates) cumsum(probs[3, ] - probs[2, ])  # Check that two-sided Pampallona and Tsiatis boundaries with binding  # futility bounds obtain Type I error probabilities equal to alpha: x <- getDesignGroupSequential(     alpha = 0.05, beta = 0.1, kMax = 3, typeOfDesign = \"PT\",     deltaPT0 = 0, deltaPT1 = 0.4, sided = 2, bindingFutility = TRUE ) dm <- matrix(c(     -x$criticalValues, -x$futilityBounds, 0,     x$futilityBounds, 0, x$criticalValues ), nrow = 4, byrow = TRUE) dm[is.na(dm)] <- 0 probs <- getGroupSequentialProbabilities(     decisionMatrix = dm, informationRates = (1:3) / 3 ) sum(probs[5, ] - probs[4, ] + probs[1, ])  # Check the Type I error rate decrease when using non-binding futility bounds: x <- getDesignGroupSequential(     alpha = 0.05, beta = 0.1, kMax = 3, typeOfDesign = \"PT\",     deltaPT0 = 0, deltaPT1 = 0.4, sided = 2, bindingFutility = FALSE ) dm <- matrix(c(     -x$criticalValues, -x$futilityBounds, 0,     x$futilityBounds, 0, x$criticalValues ), nrow = 4, byrow = TRUE) dm[is.na(dm)] <- 0 probs <- getGroupSequentialProbabilities(     decisionMatrix = dm, informationRates = (1:3) / 3 ) sum(probs[5, ] - probs[4, ] + probs[1, ]) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getLambdaStepFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Lambda Step Function — getLambdaStepFunction","title":"Get Lambda Step Function — getLambdaStepFunction","text":"Calculates lambda step values given time vector.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getLambdaStepFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Lambda Step Function — getLambdaStepFunction","text":"","code":"getLambdaStepFunction(timeValues, ..., piecewiseSurvivalTime, piecewiseLambda)"},{"path":"https://rpact-com.github.io/rpact/reference/getLambdaStepFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Lambda Step Function — getLambdaStepFunction","text":"timeValues numeric vector specifies time values lambda step values shall calculated. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. piecewiseSurvivalTime numeric vector specifies time intervals piecewise definition exponential survival time cumulative distribution function (see details). piecewiseLambda numeric vector specifies assumed hazard rate treatment group.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getLambdaStepFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Lambda Step Function — getLambdaStepFunction","text":"numeric vector containing lambda step values corresponds specified time values.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getLambdaStepFunction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Lambda Step Function — getLambdaStepFunction","text":"first element vector piecewiseSurvivalTime must equal 0. function used plotting sample size survival results (cf., plot, type = 13 type = 14).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getLogLevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Log Level — getLogLevel","title":"Get Log Level — getLogLevel","text":"Returns current rpact log level.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getLogLevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Log Level — getLogLevel","text":"","code":"getLogLevel()"},{"path":"https://rpact-com.github.io/rpact/reference/getLogLevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Log Level — getLogLevel","text":"Returns character length 1 specifying current log level.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getLogLevel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Log Level — getLogLevel","text":"function gets log level rpact internal log message system.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getLogLevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Log Level — getLogLevel","text":"","code":"# show current log level getLogLevel() #> [1] \"PROGRESS\""},{"path":"https://rpact-com.github.io/rpact/reference/getLongFormat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Long Format — getLongFormat","title":"Get Long Format — getLongFormat","text":"Returns specified dataset data.frame -called long format.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getLongFormat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Long Format — getLongFormat","text":"","code":"getLongFormat(dataInput)"},{"path":"https://rpact-com.github.io/rpact/reference/getLongFormat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Long Format — getLongFormat","text":"data.frame returned.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getLongFormat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Long Format — getLongFormat","text":"long format (narrow, stacked), data presented one column containing values another column listing context value, .e., data different groups one column dataset contains additional \"group\" column.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getNumberOfSubjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Number Of Subjects — getNumberOfSubjects","title":"Get Number Of Subjects — getNumberOfSubjects","text":"Returns number recruited subjects given time vector.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getNumberOfSubjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Number Of Subjects — getNumberOfSubjects","text":"","code":"getNumberOfSubjects(   time,   ...,   accrualTime = c(0, 12),   accrualIntensity = 0.1,   accrualIntensityType = c(\"auto\", \"absolute\", \"relative\"),   maxNumberOfSubjects = NA_real_ )"},{"path":"https://rpact-com.github.io/rpact/reference/getNumberOfSubjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Number Of Subjects — getNumberOfSubjects","text":"time numeric vector time values. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. accrualTime assumed accrual time intervals study, default c(0, 12) (details see getAccrualTime()). accrualIntensity numeric vector accrual intensities, default relative intensity 0.1 (details see getAccrualTime()). accrualIntensityType character value specifying accrual intensity input type. Must one \"auto\", \"absolute\", \"relative\"; default \"auto\", .e., values < 1 type \"relative\", otherwise \"absolute\". maxNumberOfSubjects maxNumberOfSubjects > 0 specified, end accrual specified accrualIntensity specified number subjects determined accrualIntensity calculated fixed end accrual.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getNumberOfSubjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Number Of Subjects — getNumberOfSubjects","text":"Returns NumberOfSubjects object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getNumberOfSubjects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Number Of Subjects — getNumberOfSubjects","text":"Calculate number subjects time range given accrual time vector accrual intensity. Intensity can either defined absolute relative terms (latter, maxNumberOfSubjects needs defined) function used getSampleSizeSurvival().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getNumberOfSubjects.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Number Of Subjects — getNumberOfSubjects","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getNumberOfSubjects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Number Of Subjects — getNumberOfSubjects","text":"","code":"if (FALSE) { # \\dontrun{ getNumberOfSubjects(time = seq(10, 70, 10), accrualTime = c(0, 20, 60),      accrualIntensity = c(5, 20))  getNumberOfSubjects(time = seq(10, 70, 10), accrualTime = c(0, 20, 60),      accrualIntensity = c(0.1, 0.4), maxNumberOfSubjects = 900) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getObjectRCode.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Object R Code — rcmd","title":"Get Object R Code — rcmd","text":"Returns R source command result object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getObjectRCode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Object R Code — rcmd","text":"","code":"rcmd(   obj,   ...,   leadingArguments = NULL,   includeDefaultParameters = FALSE,   stringWrapParagraphWidth = 90,   prefix = \"\",   postfix = \"\",   stringWrapPrefix = \"\",   newArgumentValues = list(),   tolerance = 1e-07,   pipeOperator = c(\"auto\", \"none\", \"magrittr\", \"R\"),   output = c(\"vector\", \"cat\", \"test\", \"markdown\", \"internal\"),   explicitPrint = FALSE )  getObjectRCode(   obj,   ...,   leadingArguments = NULL,   includeDefaultParameters = FALSE,   stringWrapParagraphWidth = 90,   prefix = \"\",   postfix = \"\",   stringWrapPrefix = \"\",   newArgumentValues = list(),   tolerance = 1e-07,   pipeOperator = c(\"auto\", \"none\", \"magrittr\", \"R\"),   output = c(\"vector\", \"cat\", \"test\", \"markdown\", \"internal\"),   explicitPrint = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/getObjectRCode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Object R Code — rcmd","text":"obj result object. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. leadingArguments character vector arguments shall inserted beginning function command, e.g., design = x. careful option created R command may longer valid used. includeDefaultParameters TRUE, default parameters included rpact commands; default FALSE. stringWrapParagraphWidth integer value defining number characters line break shall inserted; set NULL insert line breaks. prefix character string shall added beginning R command. postfix character string shall added end R command. stringWrapPrefix prefix character string shall added new line, typically spaces. newArgumentValues named list arguments shall renewed R command, e.g., newArgumentValues = list(informationRates = c(0.5, 1)). tolerance tolerance defining value default. pipeOperator pipe operator use R code, default \"none\". output output format, default character \"vector\". explicitPrint Show explicit print command, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getObjectRCode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Object R Code — rcmd","text":"character value vector returned.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getObjectRCode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Object R Code — rcmd","text":"getObjectRCode() (short: rcmd()) recreates R commands result specified object obj. obj must instance class ParameterSet.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getObservedInformationRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Observed Information Rates — getObservedInformationRates","title":"Get Observed Information Rates — getObservedInformationRates","text":"Recalculates observed information rates specified dataset.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getObservedInformationRates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Observed Information Rates — getObservedInformationRates","text":"","code":"getObservedInformationRates(   dataInput,   ...,   maxInformation = NULL,   informationEpsilon = NULL,   stage = NA_integer_ )"},{"path":"https://rpact-com.github.io/rpact/reference/getObservedInformationRates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Observed Information Rates — getObservedInformationRates","text":"dataInput dataset information rates shall recalculated. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. maxInformation Positive value specifying maximum information. informationEpsilon Positive integer value specifying absolute information epsilon, defines maximum distance observed information maximum information causes final analysis. Updates final analysis case observed information final analysis smaller (\"-running\") planned maximum information maxInformation, default 0. Alternatively, floating-point number > 0 < 1 can specified define relative information epsilon. stage stage number (optional). Default: total number existing stages data input.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getObservedInformationRates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Observed Information Rates — getObservedInformationRates","text":"Returns list summarizes observed information rates.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getObservedInformationRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Observed Information Rates — getObservedInformationRates","text":"means rates maximum information maximum number subjects relative proportion informationEpsilon < 1; survival data maximum number events relative proportion informationEpsilon < 1.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getObservedInformationRates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Observed Information Rates — getObservedInformationRates","text":"","code":"if (FALSE) { # \\dontrun{ # Absolute information epsilon: # decision rule 45 >= 46 - 1, i.e., under-running data <- getDataset(     overallN = c(22, 45),     overallEvents = c(11, 28) ) getObservedInformationRates(data,     maxInformation = 46, informationEpsilon = 1 )  # Relative information epsilon: # last information rate = 45/46 = 0.9783, # is > 1 - 0.03 = 0.97, i.e., under-running data <- getDataset(     overallN = c(22, 45),     overallEvents = c(11, 28) ) getObservedInformationRates(data,     maxInformation = 46, informationEpsilon = 0.03 ) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getOutputFormat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Output Format — getOutputFormat","title":"Get Output Format — getOutputFormat","text":"function format standard outputs rpact objects can shown written file.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getOutputFormat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Output Format — getOutputFormat","text":"","code":"getOutputFormat(   parameterName = NA_character_,   ...,   file = NA_character_,   default = FALSE,   fields = TRUE )"},{"path":"https://rpact-com.github.io/rpact/reference/getOutputFormat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Output Format — getOutputFormat","text":"parameterName name parameter whose output format shall returned. Leave default NA_character_ output format parameters shall returned. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. file optional file name write output formats (see Details information). default TRUE default output format specified parameter(s) returned, default FALSE. fields TRUE names affected object fields displayed, default TRUE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getOutputFormat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Output Format — getOutputFormat","text":"named list output formats.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getOutputFormat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Output Format — getOutputFormat","text":"Output formats can written text file specifying file. See setOutputFormat()() learn read formerly saved file. Note parameterName must match exactly, e.g., p-values following parameter names recognized amongst others: p value p.values p-value pValue rpact.output.format.p.value","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getOutputFormat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Output Format — getOutputFormat","text":"","code":"if (FALSE) { # \\dontrun{ # show output format of p values getOutputFormat(\"p.value\")  # set new p value output format setOutputFormat(\"p.value\", digits = 5, nsmall = 5)  # show sample sizes as smallest integers not less than the not rounded values setOutputFormat(\"sample size\", digits = 0, nsmall = 0, roundFunction = \"ceiling\") getSampleSizeMeans()  # show sample sizes as smallest integers not greater than the not rounded values setOutputFormat(\"sample size\", digits = 0, nsmall = 0, roundFunction = \"floor\") getSampleSizeMeans()  # set new sample size output format without round function setOutputFormat(\"sample size\", digits = 2, nsmall = 2) getSampleSizeMeans()  # reset sample size output format to default setOutputFormat(\"sample size\") getSampleSizeMeans() getOutputFormat(\"sample size\") } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getParameterCaption.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Parameter Caption — getParameterCaption","title":"Get Parameter Caption — getParameterCaption","text":"Returns parameter caption given object parameter name.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getParameterCaption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Parameter Caption — getParameterCaption","text":"","code":"getParameterCaption(obj, var)"},{"path":"https://rpact-com.github.io/rpact/reference/getParameterCaption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Parameter Caption — getParameterCaption","text":"obj rpact result object. var variable/parameter name.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getParameterCaption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Parameter Caption — getParameterCaption","text":"Returns character specifying corresponding caption given parameter name. Returns NULL specified parameterName exist.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getParameterCaption.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Parameter Caption — getParameterCaption","text":"function identifies returns caption used print outputs rpact result object.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getParameterCaption.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Parameter Caption — getParameterCaption","text":"","code":"if (FALSE) { # \\dontrun{ getParameterCaption(getDesignInverseNormal(), \"kMax\") } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getParameterName.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Parameter Name — getParameterName","title":"Get Parameter Name — getParameterName","text":"Returns parameter name given object parameter caption.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getParameterName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Parameter Name — getParameterName","text":"","code":"getParameterName(obj, parameterCaption)"},{"path":"https://rpact-com.github.io/rpact/reference/getParameterName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Parameter Name — getParameterName","text":"obj rpact result object. parameterCaption parameter caption.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getParameterName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Parameter Name — getParameterName","text":"Returns character specifying corresponding name given parameter caption. Returns NULL specified parameterCaption exist.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getParameterName.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Parameter Name — getParameterName","text":"function identifies returns parameter name given caption used print outputs rpact result object.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getParameterName.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Parameter Name — getParameterName","text":"","code":"if (FALSE) { # \\dontrun{ getParameterName(getDesignInverseNormal(), \"Maximum number of stages\") } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getParameterType.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Parameter Type — getParameterType","title":"Get Parameter Type — getParameterType","text":"Returns parameter type given object parameter name.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getParameterType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Parameter Type — getParameterType","text":"","code":"getParameterType(obj, var)"},{"path":"https://rpact-com.github.io/rpact/reference/getParameterType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Parameter Type — getParameterType","text":"obj rpact result object. var variable/parameter name.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getParameterType.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Parameter Type — getParameterType","text":"Returns character specifying corresponding type given parameter name. Returns NULL specified parameterName exist.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getParameterType.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Parameter Type — getParameterType","text":"function identifies returns type used print outputs rpact result object.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getParameterType.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Parameter Type — getParameterType","text":"","code":"if (FALSE) { # \\dontrun{ getParameterType(getDesignInverseNormal(), \"kMax\") } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getPerformanceScore.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Performance Score — getPerformanceScore","title":"Get Performance Score — getPerformanceScore","text":"Calculates conditional performance score, sub-scores components according (Herrmann et al. (2020), doi:10.1002/sim.8534 ) (Bokelmann et al. (2024), doi:10.1186/s12874-024-02150-4 ) given simulation result two-stage design continuous binary endpoint. Larger (sub-)score component values refer better performance.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPerformanceScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Performance Score — getPerformanceScore","text":"","code":"getPerformanceScore(simulationResult)"},{"path":"https://rpact-com.github.io/rpact/reference/getPerformanceScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Performance Score — getPerformanceScore","text":"simulationResult simulation result.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPerformanceScore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Performance Score — getPerformanceScore","text":"conditional performance score consists two sub-scores, one sample size (subscoreSampleSize) one conditional power (subscoreConditionalPower). composed location (locationSampleSize, locationConditionalPower) variation component (variationSampleSize, variationConditionalPower). term conditional refers evaluation perspective interim results suggest trial continuation second stage. score can take values 0 1. details performance score can found Herrmann et al. (2020), doi:10.1002/sim.8534  Bokelmann et al. (2024) doi:10.1186/s12874-024-02150-4 .","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPerformanceScore.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Performance Score — getPerformanceScore","text":"Stephen Schueuerhuis","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPerformanceScore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Performance Score — getPerformanceScore","text":"","code":"if (FALSE) { # \\dontrun{ # Example from Table 3 in \"A new conditional performance score for  # the evaluation of adaptive group sequential designs with samplesize  # recalculation from Herrmann et al 2023\", p. 2097 for  # Observed Conditional Power approach and Delta = 0.5  # Create two-stage Pocock design with binding futility boundary at 0 design <- getDesignGroupSequential(     kMax = 2, typeOfDesign = \"P\",      futilityBounds = 0, bindingFutility = TRUE)  # Initialize sample sizes and effect;  # Sample sizes are referring to overall stage-wise sample sizes n1 <- 100 n2 <- 100 nMax <- n1 + n2 alternative <- 0.5  # Perform Simulation; nMax * 1.5 defines the maximum  # sample size for the additional stage simulationResult <- getSimulationMeans(     design = design,     normalApproximation = TRUE,     thetaH0 = 0,     alternative = alternative,     plannedSubjects = c(n1, nMax),     minNumberOfSubjectsPerStage = c(NA_real_, 1),     maxNumberOfSubjectsPerStage = c(NA_real_, nMax * 1.5),     conditionalPower = 0.8,     directionUpper = TRUE,     maxNumberOfIterations = 1e05,     seed = 140 )  # Calculate performance score getPerformanceScore(simulationResult) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getPiecewiseSurvivalTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Piecewise Survival Time — getPiecewiseSurvivalTime","title":"Get Piecewise Survival Time — getPiecewiseSurvivalTime","text":"Returns PiecewiseSurvivalTime object contains relevant parameters exponential survival time cumulative distribution function. Use names obtain field names.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPiecewiseSurvivalTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Piecewise Survival Time — getPiecewiseSurvivalTime","text":"","code":"getPiecewiseSurvivalTime(   piecewiseSurvivalTime = NA_real_,   ...,   lambda1 = NA_real_,   lambda2 = NA_real_,   hazardRatio = NA_real_,   pi1 = NA_real_,   pi2 = NA_real_,   median1 = NA_real_,   median2 = NA_real_,   eventTime = 12,   kappa = 1,   delayedResponseAllowed = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/getPiecewiseSurvivalTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Piecewise Survival Time — getPiecewiseSurvivalTime","text":"piecewiseSurvivalTime vector specifies time intervals piecewise definition exponential survival time cumulative distribution function (see details). ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. lambda1 assumed hazard rate treatment group, default. lambda1 can also used define piecewise exponentially distributed survival times (see details). Must positive numeric length 1. lambda2 assumed hazard rate reference group, default. lambda2 can also used define piecewise exponentially distributed survival times (see details). Must positive numeric length 1. hazardRatio vector hazard ratios consideration. event hazard rates treatment groups defined, hazard ratio needs specified calculated, default. Must positive numeric length 1. pi1 numeric value vector represents assumed event rate treatment group, default seq(0.2, 0.5, 0.1) (power calculations simulations) seq(0.4, 0.6, 0.1) (sample size calculations). pi2 numeric value represents assumed event rate control group, default 0.2. median1 assumed median survival time treatment group, default. median2 assumed median survival time reference group, default. Must positive numeric length 1. eventTime assumed time event rates calculated, default 12. kappa numeric value > 0. kappa != 1 used specification shape Weibull distribution. Default 1, .e., exponential survival distribution used instead Weibull distribution. Note Weibull distribution used piecewise definition survival time distribution, .e., piecewiselambda (single value) kappa can specified. function equivalent pweibull(t, shape = kappa, scale = 1 / lambda) stats package, .e., scale parameter 1 / 'hazard rate'. example, getPiecewiseExponentialDistribution(time = 130, piecewiseLambda = 0.01, kappa = 4.2) pweibull(q = 130, shape = 4.2, scale = 1 / 0.01) provide result. delayedResponseAllowed TRUE, delayed response allowed; otherwise validated response delayed, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPiecewiseSurvivalTime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Piecewise Survival Time — getPiecewiseSurvivalTime","text":"Returns PiecewiseSurvivalTime object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPiecewiseSurvivalTime.html","id":"piecewise-survival-time","dir":"Reference","previous_headings":"","what":"Piecewise survival time","title":"Get Piecewise Survival Time — getPiecewiseSurvivalTime","text":"first element vector piecewiseSurvivalTime must equal 0. piecewiseSurvivalTime can also list combines definition time intervals hazard rates reference group. definition survival time treatment group obtained specification hazard ratio (see examples details).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPiecewiseSurvivalTime.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Piecewise Survival Time — getPiecewiseSurvivalTime","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPiecewiseSurvivalTime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Piecewise Survival Time — getPiecewiseSurvivalTime","text":"","code":"if (FALSE) { # \\dontrun{ getPiecewiseSurvivalTime(lambda2 = 0.5, hazardRatio = 0.8)  getPiecewiseSurvivalTime(lambda2 = 0.5, lambda1 = 0.4)  getPiecewiseSurvivalTime(pi2 = 0.5, hazardRatio = 0.8)  getPiecewiseSurvivalTime(pi2 = 0.5, pi1 = 0.4)  getPiecewiseSurvivalTime(pi1 = 0.3)  getPiecewiseSurvivalTime(hazardRatio = c(0.6, 0.8), lambda2 = 0.4)  getPiecewiseSurvivalTime(piecewiseSurvivalTime = c(0, 6, 9),      lambda2 = c(0.025, 0.04, 0.015), hazardRatio = 0.8)  getPiecewiseSurvivalTime(piecewiseSurvivalTime = c(0, 6, 9),      lambda2 = c(0.025, 0.04, 0.015),      lambda1 = c(0.025, 0.04, 0.015) * 0.8)  pwst <- getPiecewiseSurvivalTime(list(     \"0 - <6\"   = 0.025,      \"6 - <9\"   = 0.04,      \"9 - <15\"  = 0.015,      \"15 - <21\" = 0.01,      \">=21\"     = 0.007), hazardRatio = 0.75) pwst  # The object created by getPiecewiseSurvivalTime() can be used directly in  # getSampleSizeSurvival(): getSampleSizeSurvival(piecewiseSurvivalTime = pwst)  # The object created by getPiecewiseSurvivalTime() can be used directly in  # getPowerSurvival(): getPowerSurvival(piecewiseSurvivalTime = pwst, directionUpper = FALSE,      maxNumberOfEvents = 40, maxNumberOfSubjects = 100)  # The object created by getPiecewiseSurvivalTime() can be used directly in  # getSimulationSurvival(): getSimulationSurvival(piecewiseSurvivalTime = pwst, directionUpper = FALSE,     plannedEvents = 40, maxNumberOfSubjects = 100) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getPlotSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Plot Settings — getPlotSettings","title":"Get Plot Settings — getPlotSettings","text":"Returns plot settings object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPlotSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Plot Settings — getPlotSettings","text":"","code":"getPlotSettings(   lineSize = 0.8,   pointSize = 3,   pointColor = NA_character_,   mainTitleFontSize = 14,   axesTextFontSize = 10,   legendFontSize = 11,   scalingFactor = 1 )"},{"path":"https://rpact-com.github.io/rpact/reference/getPlotSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Plot Settings — getPlotSettings","text":"lineSize line size, default 0.8. pointSize point size, default 3. pointColor point color (character), default NA_character_. mainTitleFontSize main title font size, default 14. axesTextFontSize axes text font size, default 10. legendFontSize legend font size, default 11. scalingFactor scaling factor, default 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPlotSettings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Plot Settings — getPlotSettings","text":"Returns object class PlotSettings collects typical plot settings.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerAndAverageSampleNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Power And Average Sample Number — getPowerAndAverageSampleNumber","title":"Get Power And Average Sample Number — getPowerAndAverageSampleNumber","text":"Returns power average sample number specified design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerAndAverageSampleNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Power And Average Sample Number — getPowerAndAverageSampleNumber","text":"","code":"getPowerAndAverageSampleNumber(design, theta = seq(-1, 1, 0.02), nMax = 100)"},{"path":"https://rpact-com.github.io/rpact/reference/getPowerAndAverageSampleNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Power And Average Sample Number — getPowerAndAverageSampleNumber","text":"design trial design. theta vector standardized effect sizes (theta values), default sequence -1 1. nMax maximum sample size. Must positive integer length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerAndAverageSampleNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Power And Average Sample Number — getPowerAndAverageSampleNumber","text":"Returns PowerAndAverageSampleNumberResult object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerAndAverageSampleNumber.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Power And Average Sample Number — getPowerAndAverageSampleNumber","text":"function returns power average sample number (ASN) specified design prototype case testing H0: mu = mu0 one-sample design. theta represents standardized effect (mu - mu0) / sigma power ASN calculated maximum sample size nMax. designs one-sample test mean standardized effect needs adjusted accordingly.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerAndAverageSampleNumber.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Power And Average Sample Number — getPowerAndAverageSampleNumber","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getPowerAndAverageSampleNumber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Power And Average Sample Number — getPowerAndAverageSampleNumber","text":"","code":"if (FALSE) { # \\dontrun{ # Calculate power, stopping probabilities, and expected sample  # size for the default design with specified theta and nMax   getPowerAndAverageSampleNumber(     getDesignGroupSequential(),      theta = seq(-1, 1, 0.5), nMax = 100) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getPowerCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Power Counts — getPowerCounts","title":"Get Power Counts — getPowerCounts","text":"Returns power, stopping probabilities, expected sample size testing mean rates negative binomial distributed event numbers two samples given sample sizes.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Power Counts — getPowerCounts","text":"","code":"getPowerCounts(   design = NULL,   ...,   directionUpper = NA,   maxNumberOfSubjects = NA_real_,   lambda1 = NA_real_,   lambda2 = NA_real_,   lambda = NA_real_,   theta = NA_real_,   thetaH0 = 1,   overdispersion = 0,   fixedExposureTime = NA_real_,   accrualTime = NA_real_,   accrualIntensity = NA_real_,   followUpTime = NA_real_,   allocationRatioPlanned = NA_real_ )"},{"path":"https://rpact-com.github.io/rpact/reference/getPowerCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Power Counts — getPowerCounts","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. maxNumberOfSubjects maxNumberOfSubjects > 0 needs specified power calculations calculation necessary follow-(count data). two treatment arms, maximum number subjects treatment arms. lambda1 numeric value vector represents assumed rate homogeneous Poisson process active treatment group, default. lambda2 numeric value represents assumed rate homogeneous Poisson process control group, default. lambda numeric value vector represents assumed rate homogeneous Poisson process pooled treatment groups, default. theta numeric value vector represents assumed mean ratios lambda1/lambda2 homogeneous Poisson process, default. thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. count data: bound testing H0: lambda1 / lambda2 = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. overdispersion numeric value represents assumed overdispersion negative binomial distribution, default 0. fixedExposureTime specified, fixed time exposure per subject count data, default. accrualTime specified, assumed accrual time interval(s) study, default. accrualIntensity specified, assumed accrual intensities study, default. followUpTime specified, assumed (additional) follow-time study, default. total study duration accrualTime + followUpTime. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Power Counts — getPowerCounts","text":"Returns TrialDesignPlan object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerCounts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Power Counts — getPowerCounts","text":"given design function calculates power, stopping probabilities, expected sample size testing ratio two mean rates negative binomial distributed event numbers two samples given maximum sample size effect. power calculation performed either fixed exposure time variable exposure time fixed follow-information stages calculated according specified information rate design. Additionally, allocation ratio = n1 / n2 can specified n1 n2 number subjects two treatment groups. null hypothesis value thetaH0 can also specified.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerCounts.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Power Counts — getPowerCounts","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getPowerCounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Power Counts — getPowerCounts","text":"","code":"if (FALSE) { # \\dontrun{ # Fixed sample size trial where a therapy is assumed to decrease the  # exacerbation rate from 1.4 to 1.05 (25% decrease) within an  # observation period of 1 year, i.e., each subject has a equal  # follow-up of 1 year. # Calculate power at significance level 0.025 at given sample size = 180  # for a range of lambda1 values if the overdispersion is assumed to be  # equal to 0.5, is obtained by getPowerCounts(alpha = 0.025, lambda1 = seq(1, 1.4, 0.05), lambda2 = 1.4,      maxNumberOfSubjects = 180, overdispersion = 0.5, fixedExposureTime = 1)  # Group sequential alpha and beta spending function design with O'Brien and  # Fleming type boundaries: Power and test characteristics for N = 286,  # under the assumption of a fixed exposure time, and for a range of  # lambda1 values:  getPowerCounts(design = getDesignGroupSequential(         kMax = 3, alpha = 0.025, beta = 0.2,          typeOfDesign = \"asOF\", typeBetaSpending = \"bsOF\"),      lambda1 = seq(0.17, 0.23, 0.01), lambda2 = 0.3,      directionUpper = FALSE, overdispersion = 1, maxNumberOfSubjects = 286,      fixedExposureTime = 12, accrualTime = 6)  # Group sequential design alpha spending function design with O'Brien and  # Fleming type boundaries: Power and test characteristics for N = 1976,  # under variable exposure time with uniform recruitment over 1.25 months, # study time (accrual + followup) = 4 (lambda1, lambda2, and overdispersion  # as specified, no futility stopping): getPowerCounts(design = getDesignGroupSequential(         kMax = 3, alpha = 0.025, beta = 0.2, typeOfDesign = \"asOF\"),     lambda1 = seq(0.08, 0.09, 0.0025), lambda2 = 0.125,      overdispersion = 5, directionUpper = FALSE, maxNumberOfSubjects = 1976,      followUpTime = 2.75, accrualTime = 1.25) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getPowerMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Power Means — getPowerMeans","title":"Get Power Means — getPowerMeans","text":"Returns power, stopping probabilities, expected sample size testing means one two samples given maximum sample size.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerMeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Power Means — getPowerMeans","text":"","code":"getPowerMeans(   design = NULL,   ...,   groups = 2L,   normalApproximation = FALSE,   meanRatio = FALSE,   thetaH0 = ifelse(meanRatio, 1, 0),   alternative = seq(0, 1, 0.2),   stDev = 1,   directionUpper = NA,   maxNumberOfSubjects = NA_real_,   allocationRatioPlanned = NA_real_ )"},{"path":"https://rpact-com.github.io/rpact/reference/getPowerMeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Power Means — getPowerMeans","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. groups number treatment groups (1 2), default 2. normalApproximation type computation p-values. TRUE, variance assumed known, default FALSE, .e., calculations performed t distribution. meanRatio TRUE, sample size one-sided testing H0: mu1 / mu2 = thetaH0 calculated, default FALSE. thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. count data: bound testing H0: lambda1 / lambda2 = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. alternative alternative hypothesis value testing means. can vector assumed alternatives, default seq(0, 1, 0.2) (power calculations) seq(0.2, 1, 0.2) (sample size calculations). stDev standard deviation sample size power calculation performed, default 1. two-armed trials, allowed specify standard deviations separately, .e., vector two elements. meanRatio = TRUE specified, stDev defines coefficient variation sigma / mu2. directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. maxNumberOfSubjects maxNumberOfSubjects > 0 needs specified power calculations calculation necessary follow-(count data). two treatment arms, maximum number subjects treatment arms. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerMeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Power Means — getPowerMeans","text":"Returns TrialDesignPlan object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Power Means — getPowerMeans","text":"given design function calculates power, stopping probabilities, expected sample size testing means given sample size. two treatment groups design, additionally, allocation ratio = n1 / n2 can specified n1 n2 number subjects two treatment groups. null hypothesis value thetaH0 != 0 testing difference two means thetaH0 != 1 testing ratio two means can specified. specified sample size, critical bounds stopping futility bounds provided effect scale (mean, mean difference, mean ratio, respectively)","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerMeans.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Power Means — getPowerMeans","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getPowerMeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Power Means — getPowerMeans","text":"","code":"if (FALSE) { # \\dontrun{ # Calculate the power, stopping probabilities, and expected sample size  # for testing H0: mu1 - mu2 = 0 in a two-armed design against a range of  # alternatives H1: mu1 - m2 = delta, delta = (0, 1, 2, 3, 4, 5),  # standard deviation sigma = 8, maximum sample size N = 80 (both treatment  # arms), and an allocation ratio n1/n2 = 2. The design is a three stage  # O'Brien & Fleming design with non-binding futility bounds (-0.5, 0.5)  # for the two interims. The computation takes into account that the t test  # is used (normalApproximation = FALSE).  getPowerMeans(getDesignGroupSequential(alpha = 0.025,      sided = 1, futilityBounds = c(-0.5, 0.5)),      groups = 2, alternative = c(0:5), stDev = 8,     normalApproximation = FALSE, maxNumberOfSubjects = 80,      allocationRatioPlanned = 2) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getPowerRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Power Rates — getPowerRates","title":"Get Power Rates — getPowerRates","text":"Returns power, stopping probabilities, expected sample size testing rates one two samples given maximum sample size.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerRates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Power Rates — getPowerRates","text":"","code":"getPowerRates(   design = NULL,   ...,   groups = 2L,   riskRatio = FALSE,   thetaH0 = ifelse(riskRatio, 1, 0),   pi1 = seq(0.2, 0.5, 0.1),   pi2 = 0.2,   directionUpper = NA,   maxNumberOfSubjects = NA_real_,   allocationRatioPlanned = NA_real_ )"},{"path":"https://rpact-com.github.io/rpact/reference/getPowerRates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Power Rates — getPowerRates","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. groups number treatment groups (1 2), default 2. riskRatio TRUE, power one-sided testing H0: pi1 / pi2 = thetaH0 calculated, default FALSE. thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. count data: bound testing H0: lambda1 / lambda2 = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. pi1 numeric value vector represents assumed probability active treatment group two treatment groups considered, alternative probability one treatment group design, default seq(0.2, 0.5, 0.1) (power calculations simulations) seq(0.4, 0.6, 0.1) (sample size calculations). pi2 numeric value represents assumed probability reference group two treatment groups considered, default 0.2. directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. maxNumberOfSubjects maxNumberOfSubjects > 0 needs specified power calculations calculation necessary follow-(count data). two treatment arms, maximum number subjects treatment arms. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerRates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Power Rates — getPowerRates","text":"Returns TrialDesignPlan object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Power Rates — getPowerRates","text":"given design function calculates power, stopping probabilities, expected sample size testing rates given maximum sample size. sample sizes stages calculated according specified information rate design. two treatment groups design, additionally, allocation ratio = n1 / n2 can specified n1 n2 number subjects two treatment groups. null hypothesis value thetaH0 != 0 testing difference two rates thetaH0 != 1 testing risk ratio specified, formulas according Farrington & Manning (Statistics Medicine, 1990) used (one-sided testing). Critical bounds stopping futility bounds provided effect scale (rate, rate difference, rate ratio, respectively). two-sample case, calculation performed fixed pi2 given argument function. Note power calculation rates always based normal approximation.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerRates.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Power Rates — getPowerRates","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getPowerRates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Power Rates — getPowerRates","text":"","code":"if (FALSE) { # \\dontrun{ # Calculate the power, stopping probabilities, and expected sample size in a # two-armed design at given maximum sample size N = 200 in a three-stage  # O'Brien & Fleming design with information rate vector (0.2,0.5,1),  # non-binding futility boundaries (0,0), i.e., the study stops for futility  # if the p-value exceeds 0.5 at interm, and allocation ratio = 2 for a range  # of pi1 values when testing H0: pi1 - pi2 = -0.1: getPowerRates(getDesignGroupSequential(informationRates = c(0.2, 0.5, 1),      futilityBounds = c(0, 0)), groups = 2, thetaH0 = -0.1,      pi1 = seq(0.3, 0.6, 0.1), directionUpper = FALSE,      pi2 = 0.7, allocationRatioPlanned = 2, maxNumberOfSubjects = 200)  # Calculate the power, stopping probabilities, and expected sample size in a single  # arm design at given maximum sample size N = 60 in a three-stage two-sided  # O'Brien & Fleming design with information rate vector (0.2, 0.5,1)  # for a range of pi1 values when testing H0: pi = 0.3: getPowerRates(getDesignGroupSequential(informationRates = c(0.2, 0.5,1),      sided = 2), groups = 1, thetaH0 = 0.3, pi1 = seq(0.3, 0.5, 0.05),       maxNumberOfSubjects = 60) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getPowerSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Power Survival — getPowerSurvival","title":"Get Power Survival — getPowerSurvival","text":"Returns power, stopping probabilities, expected sample size testing hazard ratio two treatment groups survival design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Power Survival — getPowerSurvival","text":"","code":"getPowerSurvival(   design = NULL,   ...,   typeOfComputation = c(\"Schoenfeld\", \"Freedman\", \"HsiehFreedman\"),   thetaH0 = 1,   directionUpper = NA,   pi1 = NA_real_,   pi2 = NA_real_,   lambda1 = NA_real_,   lambda2 = NA_real_,   median1 = NA_real_,   median2 = NA_real_,   kappa = 1,   hazardRatio = NA_real_,   piecewiseSurvivalTime = NA_real_,   allocationRatioPlanned = 1,   eventTime = 12,   accrualTime = c(0, 12),   accrualIntensity = 0.1,   accrualIntensityType = c(\"auto\", \"absolute\", \"relative\"),   maxNumberOfSubjects = NA_real_,   maxNumberOfEvents = NA_real_,   dropoutRate1 = 0,   dropoutRate2 = 0,   dropoutTime = 12 )"},{"path":"https://rpact-com.github.io/rpact/reference/getPowerSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Power Survival — getPowerSurvival","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. typeOfComputation Three options available: \"Schoenfeld\", \"Freedman\", \"HsiehFreedman\", default \"Schoenfeld\". details, see Hsieh (Statistics Medicine, 1992). non-inferiority testing (.e., thetaH0 != 1), Schoenfeld's formula can used. thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. count data: bound testing H0: lambda1 / lambda2 = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. pi1 numeric value vector represents assumed event rate treatment group, default seq(0.2, 0.5, 0.1) (power calculations simulations) seq(0.4, 0.6, 0.1) (sample size calculations). pi2 numeric value represents assumed event rate control group, default 0.2. lambda1 assumed hazard rate treatment group, default. lambda1 can also used define piecewise exponentially distributed survival times (see details). Must positive numeric length 1. lambda2 assumed hazard rate reference group, default. lambda2 can also used define piecewise exponentially distributed survival times (see details). Must positive numeric length 1. median1 assumed median survival time treatment group, default. median2 assumed median survival time reference group, default. Must positive numeric length 1. kappa numeric value > 0. kappa != 1 used specification shape Weibull distribution. Default 1, .e., exponential survival distribution used instead Weibull distribution. Note Weibull distribution used piecewise definition survival time distribution, .e., piecewiselambda (single value) kappa can specified. function equivalent pweibull(t, shape = kappa, scale = 1 / lambda) stats package, .e., scale parameter 1 / 'hazard rate'. example, getPiecewiseExponentialDistribution(time = 130, piecewiseLambda = 0.01, kappa = 4.2) pweibull(q = 130, shape = 4.2, scale = 1 / 0.01) provide result. hazardRatio vector hazard ratios consideration. event hazard rates treatment groups defined, hazard ratio needs specified calculated, default. Must positive numeric length 1. piecewiseSurvivalTime vector specifies time intervals piecewise definition exponential survival time cumulative distribution function  (details see getPiecewiseSurvivalTime()). allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar. eventTime assumed time event rates calculated, default 12. accrualTime assumed accrual time intervals study, default c(0, 12) (details see getAccrualTime()). accrualIntensity numeric vector accrual intensities, default relative intensity 0.1 (details see getAccrualTime()). accrualIntensityType character value specifying accrual intensity input type. Must one \"auto\", \"absolute\", \"relative\"; default \"auto\", .e., values < 1 type \"relative\", otherwise \"absolute\". maxNumberOfSubjects maxNumberOfSubjects > 0 needs specified. accrual time accrual intensity specified, calculated. Must positive integer length 1. maxNumberOfEvents maxNumberOfEvents > 0 maximum number events, determines power test needs specified. dropoutRate1 assumed drop-rate treatment group, default 0. dropoutRate2 assumed drop-rate control group, default 0. dropoutTime assumed time drop-rates control treatment group, default 12.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Power Survival — getPowerSurvival","text":"Returns TrialDesignPlan object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerSurvival.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Power Survival — getPowerSurvival","text":"given design function calculates power, stopping probabilities, expected sample size given number events number subjects. also calculates time required events expected given assumptions (exponentially, piecewise exponentially, Weibull distributed survival times constant non-constant piecewise accrual). Additionally, allocation ratio = n1 / n2 can specified n1 n2 number subjects two treatment groups. formula Kim & Tsiatis (Biometrics, 1990) used calculate expected number events alternative (see also Lakatos & Lan, Statistics Medicine, 1992). formulas generalized piecewise survival times non-constant piecewise accrual time.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerSurvival.html","id":"piecewise-survival-time","dir":"Reference","previous_headings":"","what":"Piecewise survival time","title":"Get Power Survival — getPowerSurvival","text":"first element vector piecewiseSurvivalTime must equal 0. piecewiseSurvivalTime can also list combines definition time intervals hazard rates reference group. definition survival time treatment group obtained specification hazard ratio (see examples details).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerSurvival.html","id":"staggered-patient-entry","dir":"Reference","previous_headings":"","what":"Staggered patient entry","title":"Get Power Survival — getPowerSurvival","text":"accrualTime time period subjects' accrual study. can value defines end accrual vector. case, accrualTime can used define non-constant accrual time. , accrualTime vector defines accrual intervals. first element accrualTime must equal 0 , additionally, accrualIntensity needs specified. accrualIntensity value vector (depending length accrualTime) defines intensity subjects enter trial intervals defined accrualTime. accrualTime can also list combines definition accrual time accrual intensity (see examples details). length accrualTime length accrualIntensity (.e., end accrual undefined), maxNumberOfSubjects > 0 needs specified end accrual calculated. case, accrualIntensity number subjects per time unit, .e., absolute accrual intensity. length accrualTime equals length accrualIntensity - 1 (.e., end accrual defined), maxNumberOfSubjects calculated absolute accrual intensity given. elements accrualIntensity smaller 1, accrualIntensity defines relative intensity subjects enter trial. example, accrualIntensity = c(0.1, 0.2) specifies second accrual interval intensity doubled compared first accrual interval. actual (absolute) accrual intensity calculated calculated given maxNumberOfSubjects. Note default accrualIntensity = 0.1 meaning absolute accrual intensity calculated.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getPowerSurvival.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Power Survival — getPowerSurvival","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getPowerSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Power Survival — getPowerSurvival","text":"","code":"if (FALSE) { # \\dontrun{ # Fixed sample size with minimum required definitions, pi1 = c(0.2, 0.3, 0.4, 0.5) and  # pi2 = 0.2 at event time 12, accrual time 12 and follow-up time 6 as default  getPowerSurvival(maxNumberOfEvents = 40, maxNumberOfSubjects = 200)  # Four stage O'Brien & Fleming group sequential design with minimum required  # definitions, pi1 = c(0.2, 0.3, 0.4, 0.5) and pi2 = 0.2 at event time 12,  # accrual time 12 and follow-up time 6 as default   getPowerSurvival(design = getDesignGroupSequential(kMax = 4),      maxNumberOfEvents = 40, maxNumberOfSubjects = 200)  # For fixed sample design, determine necessary accrual time if 200 subjects and  # 30 subjects per time unit can be recruited  getPowerSurvival(maxNumberOfEvents = 40, accrualTime = c(0),      accrualIntensity = 30, maxNumberOfSubjects = 200)  # Determine necessary accrual time if 200 subjects and if the first 6 time units  # 20 subjects per time unit can be recruited, then 30 subjects per time unit  getPowerSurvival(maxNumberOfEvents = 40, accrualTime = c(0, 6),      accrualIntensity = c(20, 30), maxNumberOfSubjects = 200)  # Determine maximum number of Subjects if the first 6 time units 20 subjects per  # time unit can be recruited, and after 10 time units 30 subjects per time unit getPowerSurvival(maxNumberOfEvents = 40, accrualTime = c(0, 6, 10),      accrualIntensity = c(20, 30))  # Specify accrual time as a list at <- list(     \"0 - <6\"  = 20,     \"6 - Inf\" = 30) getPowerSurvival(maxNumberOfEvents = 40, accrualTime = at, maxNumberOfSubjects = 200)  # Specify accrual time as a list, if maximum number of subjects need to be calculated at <- list(     \"0 - <6\"   = 20,     \"6 - <=10\" = 30)  getPowerSurvival(maxNumberOfEvents = 40, accrualTime = at)  # Specify effect size for a two-stage group design with O'Brien & Fleming boundaries # Effect size is based on event rates at specified event time, directionUpper = FALSE  # needs to be specified because it should be shown that hazard ratio < 1 getPowerSurvival(design = getDesignGroupSequential(kMax = 2), pi1 = 0.2, pi2 = 0.3,      eventTime = 24, maxNumberOfEvents = 40, maxNumberOfSubjects = 200,      directionUpper = FALSE)  # Effect size is based on event rate at specified event time for the reference group  # and hazard ratio, directionUpper = FALSE needs to be specified  # because it should be shown that hazard ratio < 1 getPowerSurvival(design = getDesignGroupSequential(kMax = 2), hazardRatio = 0.5,      pi2 = 0.3, eventTime = 24, maxNumberOfEvents = 40, maxNumberOfSubjects = 200,      directionUpper = FALSE)  # Effect size is based on hazard rate for the reference group and hazard ratio,  # directionUpper = FALSE needs to be specified because it should be shown that  # hazard ratio < 1 getPowerSurvival(design = getDesignGroupSequential(kMax = 2), hazardRatio = 0.5,      lambda2 = 0.02, maxNumberOfEvents = 40, maxNumberOfSubjects = 200,      directionUpper = FALSE)   # Specification of piecewise exponential survival time and hazard ratios   getPowerSurvival(design = getDesignGroupSequential(kMax = 2),      piecewiseSurvivalTime = c(0, 5, 10), lambda2 = c(0.01, 0.02, 0.04),      hazardRatio = c(1.5, 1.8, 2),  maxNumberOfEvents = 40, maxNumberOfSubjects = 200)  # Specification of piecewise exponential survival time as list and hazard ratios  pws <- list(     \"0 - <5\"  = 0.01,     \"5 - <10\" = 0.02,     \">=10\"    = 0.04) getPowerSurvival(design = getDesignGroupSequential(kMax = 2),      piecewiseSurvivalTime = pws, hazardRatio = c(1.5, 1.8, 2),      maxNumberOfEvents = 40, maxNumberOfSubjects = 200)  # Specification of piecewise exponential survival time for both treatment arms   getPowerSurvival(design = getDesignGroupSequential(kMax = 2),      piecewiseSurvivalTime = c(0, 5, 10), lambda2 = c(0.01, 0.02, 0.04),      lambda1 = c(0.015,0.03,0.06),  maxNumberOfEvents = 40, maxNumberOfSubjects = 200)  # Specification of piecewise exponential survival time as a list pws <- list(     \"0 - <5\"  = 0.01,     \"5 - <10\" = 0.02,     \">=10\"    = 0.04) getPowerSurvival(design = getDesignGroupSequential(kMax = 2),      piecewiseSurvivalTime = pws, hazardRatio = c(1.5, 1.8, 2),      maxNumberOfEvents = 40, maxNumberOfSubjects = 200)  # Specify effect size based on median survival times getPowerSurvival(median1 = 5, median2 = 3,      maxNumberOfEvents = 40, maxNumberOfSubjects = 200, directionUpper = FALSE)  # Specify effect size based on median survival times of  # Weibull distribtion with kappa = 2 getPowerSurvival(median1 = 5, median2 = 3, kappa = 2,      maxNumberOfEvents = 40, maxNumberOfSubjects = 200, directionUpper = FALSE) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getRawData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Simulation Raw Data for Survival — getRawData","title":"Get Simulation Raw Data for Survival — getRawData","text":"Returns raw survival data generated simulation.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getRawData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Simulation Raw Data for Survival — getRawData","text":"","code":"getRawData(x, aggregate = FALSE)"},{"path":"https://rpact-com.github.io/rpact/reference/getRawData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Simulation Raw Data for Survival — getRawData","text":"x SimulationResults object created getSimulationSurvival(). aggregate Logical. TRUE raw data aggregated similar result getData(), default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getRawData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Simulation Raw Data for Survival — getRawData","text":"Returns data.frame.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getRawData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Simulation Raw Data for Survival — getRawData","text":"function works getSimulationSurvival() called maxNumberOfRawDatasetsPerStage > 0 (default 0). function can used get simulated raw data simulation results object obtained getSimulationSurvival(). Note getSimulationSurvival() must called maxNumberOfRawDatasetsPerStage > 0. data frame contains following columns: iterationNumber: number simulation iteration. stopStage: stage stopping. subjectId: subject id (increasing number 1, 2, 3, ...) accrualTime: accrual time, .e., time subject entered trial. treatmentGroup: treatment group number (1 2). survivalTime: survival time subject. dropoutTime: dropout time subject (may NA). lastObservationTime: specific observation time. timeUnderObservation: time observation defined follows:   event: TRUE event occurred; FALSE otherwise. dropoutEvent: TRUE dropout event occurred; FALSE otherwise.","code":"if (event == TRUE) {     timeUnderObservation <- survivalTime } else if (dropoutEvent == TRUE) {     timeUnderObservation <- dropoutTime } else {     timeUnderObservation <- lastObservationTime - accrualTime }"},{"path":"https://rpact-com.github.io/rpact/reference/getRawData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Simulation Raw Data for Survival — getRawData","text":"","code":"if (FALSE) { # \\dontrun{ results <- getSimulationSurvival(     pi1 = seq(0.3, 0.6, 0.1), pi2 = 0.3, eventTime = 12,     accrualTime = 24, plannedEvents = 40, maxNumberOfSubjects = 200,     maxNumberOfIterations = 50, maxNumberOfRawDatasetsPerStage = 5 ) rawData <- getRawData(results) head(rawData) dim(rawData) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getRepeatedConfidenceIntervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Repeated Confidence Intervals — getRepeatedConfidenceIntervals","title":"Get Repeated Confidence Intervals — getRepeatedConfidenceIntervals","text":"Calculates returns lower upper limit repeated confidence intervals trial.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getRepeatedConfidenceIntervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Repeated Confidence Intervals — getRepeatedConfidenceIntervals","text":"","code":"getRepeatedConfidenceIntervals(   design,   dataInput,   ...,   directionUpper = NA,   tolerance = 1e-06,   stage = NA_integer_ )"},{"path":"https://rpact-com.github.io/rpact/reference/getRepeatedConfidenceIntervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Repeated Confidence Intervals — getRepeatedConfidenceIntervals","text":"design trial design. dataInput summary data used calculating test results. either element DatasetMeans, DatasetRates, DatasetSurvival created function getDataset(). information see getDataset(). ... arguments passed methods (cf., separate functions \"See Also\" ), e.g., normalApproximation type computation p-values. Default FALSE testing means (.e., t test used) TRUE testing rates hazard ratio. testing rates, normalApproximation = FALSE specified, binomial test (one sample) exact test Fisher (two samples) used calculating p-values. survival setting, normalApproximation = FALSE effect. equalVariances type t test. testing means two treatment groups, either t test assuming variances equal t test without assuming , .e., test Welch-Satterthwaite calculated, default TRUE. intersectionTest Defines multiple test intersection hypotheses closed system hypotheses testing multiple hypotheses. Five options available multi-arm designs: \"Dunnett\", \"Bonferroni\", \"Simes\", \"Sidak\", \"Hierarchical\", default \"Dunnett\". Four options available population enrichment designs: \"SpiessensDebois\" (one subset ), \"Bonferroni\", \"Simes\", \"Sidak\", default \"Simes\". varianceOption Defines way calculate variance multiple treatment arms (> 2) population enrichment designs testing means. multiple arms, three options available: \"overallPooled\", \"pairwisePooled\", \"notPooled\", default \"overallPooled\". enrichment designs, options : \"pooled\", \"pooledFromFull\" (one subset ), \"notPooled\", default \"pooled\". stratifiedAnalysis enrichment designs, typically stratified analysis chosen. testing means rates, also non-stratified analysis based overall data can performed. survival data, stratified analysis possible (see Brannath et al., 2009), default TRUE. directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. tolerance numerical tolerance, default 1e-06. Must positive numeric length 1. stage stage number (optional). Default: total number existing stages data input.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getRepeatedConfidenceIntervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Repeated Confidence Intervals — getRepeatedConfidenceIntervals","text":"Returns matrix 2 rows kMax columns containing lower RCI limits first row upper RCI limits second row, column represents stage.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getRepeatedConfidenceIntervals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Repeated Confidence Intervals — getRepeatedConfidenceIntervals","text":"repeated confidence interval given stage trial contains parameter values rejected using specified sequential design. can calculated stage trial can thus used monitoring tool. repeated confidence intervals provided specified stage.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getRepeatedConfidenceIntervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Repeated Confidence Intervals — getRepeatedConfidenceIntervals","text":"","code":"if (FALSE) { # \\dontrun{ design <- getDesignInverseNormal(kMax = 2) data <- getDataset(     n      = c( 20,  30),     means  = c( 50,  51),     stDevs = c(130, 140) ) getRepeatedConfidenceIntervals(design, dataInput = data) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getRepeatedPValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Repeated P Values — getRepeatedPValues","title":"Get Repeated P Values — getRepeatedPValues","text":"Calculates repeated p-values given test results.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getRepeatedPValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Repeated P Values — getRepeatedPValues","text":"","code":"getRepeatedPValues(stageResults, ..., tolerance = 1e-06)"},{"path":"https://rpact-com.github.io/rpact/reference/getRepeatedPValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Repeated P Values — getRepeatedPValues","text":"stageResults results given stage, obtained getStageResults(). ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. tolerance numerical tolerance, default 1e-06. Must positive numeric length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getRepeatedPValues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Repeated P Values — getRepeatedPValues","text":"Returns numeric vector length kMax case multi-arm stage results matrix (column represents stage, row comparison) containing repeated p values.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getRepeatedPValues.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Repeated P Values — getRepeatedPValues","text":"repeated p-value given stage trial defined smallest significance level given test design test results obtain rejection null hypothesis. can calculated stage trial can thus used monitoring tool. repeated p-values provided specified stage. multi-arm trials, repeated p-values defined separately treatment comparison within closed testing procedure.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getRepeatedPValues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Repeated P Values — getRepeatedPValues","text":"","code":"if (FALSE) { # \\dontrun{ design <- getDesignInverseNormal(kMax = 2) data <- getDataset(     n      = c( 20,  30),     means  = c( 50,  51),     stDevs = c(130, 140) ) getRepeatedPValues(getStageResults(design, dataInput = data)) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Sample Size Counts — getSampleSizeCounts","title":"Get Sample Size Counts — getSampleSizeCounts","text":"Returns sample size testing ratio mean rates negative binomial distributed event numbers two samples given effect.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Sample Size Counts — getSampleSizeCounts","text":"","code":"getSampleSizeCounts(   design = NULL,   ...,   lambda1 = NA_real_,   lambda2 = NA_real_,   lambda = NA_real_,   theta = NA_real_,   thetaH0 = 1,   overdispersion = 0,   fixedExposureTime = NA_real_,   accrualTime = NA_real_,   accrualIntensity = NA_real_,   followUpTime = NA_real_,   maxNumberOfSubjects = NA_integer_,   allocationRatioPlanned = NA_real_ )"},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Sample Size Counts — getSampleSizeCounts","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. lambda1 numeric value vector represents assumed rate homogeneous Poisson process active treatment group, default. lambda2 numeric value represents assumed rate homogeneous Poisson process control group, default. lambda numeric value vector represents assumed rate homogeneous Poisson process pooled treatment groups, default. theta numeric value vector represents assumed mean ratios lambda1/lambda2 homogeneous Poisson process, default. thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. count data: bound testing H0: lambda1 / lambda2 = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. overdispersion numeric value represents assumed overdispersion negative binomial distribution, default 0. fixedExposureTime specified, fixed time exposure per subject count data, default. accrualTime specified, assumed accrual time interval(s) study, default. accrualIntensity specified, assumed accrual intensities study, default. followUpTime specified, assumed (additional) follow-time study, default. total study duration accrualTime + followUpTime. maxNumberOfSubjects maxNumberOfSubjects > 0 needs specified power calculations calculation necessary follow-(count data). two treatment arms, maximum number subjects treatment arms. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. allocationRatioPlanned = 0 entered, optimal allocation ratio yielding smallest overall sample size determined.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Sample Size Counts — getSampleSizeCounts","text":"Returns TrialDesignPlan object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeCounts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Sample Size Counts — getSampleSizeCounts","text":"given design function calculates information, stage-wise maximum sample size testing mean rates negative binomial distributed event numbers two samples given effect. sample size calculation performed either fixed exposure time variable exposure time fixed follow-. variable exposure time case, given maximum sample size necessary follow-time calculated. planned calendar time interim stages calculated accrual time defined. Additionally, allocation ratio = n1 / n2 can specified n1 n2 number subjects two treatment groups. null hypothesis value thetaH0 can also specified.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeCounts.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Sample Size Counts — getSampleSizeCounts","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeCounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Sample Size Counts — getSampleSizeCounts","text":"","code":"if (FALSE) { # \\dontrun{ # Fixed sample size trial where a therapy is assumed to decrease the  # exacerbation rate from 1.4 to 1.05 (25% decrease) within an observation  # period of 1 year, i.e., each subject has an equal follow-up of 1 year. # The sample size that yields 90% power at significance level 0.025 for  # detecting such a difference, if the overdispersion is assumed to be  # equal to 0.5, is obtained by getSampleSizeCounts(alpha = 0.025, beta = 0.1, lambda2 = 1.4,      theta = 0.75, overdispersion = 0.5, fixedExposureTime = 1)  # Noninferiority test with blinded sample size reassessment to reproduce  # Table 2 from Friede and Schmidli (2010): getSampleSizeCounts(alpha = 0.025, beta = 0.2, lambda = 1, theta = 1,     thetaH0 = 1.15, overdispersion = 0.4, fixedExposureTime = 1)  # Group sequential alpha and beta spending function design with O'Brien and  # Fleming type boundaries: Estimate observation time under uniform  # recruitment of patients over 6 months and a fixed exposure time of 12  # months (lambda1, lambda2, and overdispersion as specified): getSampleSizeCounts(design = getDesignGroupSequential(         kMax = 3, alpha = 0.025, beta = 0.2,          typeOfDesign = \"asOF\", typeBetaSpending = \"bsOF\"),      lambda1 = 0.2, lambda2 = 0.3, overdispersion = 1,      fixedExposureTime = 12, accrualTime = 6)  # Group sequential alpha spending function design with O'Brien and Fleming  # type boundaries: Sample size for variable exposure time with uniform  # recruitment over 1.25 months and study time (accrual + followup) = 4  # (lambda1, lambda2, and overdispersion as specified, no futility stopping): getSampleSizeCounts(design = getDesignGroupSequential(         kMax = 3, alpha = 0.025, beta = 0.2, typeOfDesign = \"asOF\"),     lambda1 = 0.0875, lambda2 = 0.125, overdispersion = 5,      followUpTime = 2.75, accrualTime = 1.25) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Sample Size Means — getSampleSizeMeans","title":"Get Sample Size Means — getSampleSizeMeans","text":"Returns sample size testing means one two samples.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeMeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Sample Size Means — getSampleSizeMeans","text":"","code":"getSampleSizeMeans(   design = NULL,   ...,   groups = 2L,   normalApproximation = FALSE,   meanRatio = FALSE,   thetaH0 = ifelse(meanRatio, 1, 0),   alternative = seq(0.2, 1, 0.2),   stDev = 1,   allocationRatioPlanned = NA_real_ )"},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeMeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Sample Size Means — getSampleSizeMeans","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. groups number treatment groups (1 2), default 2. normalApproximation type computation p-values. TRUE, variance assumed known, default FALSE, .e., calculations performed t distribution. meanRatio TRUE, sample size one-sided testing H0: mu1 / mu2 = thetaH0 calculated, default FALSE. thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. count data: bound testing H0: lambda1 / lambda2 = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. alternative alternative hypothesis value testing means. can vector assumed alternatives, default seq(0, 1, 0.2) (power calculations) seq(0.2, 1, 0.2) (sample size calculations). stDev standard deviation sample size power calculation performed, default 1. two-armed trials, allowed specify standard deviations separately, .e., vector two elements. meanRatio = TRUE specified, stDev defines coefficient variation sigma / mu2. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. allocationRatioPlanned = 0 entered, optimal allocation ratio yielding smallest overall sample size determined.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeMeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Sample Size Means — getSampleSizeMeans","text":"Returns TrialDesignPlan object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Sample Size Means — getSampleSizeMeans","text":"given design function calculates stage-wise maximum sample size testing means. two treatment groups design, additionally, allocation ratio = n1 / n2 can specified n1 n2 number subjects two treatment groups. null hypothesis value thetaH0 != 0 testing difference two means thetaH0 != 1 testing ratio two means can specified. Critical bounds stopping futility bounds provided effect scale (mean, mean difference, mean ratio, respectively) sample size calculation separately.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeMeans.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Sample Size Means — getSampleSizeMeans","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeMeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Sample Size Means — getSampleSizeMeans","text":"","code":"if (FALSE) { # \\dontrun{ # Calculate sample sizes in a fixed sample size parallel group design  # with allocation ratio \\code{n1 / n2 = 2} for a range of  # alternative values 1, ..., 5 with assumed standard deviation = 3.5;  # two-sided alpha = 0.05, power 1 - beta = 90%: getSampleSizeMeans(alpha = 0.05, beta = 0.1, sided = 2, groups = 2,      alternative = seq(1, 5, 1), stDev = 3.5, allocationRatioPlanned = 2)  # Calculate sample sizes in a three-stage Pocock paired comparison design testing  # H0: mu = 2 for a range of alternative values 3,4,5 with assumed standard  # deviation = 3.5; one-sided alpha = 0.05, power 1 - beta = 90%: getSampleSizeMeans(getDesignGroupSequential(typeOfDesign = \"P\", alpha = 0.05,      sided = 1, beta = 0.1), groups = 1, thetaH0 = 2,      alternative = seq(3, 5, 1), stDev = 3.5)      # Calculate sample sizes in a three-stage Pocock two-armed design testing  # H0: mu = 2 for a range of alternative values 3,4,5 with assumed standard  # deviations = 3 and 4, respectively, in the two groups of observations;  # one-sided alpha = 0.05, power 1 - beta = 90%: getSampleSizeMeans(getDesignGroupSequential(typeOfDesign = \"P\", alpha = 0.05,      sided = 1, beta = 0.1), groups = 2,     alternative = seq(3, 5, 1), stDev = c(3, 4)) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Sample Size Rates — getSampleSizeRates","title":"Get Sample Size Rates — getSampleSizeRates","text":"Returns sample size testing rates one two samples.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeRates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Sample Size Rates — getSampleSizeRates","text":"","code":"getSampleSizeRates(   design = NULL,   ...,   groups = 2L,   normalApproximation = TRUE,   conservative = TRUE,   riskRatio = FALSE,   thetaH0 = ifelse(riskRatio, 1, 0),   pi1 = c(0.4, 0.5, 0.6),   pi2 = 0.2,   allocationRatioPlanned = NA_real_ )"},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeRates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Sample Size Rates — getSampleSizeRates","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. groups number treatment groups (1 2), default 2. normalApproximation FALSE, sample size case one treatment group calculated exactly using binomial distribution, default TRUE. conservative case one treatment group normalApproximation = FALSE, TRUE, sample size calculated larger sample size calculated, power larger 1 - beta, conservative = FALSE, minimum sample size, power exceeds 1 - beta calculated, default TRUE. riskRatio TRUE, sample size one-sided testing H0: pi1 / pi2 = thetaH0 calculated, default FALSE. thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. count data: bound testing H0: lambda1 / lambda2 = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. pi1 numeric value vector represents assumed probability active treatment group two treatment groups considered, alternative probability one treatment group design, default seq(0.2, 0.5, 0.1) (power calculations simulations) seq(0.4, 0.6, 0.1) (sample size calculations). pi2 numeric value represents assumed probability reference group two treatment groups considered, default 0.2. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. allocationRatioPlanned = 0 entered, optimal allocation ratio yielding smallest overall sample size determined.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeRates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Sample Size Rates — getSampleSizeRates","text":"Returns TrialDesignPlan object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Sample Size Rates — getSampleSizeRates","text":"given design function calculates stage-wise maximum sample size testing rates. two treatment groups design, additionally, allocation ratio = n1 / n2 can specified n1 n2 number subjects two treatment groups. null hypothesis value thetaH0 != 0 testing difference two rates thetaH0 != 1 testing risk ratio specified, sample size formula according Farrington & Manning (Statistics Medicine, 1990) used. Critical bounds stopping futility bounds provided effect scale (rate, rate difference, rate ratio, respectively) sample size calculation separately. two-sample case, calculation performed fixed pi2 given argument function.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeRates.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Sample Size Rates — getSampleSizeRates","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeRates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Sample Size Rates — getSampleSizeRates","text":"","code":"if (FALSE) { # \\dontrun{ # Calculate the stage-wise sample sizes, maximum sample sizes, and the optimum  # allocation ratios for a range of pi1 values when testing  # H0: pi1 - pi2 = -0.1 within a two-stage O'Brien & Fleming design; # alpha = 0.05 one-sided, power 1 - beta = 90%: getSampleSizeRates(getDesignGroupSequential(kMax = 2, alpha = 0.05,       beta = 0.1), groups = 2, thetaH0 = -0.1, pi1 = seq(0.4, 0.55, 0.025),      pi2 = 0.4, allocationRatioPlanned = 0)  # Calculate the stage-wise sample sizes, maximum sample sizes, and the optimum  # allocation ratios for a range of pi1 values when testing  # H0: pi1 / pi2 = 0.80 within a three-stage O'Brien & Fleming design; # alpha = 0.025 one-sided, power 1 - beta = 90%: getSampleSizeRates(getDesignGroupSequential(kMax = 3, alpha = 0.025,      beta = 0.1), groups = 2, riskRatio = TRUE, thetaH0 = 0.80,      pi1 = seq(0.3, 0.5, 0.025), pi2 = 0.3, allocationRatioPlanned = 0) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Sample Size Survival — getSampleSizeSurvival","title":"Get Sample Size Survival — getSampleSizeSurvival","text":"Returns sample size testing hazard ratio two treatment groups survival design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Sample Size Survival — getSampleSizeSurvival","text":"","code":"getSampleSizeSurvival(   design = NULL,   ...,   typeOfComputation = c(\"Schoenfeld\", \"Freedman\", \"HsiehFreedman\"),   thetaH0 = 1,   pi1 = NA_real_,   pi2 = NA_real_,   lambda1 = NA_real_,   lambda2 = NA_real_,   median1 = NA_real_,   median2 = NA_real_,   kappa = 1,   hazardRatio = NA_real_,   piecewiseSurvivalTime = NA_real_,   allocationRatioPlanned = NA_real_,   eventTime = 12,   accrualTime = c(0, 12),   accrualIntensity = 0.1,   accrualIntensityType = c(\"auto\", \"absolute\", \"relative\"),   followUpTime = NA_real_,   maxNumberOfSubjects = NA_real_,   dropoutRate1 = 0,   dropoutRate2 = 0,   dropoutTime = 12 )"},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Sample Size Survival — getSampleSizeSurvival","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. typeOfComputation Three options available: \"Schoenfeld\", \"Freedman\", \"HsiehFreedman\", default \"Schoenfeld\". details, see Hsieh (Statistics Medicine, 1992). non-inferiority testing (.e., thetaH0 != 1), Schoenfeld's formula can used. thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. count data: bound testing H0: lambda1 / lambda2 = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. pi1 numeric value vector represents assumed event rate treatment group, default seq(0.2, 0.5, 0.1) (power calculations simulations) seq(0.4, 0.6, 0.1) (sample size calculations). pi2 numeric value represents assumed event rate control group, default 0.2. lambda1 assumed hazard rate treatment group, default. lambda1 can also used define piecewise exponentially distributed survival times (see details). Must positive numeric length 1. lambda2 assumed hazard rate reference group, default. lambda2 can also used define piecewise exponentially distributed survival times (see details). Must positive numeric length 1. median1 assumed median survival time treatment group, default. median2 assumed median survival time reference group, default. Must positive numeric length 1. kappa numeric value > 0. kappa != 1 used specification shape Weibull distribution. Default 1, .e., exponential survival distribution used instead Weibull distribution. Note Weibull distribution used piecewise definition survival time distribution, .e., piecewiselambda (single value) kappa can specified. function equivalent pweibull(t, shape = kappa, scale = 1 / lambda) stats package, .e., scale parameter 1 / 'hazard rate'. example, getPiecewiseExponentialDistribution(time = 130, piecewiseLambda = 0.01, kappa = 4.2) pweibull(q = 130, shape = 4.2, scale = 1 / 0.01) provide result. hazardRatio vector hazard ratios consideration. event hazard rates treatment groups defined, hazard ratio needs specified calculated, default. Must positive numeric length 1. piecewiseSurvivalTime vector specifies time intervals piecewise definition exponential survival time cumulative distribution function  (details see getPiecewiseSurvivalTime()). allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. allocationRatioPlanned = 0 entered, optimal allocation ratio yielding smallest overall sample size determined. eventTime assumed time event rates calculated, default 12. accrualTime assumed accrual time intervals study, default c(0, 12) (details see getAccrualTime()). accrualIntensity numeric vector accrual intensities, default relative intensity 0.1 (details see getAccrualTime()). accrualIntensityType character value specifying accrual intensity input type. Must one \"auto\", \"absolute\", \"relative\"; default \"auto\", .e., values < 1 type \"relative\", otherwise \"absolute\". followUpTime assumed (additional) follow-time study, default 6. total study duration accrualTime + followUpTime. maxNumberOfSubjects maxNumberOfSubjects > 0 specified, follow-time required number events determined. dropoutRate1 assumed drop-rate treatment group, default 0. dropoutRate2 assumed drop-rate control group, default 0. dropoutTime assumed time drop-rates control treatment group, default 12.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Sample Size Survival — getSampleSizeSurvival","text":"Returns TrialDesignPlan object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeSurvival.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Sample Size Survival — getSampleSizeSurvival","text":"given design function calculates number events estimate necessary number subjects testing hazard ratio survival design. also calculates time required events expected given assumptions (exponentially, piecewise exponentially, Weibull distributed survival times constant non-constant piecewise accrual). Additionally, allocation ratio = n1 / n2 can specified n1 n2 number subjects two treatment groups. Optional argument accountForObservationTimes: accountForObservationTimes = TRUE, number subjects calculated assuming specific accrual follow-time, default TRUE. formula Kim & Tsiatis (Biometrics, 1990) used calculate expected number events alternative (see also Lakatos & Lan, Statistics Medicine, 1992). formulas generalized piecewise survival times non-constant piecewise accrual time. Optional argument accountForObservationTimes: accountForObservationTimes = FALSE, event rates used calculation maximum number subjects.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeSurvival.html","id":"piecewise-survival-time","dir":"Reference","previous_headings":"","what":"Piecewise survival time","title":"Get Sample Size Survival — getSampleSizeSurvival","text":"first element vector piecewiseSurvivalTime must equal 0. piecewiseSurvivalTime can also list combines definition time intervals hazard rates reference group. definition survival time treatment group obtained specification hazard ratio (see examples details).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeSurvival.html","id":"staggered-patient-entry","dir":"Reference","previous_headings":"","what":"Staggered patient entry","title":"Get Sample Size Survival — getSampleSizeSurvival","text":"accrualTime time period subjects' accrual study. can value defines end accrual vector. case, accrualTime can used define non-constant accrual time. , accrualTime vector defines accrual intervals. first element accrualTime must equal 0 , additionally, accrualIntensity needs specified. accrualIntensity value vector (depending length accrualTime) defines intensity subjects enter trial intervals defined accrualTime. accrualTime can also list combines definition accrual time accrual intensity (see examples details). length accrualTime length accrualIntensity (.e., end accrual undefined), maxNumberOfSubjects > 0 needs specified end accrual calculated. case, accrualIntensity number subjects per time unit, .e., absolute accrual intensity. length accrualTime equals length accrualIntensity - 1 (.e., end accrual defined), maxNumberOfSubjects calculated absolute accrual intensity given. elements accrualIntensity smaller 1, accrualIntensity defines relative intensity subjects enter trial. example, accrualIntensity = c(0.1, 0.2) specifies second accrual interval intensity doubled compared first accrual interval. actual (absolute) accrual intensity calculated calculated given maxNumberOfSubjects. Note default accrualIntensity = 0.1 meaning absolute accrual intensity calculated.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeSurvival.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Sample Size Survival — getSampleSizeSurvival","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getSampleSizeSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Sample Size Survival — getSampleSizeSurvival","text":"","code":"if (FALSE) { # \\dontrun{ # Fixed sample size trial with median survival 20 vs. 30 months in treatment and  # reference group, respectively, alpha = 0.05 (two-sided), and power 1 - beta = 90%. # 20 subjects will be recruited per month up to 400 subjects, i.e., accrual time  # is 20 months.   getSampleSizeSurvival(alpha = 0.05, sided = 2, beta = 0.1, lambda1 = log(2) / 20,      lambda2 = log(2) / 30, accrualTime = c(0,20), accrualIntensity = 20)  # Fixed sample size with minimum required definitions, pi1 = c(0.4,0.5,0.6) and  # pi2 = 0.2 at event time 12, accrual time 12 and follow-up time 6 as default,  # only alpha = 0.01 is specified   getSampleSizeSurvival(alpha = 0.01)  # Four stage O'Brien & Fleming group sequential design with minimum required  # definitions, pi1 = c(0.4,0.5,0.6) and pi2 = 0.2 at event time 12,  # accrual time 12 and follow-up time 6 as default   getSampleSizeSurvival(design = getDesignGroupSequential(kMax = 4))  # For fixed sample design, determine necessary accrual time if 200 subjects and  # 30 subjects per time unit can be recruited  getSampleSizeSurvival(accrualTime = c(0), accrualIntensity = c(30),      maxNumberOfSubjects = 200)  # Determine necessary accrual time if 200 subjects and if the first 6 time units  # 20 subjects per time unit can be recruited, then 30 subjects per time unit  getSampleSizeSurvival(accrualTime = c(0, 6), accrualIntensity = c(20, 30),      maxNumberOfSubjects = 200)  # Determine maximum number of Subjects if the first 6 time units 20 subjects  # per time unit can be recruited, and after 10 time units 30 subjects per time unit getSampleSizeSurvival(accrualTime = c(0, 6, 10), accrualIntensity = c(20, 30))  # Specify accrual time as a list at <- list(     \"0 - <6\"  = 20,     \"6 - Inf\" = 30) getSampleSizeSurvival(accrualTime = at, maxNumberOfSubjects = 200)  # Specify accrual time as a list, if maximum number of subjects need to be calculated at <- list(     \"0 - <6\"   = 20,     \"6 - <=10\" = 30) getSampleSizeSurvival(accrualTime = at)  # Specify effect size for a two-stage group design with O'Brien & Fleming boundaries # Effect size is based on event rates at specified event time  # needs to be specified because it should be shown that hazard ratio < 1 getSampleSizeSurvival(design = getDesignGroupSequential(kMax = 2),      pi1 = 0.2, pi2 = 0.3, eventTime = 24)  # Effect size is based on event rate at specified event  # time for the reference group and hazard ratio  getSampleSizeSurvival(design = getDesignGroupSequential(kMax = 2),      hazardRatio = 0.5, pi2 = 0.3, eventTime = 24)  # Effect size is based on hazard rate for the reference group and hazard ratio getSampleSizeSurvival(design = getDesignGroupSequential(kMax = 2),      hazardRatio = 0.5, lambda2 = 0.02)   # Specification of piecewise exponential survival time and hazard ratios   getSampleSizeSurvival(design = getDesignGroupSequential(kMax = 2),      piecewiseSurvivalTime = c(0, 5, 10), lambda2 = c(0.01, 0.02, 0.04),      hazardRatio = c(1.5, 1.8, 2))  # Specification of piecewise exponential survival time as a list and hazard ratios  pws <- list(     \"0 - <5\"  = 0.01,     \"5 - <10\" = 0.02,     \">=10\"    = 0.04) getSampleSizeSurvival(design = getDesignGroupSequential(kMax = 2),      piecewiseSurvivalTime = pws, hazardRatio = c(1.5, 1.8, 2))  # Specification of piecewise exponential survival time for both treatment arms getSampleSizeSurvival(design = getDesignGroupSequential(kMax = 2),      piecewiseSurvivalTime = c(0, 5, 10), lambda2 = c(0.01, 0.02, 0.04),      lambda1 = c(0.015, 0.03, 0.06))  # Specification of piecewise exponential survival time as a list pws <- list(     \"0 - <5\"  = 0.01,     \"5 - <10\" = 0.02,     \">=10\"    = 0.04) getSampleSizeSurvival(design = getDesignGroupSequential(kMax = 2),      piecewiseSurvivalTime = pws, hazardRatio = c(1.5, 1.8, 2))  # Specify effect size based on median survival times getSampleSizeSurvival(median1 = 5, median2 = 3)  # Specify effect size based on median survival times of Weibull distribtion with  # kappa = 2 getSampleSizeSurvival(median1 = 5, median2 = 3, kappa = 2)  # Identify minimal and maximal required subjects to  # reach the required events in spite of dropouts getSampleSizeSurvival(accrualTime = c(0, 18), accrualIntensity = c(20, 30),      lambda2 = 0.4, lambda1 = 0.3, followUpTime = Inf, dropoutRate1 = 0.001,      dropoutRate2 = 0.005) getSampleSizeSurvival(accrualTime = c(0, 18), accrualIntensity = c(20, 30),      lambda2 = 0.4, lambda1 = 0.3, followUpTime = 0, dropoutRate1 = 0.001,      dropoutRate2 = 0.005) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Simulation Counts — getSimulationCounts","title":"Get Simulation Counts — getSimulationCounts","text":"Returns simulated power, stopping probabilities, conditional power, expected sample size testing mean rates negative binomial distributed event numbers two treatment groups testing situation.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Simulation Counts — getSimulationCounts","text":"","code":"getSimulationCounts(   design = NULL,   ...,   plannedCalendarTime = NA_real_,   maxNumberOfSubjects = NA_real_,   lambda1 = NA_real_,   lambda2 = NA_real_,   lambda = NA_real_,   theta = NA_real_,   directionUpper = NA,   thetaH0 = 1,   overdispersion = 0,   fixedExposureTime = NA_real_,   accrualTime = NA_real_,   accrualIntensity = NA_real_,   followUpTime = NA_real_,   allocationRatioPlanned = NA_real_,   maxNumberOfIterations = 1000L,   seed = NA_real_,   showStatistics = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Simulation Counts — getSimulationCounts","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. plannedCalendarTime simulating count data, time points analysis planned performed. vector length kMax maxNumberOfSubjects maxNumberOfSubjects > 0 needs specified power calculations calculation necessary follow-(count data). two treatment arms, maximum number subjects treatment arms. lambda1 numeric value vector represents assumed rate homogeneous Poisson process active treatment group, default. lambda2 numeric value represents assumed rate homogeneous Poisson process control group, default. lambda numeric value vector represents assumed rate homogeneous Poisson process pooled treatment groups, default. theta numeric value vector represents assumed mean ratios lambda1/lambda2 homogeneous Poisson process, default. directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. count data: bound testing H0: lambda1 / lambda2 = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. overdispersion numeric value represents assumed overdispersion negative binomial distribution, default 0. fixedExposureTime specified, fixed time exposure per subject count data, default. accrualTime specified, assumed accrual time interval(s) study, default. accrualIntensity specified, assumed accrual intensities study, default. followUpTime specified, assumed (additional) follow-time study, default. total study duration accrualTime + followUpTime. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar. maxNumberOfIterations number simulation iterations, default 1000. Must positive integer length 1. seed seed reproduce simulation, default random seed. showStatistics Logical. TRUE, summary statistics simulated data displayed print command, otherwise output suppressed, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Simulation Counts — getSimulationCounts","text":"Returns SimulationResults object. following generics (R generic functions) available object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationCounts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Simulation Counts — getSimulationCounts","text":"given design function simulates power, stopping probabilities, conditional power, expected sample size given number subjects parameter configuration. Additionally, allocation ratio = n1/n2 null hypothesis value thetaH0 can specified.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationCounts.html","id":"simulation-data","dir":"Reference","previous_headings":"","what":"Simulation Data","title":"Get Simulation Counts — getSimulationCounts","text":"summary statistics \"Simulated data\" contains following parameters: median range; mean +/-sd $show(showStatistics = FALSE) $setShowStatistics(FALSE) can used disable output aggregated simulated data. getData() can used get aggregated simulated data object data.frame. data frame contains following columns: iterationNumber: number simulation iteration. stageNumber: stage. lambda1: assumed derived event rate treatment group. lambda2: assumed derived event rate control group. accrualTime: assumed accrualTime. followUpTime:  assumed followUpTime. overdispersion:  assumed overdispersion. fixedFollowUp:  assumed fixedFollowUp. numberOfSubjects: number subjects consideration (interim) analysis takes place. rejectPerStage: 1 null hypothesis can rejected, 0 otherwise. futilityPerStage: 1 study stopped futility, 0 otherwise. testStatistic: test statistic used test decision estimatedLambda1: estimated rate treatment group 1. estimatedLambda2: estimated rate treatment group 2. estimatedOverdispersion: estimated overdispersion. infoAnalysis: Fisher information interim stage. trialStop: TRUE study stopped efficacy futility final stage, FALSE otherwise. conditionalPowerAchieved: yet available","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationCounts.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Simulation Counts — getSimulationCounts","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationCounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Simulation Counts — getSimulationCounts","text":"","code":"if (FALSE) { # \\dontrun{ # Fixed sample size design with two groups, fixed exposure time getSimulationCounts(     theta = 1.8,     lambda2 = 0.2,     maxNumberOfSubjects = 200,     plannedCalendarTime = 8,     maxNumberOfIterations = 1000,     fixedExposureTime = 6,     accrualTime = 3,     overdispersion = 2)  # Group sequential design alpha spending function design with O'Brien and  # Fleming type boundaries: Power and test characteristics for N = 264,  # under variable exposure time with uniform recruitment over 1.25 months, # study time (accrual + followup) = 4, interim analysis take place after # equidistant time points (lambda1, lambda2, and overdispersion as specified, # no futility stopping): dOF <- getDesignGroupSequential(     kMax = 3,     alpha = 0.025,     beta = 0.2,     typeOfDesign = \"asOF\")  getSimulationCounts(design = dOF,     lambda1 = seq(0.04, 0.12, 0.02),     lambda2 = 0.12,     directionUpper = FALSE,     overdispersion = 5,     plannedCalendarTime = (1:3)/3*4,     maxNumberOfSubjects = 264,     followUpTime = 2.75,     accrualTime = 1.25,     maxNumberOfIterations = 1000) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Simulation Enrichment Means — getSimulationEnrichmentMeans","title":"Get Simulation Enrichment Means — getSimulationEnrichmentMeans","text":"Returns simulated power, stopping selection probabilities, conditional power, expected sample size testing means enrichment design testing situation.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentMeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Simulation Enrichment Means — getSimulationEnrichmentMeans","text":"","code":"getSimulationEnrichmentMeans(   design = NULL,   ...,   effectList = NULL,   intersectionTest = c(\"Simes\", \"SpiessensDebois\", \"Bonferroni\", \"Sidak\"),   stratifiedAnalysis = TRUE,   adaptations = NA,   typeOfSelection = c(\"best\", \"rBest\", \"epsilon\", \"all\", \"userDefined\"),   effectMeasure = c(\"effectEstimate\", \"testStatistic\"),   successCriterion = c(\"all\", \"atLeastOne\"),   epsilonValue = NA_real_,   rValue = NA_real_,   threshold = -Inf,   plannedSubjects = NA_integer_,   allocationRatioPlanned = NA_real_,   minNumberOfSubjectsPerStage = NA_real_,   maxNumberOfSubjectsPerStage = NA_real_,   conditionalPower = NA_real_,   thetaH1 = NA_real_,   stDevH1 = NA_real_,   maxNumberOfIterations = 1000L,   seed = NA_real_,   calcSubjectsFunction = NULL,   selectPopulationsFunction = NULL,   showStatistics = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentMeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Simulation Enrichment Means — getSimulationEnrichmentMeans","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. effectList List subsets, prevalences, effect sizes columns number rows reflecting different situations consider (see examples). intersectionTest Defines multiple test intersection hypotheses closed system hypotheses. Four options available enrichment designs: \"SpiessensDebois\", \"Bonferroni\", \"Simes\", \"Sidak\", default \"Simes\". stratifiedAnalysis Logical. enrichment designs, typically stratified analysis chosen. testing rates, also non-stratified analysis based overall data can performed. survival data, stratified analysis possible (see Brannath et al., 2009), default TRUE. adaptations logical vector length kMax - 1 indicating whether adaptation takes place interim k, default rep(TRUE, kMax - 1). typeOfSelection way treatment arms populations selected interim. Five options available: \"best\", \"rbest\", \"epsilon\", \"\", \"userDefined\", default \"best\". \"rbest\" (select rValue best treatment arms/populations), parameter rValue specified, \"epsilon\" (select treatment arm/population worse epsilon compared best), parameter epsilonValue specified. \"userDefined\" selected, \"selectArmsFunction\" \"selectPopulationsFunction\" specified. effectMeasure Criterion treatment arm/population selection, either based test statistic (\"testStatistic\") effect estimate (difference means rates ratio survival) (\"effectEstimate\"), default \"effectEstimate\". successCriterion Defines study stopped efficacy interim. Two options available: \"\" stops trial efficacy criterion fulfilled selected treatment arms/populations, \"atLeastOne\" stops least one selected treatment arms/populations shown superior control interim, default \"\". epsilonValue typeOfSelection = \"epsilon\" (select treatment arm / population worse epsilon compared best), parameter epsilonValue specified. Must numeric length 1. rValue typeOfSelection = \"rbest\" (select rValue best treatment arms / populations), parameter rValue specified. threshold Selection criterion: treatment arm / population selected effectMeasure exceeds threshold, default -Inf. threshold can also vector length activeArms referring separate threshold condition treatment arms. plannedSubjects plannedSubjects numeric vector length kMax (number stages design) determines number cumulated (overall) subjects interim stages planned. two treatment arms, number subjects treatment arms. multi-arm designs, plannedSubjects refers number subjects per selected active arm. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar. minNumberOfSubjectsPerStage performing data driven sample size recalculation, numeric vector minNumberOfSubjectsPerStage length kMax determines minimum number subjects per stage (.e., cumulated), first element taken account. two treatment arms, number subjects treatment arms. multi-arm designs minNumberOfSubjectsPerStage refers minimum number subjects per selected active arm. maxNumberOfSubjectsPerStage performing data driven sample size recalculation, numeric vector maxNumberOfSubjectsPerStage length kMax determines maximum number subjects per stage (.e., cumulated), first element taken account. two treatment arms, number subjects treatment arms. multi-arm designs maxNumberOfSubjectsPerStage refers maximum number subjects per selected active arm. conditionalPower conditionalPower together minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (minNumberOfEventsPerStage maxNumberOfEventsPerStage survival designs) specified, sample size recalculation based specified conditional power performed. defined power subsequent stage given current data. default, conditional power calculated observed effect size. Optionally, can also specify thetaH1 stDevH1 (simulating means), pi1H1 pi2H1 (simulating rates), thetaH1 (simulating hazard ratios) parameters calculated sample size recalculation performed. thetaH1 specified, value alternative conditional power sample size recalculation calculation performed. Must numeric length 1. stDevH1 specified, value standard deviation conditional power sample size recalculation calculation performed, default value stDev. maxNumberOfIterations number simulation iterations, default 1000. Must positive integer length 1. seed seed reproduce simulation, default random seed. calcSubjectsFunction Optionally, function can entered defines way performing sample size recalculation. default, sample size recalculation performed conditional power specified minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (see details examples). selectPopulationsFunction Optionally, function can entered defines way populations selected. function allowed depend effectVector length populations stage, conditionalPower, conditionalCriticalValue, plannedSubjects/plannedEvents, allocationRatioPlanned, selectedPopulations, thetaH1 (means survival), stDevH1 (means), overallEffects, rates additionally: piTreatmentsH1, piControlH1, overallRates, overallRatesControl (see examples). showStatistics Logical. TRUE, summary statistics simulated data displayed print command, otherwise output suppressed, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentMeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Simulation Enrichment Means — getSimulationEnrichmentMeans","text":"Returns SimulationResults object. following generics (R generic functions) available object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Simulation Enrichment Means — getSimulationEnrichmentMeans","text":"given design function simulates power, stopping probabilities, selection probabilities, expected sample size given number subjects, parameter configuration, population selection rule enrichment situation. allocation ratio can specified referring ratio number subjects active treatment groups compared control group. definition thetaH1 /stDevH1 makes sense kMax > 1 conditionalPower, minNumberOfSubjectsPerStage, maxNumberOfSubjectsPerStage (calcSubjectsFunction) defined. calcSubjectsFunction function returns number subjects given conditional power conditional critical value specified testing situation. function might depend variables stage, selectedPopulations, plannedSubjects, allocationRatioPlanned, minNumberOfSubjectsPerStage, maxNumberOfSubjectsPerStage, conditionalPower, conditionalCriticalValue, overallEffects, stDevH1. function contain three-dots argument '...' (see examples).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentMeans.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Simulation Enrichment Means — getSimulationEnrichmentMeans","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentMeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Simulation Enrichment Means — getSimulationEnrichmentMeans","text":"","code":"if (FALSE) { # \\dontrun{ # Assess a population selection strategy with one subset population. # If the subset is better than the full population, then the subset # is selected for the second stage, otherwise the full. Print and plot # design characteristics.  # Define design designIN <- getDesignInverseNormal(kMax = 2)  # Define subgroups and their prevalences subGroups <- c(\"S\", \"R\") # fixed names! prevalences <- c(0.2, 0.8)  # Define effect matrix and variability effectR <- 0.2 m <- c() for (effectS in seq(0, 0.5, 0.25)) {     m <- c(m, effectS, effectR) } effects <- matrix(m, byrow = TRUE, ncol = 2) stDev <- c(0.4, 0.8)  # Define effect list effectList <- list(subGroups=subGroups, prevalences=prevalences, stDevs = stDev, effects = effects)  # Perform simulation simResultsPE <- getSimulationEnrichmentMeans(design = designIN,     effectList = effectList, plannedSubjects = c(50, 100),     maxNumberOfIterations = 100) print(simResultsPE)  # Assess the design characteristics of a user defined selection # strategy in a three-stage design with no interim efficacy stop # using the inverse normal method for combining the stages. # Only the second interim is used for a selecting of a study # population. There is a small probability for stopping the trial # at the first interim.  # Define design designIN2 <- getDesignInverseNormal(typeOfDesign = \"noEarlyEfficacy\", kMax = 3)  # Define selection function mySelection <- function(effectVector, stage) {     selectedPopulations <- rep(TRUE, 3)     if (stage == 2) {         selectedPopulations <- (effectVector >= c(1, 2, 3))     }     return(selectedPopulations) }  # Define subgroups and their prevalences subGroups <- c(\"S1\", \"S12\", \"S2\", \"R\")   # fixed names! prevalences <- c(0.2, 0.3, 0.4, 0.1)  effectR <- 1.5 effectS12 = 5 m <- c() for (effectS1 in seq(0, 5, 1)) {     for (effectS2 in seq(0, 5, 1)) {         m <- c(m, effectS1, effectS12, effectS2, effectR)     } } effects <- matrix(m, byrow = TRUE, ncol = 4) stDev <- 10  # Define effect list effectList <- list(subGroups=subGroups, prevalences=prevalences, stDevs = stDev, effects = effects)  # Perform simulation simResultsPE <- getSimulationEnrichmentMeans(     design = designIN2,     effectList = effectList,     typeOfSelection = \"userDefined\",     selectPopulationsFunction = mySelection,     intersectionTest = \"Simes\",     plannedSubjects = c(50, 100, 150),     maxNumberOfIterations = 100) print(simResultsPE) if (require(ggplot2)) plot(simResultsPE, type = 3) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Simulation Enrichment Rates — getSimulationEnrichmentRates","title":"Get Simulation Enrichment Rates — getSimulationEnrichmentRates","text":"Returns simulated power, stopping selection probabilities, conditional power, expected sample size testing rates enrichment design testing situation.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentRates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Simulation Enrichment Rates — getSimulationEnrichmentRates","text":"","code":"getSimulationEnrichmentRates(   design = NULL,   ...,   effectList = NULL,   intersectionTest = c(\"Simes\", \"SpiessensDebois\", \"Bonferroni\", \"Sidak\"),   stratifiedAnalysis = TRUE,   directionUpper = NA,   adaptations = NA,   typeOfSelection = c(\"best\", \"rBest\", \"epsilon\", \"all\", \"userDefined\"),   effectMeasure = c(\"effectEstimate\", \"testStatistic\"),   successCriterion = c(\"all\", \"atLeastOne\"),   epsilonValue = NA_real_,   rValue = NA_real_,   threshold = -Inf,   plannedSubjects = NA_real_,   allocationRatioPlanned = NA_real_,   minNumberOfSubjectsPerStage = NA_real_,   maxNumberOfSubjectsPerStage = NA_real_,   conditionalPower = NA_real_,   piTreatmentH1 = NA_real_,   piControlH1 = NA_real_,   maxNumberOfIterations = 1000L,   seed = NA_real_,   calcSubjectsFunction = NULL,   selectPopulationsFunction = NULL,   showStatistics = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentRates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Simulation Enrichment Rates — getSimulationEnrichmentRates","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. effectList List subsets, prevalences, effect sizes columns number rows reflecting different situations consider (see examples). intersectionTest Defines multiple test intersection hypotheses closed system hypotheses. Four options available enrichment designs: \"SpiessensDebois\", \"Bonferroni\", \"Simes\", \"Sidak\", default \"Simes\". stratifiedAnalysis Logical. enrichment designs, typically stratified analysis chosen. testing rates, also non-stratified analysis based overall data can performed. survival data, stratified analysis possible (see Brannath et al., 2009), default TRUE. directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. adaptations logical vector length kMax - 1 indicating whether adaptation takes place interim k, default rep(TRUE, kMax - 1). typeOfSelection way treatment arms populations selected interim. Five options available: \"best\", \"rbest\", \"epsilon\", \"\", \"userDefined\", default \"best\". \"rbest\" (select rValue best treatment arms/populations), parameter rValue specified, \"epsilon\" (select treatment arm/population worse epsilon compared best), parameter epsilonValue specified. \"userDefined\" selected, \"selectArmsFunction\" \"selectPopulationsFunction\" specified. effectMeasure Criterion treatment arm/population selection, either based test statistic (\"testStatistic\") effect estimate (difference means rates ratio survival) (\"effectEstimate\"), default \"effectEstimate\". successCriterion Defines study stopped efficacy interim. Two options available: \"\" stops trial efficacy criterion fulfilled selected treatment arms/populations, \"atLeastOne\" stops least one selected treatment arms/populations shown superior control interim, default \"\". epsilonValue typeOfSelection = \"epsilon\" (select treatment arm / population worse epsilon compared best), parameter epsilonValue specified. Must numeric length 1. rValue typeOfSelection = \"rbest\" (select rValue best treatment arms / populations), parameter rValue specified. threshold Selection criterion: treatment arm / population selected effectMeasure exceeds threshold, default -Inf. threshold can also vector length activeArms referring separate threshold condition treatment arms. plannedSubjects plannedSubjects numeric vector length kMax (number stages design) determines number cumulated (overall) subjects interim stages planned. two treatment arms, number subjects treatment arms. multi-arm designs, plannedSubjects refers number subjects per selected active arm. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar. minNumberOfSubjectsPerStage performing data driven sample size recalculation, numeric vector minNumberOfSubjectsPerStage length kMax determines minimum number subjects per stage (.e., cumulated), first element taken account. two treatment arms, number subjects treatment arms. multi-arm designs minNumberOfSubjectsPerStage refers minimum number subjects per selected active arm. maxNumberOfSubjectsPerStage performing data driven sample size recalculation, numeric vector maxNumberOfSubjectsPerStage length kMax determines maximum number subjects per stage (.e., cumulated), first element taken account. two treatment arms, number subjects treatment arms. multi-arm designs maxNumberOfSubjectsPerStage refers maximum number subjects per selected active arm. conditionalPower conditionalPower together minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (minNumberOfEventsPerStage maxNumberOfEventsPerStage survival designs) specified, sample size recalculation based specified conditional power performed. defined power subsequent stage given current data. default, conditional power calculated observed effect size. Optionally, can also specify thetaH1 stDevH1 (simulating means), pi1H1 pi2H1 (simulating rates), thetaH1 (simulating hazard ratios) parameters calculated sample size recalculation performed. piTreatmentH1 specified, assumed probabilities active arm sample size recalculation performed conditional power calculated. piControlH1 specified, assumed probabilities control arm sample size recalculation performed conditional power calculated. maxNumberOfIterations number simulation iterations, default 1000. Must positive integer length 1. seed seed reproduce simulation, default random seed. calcSubjectsFunction Optionally, function can entered defines way performing sample size recalculation. default, sample size recalculation performed conditional power specified minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (see details examples). selectPopulationsFunction Optionally, function can entered defines way populations selected. function allowed depend effectVector length populations stage, conditionalPower, conditionalCriticalValue, plannedSubjects/plannedEvents, allocationRatioPlanned, selectedPopulations, thetaH1 (means survival), stDevH1 (means), overallEffects, rates additionally: piTreatmentsH1, piControlH1, overallRates, overallRatesControl (see examples). showStatistics Logical. TRUE, summary statistics simulated data displayed print command, otherwise output suppressed, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentRates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Simulation Enrichment Rates — getSimulationEnrichmentRates","text":"Returns SimulationResults object. following generics (R generic functions) available object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Simulation Enrichment Rates — getSimulationEnrichmentRates","text":"given design function simulates power, stopping probabilities, selection probabilities, expected sample size given number subjects, parameter configuration, treatment arm selection rule enrichment situation. allocation ratio can specified referring ratio number subjects active treatment groups compared control group. definition piTreatmentH1 /piControlH1 makes sense kMax > 1 conditionalPower, minNumberOfSubjectsPerStage, maxNumberOfSubjectsPerStage (calcSubjectsFunction) defined. calcSubjectsFunction function returns number subjects given conditional power conditional critical value specified testing situation. function might depend variables stage, selectedPopulations, directionUpper, plannedSubjects, allocationRatioPlanned, minNumberOfSubjectsPerStage, maxNumberOfSubjectsPerStage, conditionalPower, conditionalCriticalValue, overallRatesTreatment, overallRatesControl, piTreatmentH1, piControlH1. function contain three-dots argument '...' (see examples).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentRates.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Simulation Enrichment Rates — getSimulationEnrichmentRates","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentRates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Simulation Enrichment Rates — getSimulationEnrichmentRates","text":"","code":"if (FALSE) { # \\dontrun{ # Assess a population selection strategy with two subset populations and # a binary endpoint using a stratified analysis. No early efficacy stop, # weighted inverse normal method with weight sqrt(0.4). pi2 <- c(0.3, 0.4, 0.3, 0.55) pi1Seq <- seq(0.0, 0.2, 0.2) pi1 <- matrix(rep(pi1Seq, length(pi2)), ncol = length(pi1Seq), byrow = TRUE) + pi2 effectList <- list(     subGroups = c(\"S1\", \"S2\", \"S12\", \"R\"),      prevalences = c(0.1, 0.4, 0.2, 0.3),     piControl = pi2,      piTreatments = expand.grid(pi1[1, ], pi1[2, ], pi1[3, ], pi1[4, ]) ) design <- getDesignInverseNormal(informationRates = c(0.4, 1),     typeOfDesign = \"noEarlyEfficacy\") simResultsPE <- getSimulationEnrichmentRates(design,      plannedSubjects = c(150, 300),     allocationRatioPlanned = 1.5, directionUpper = TRUE,     effectList = effectList, stratifiedAnalysis = TRUE,     intersectionTest = \"Sidak\",     typeOfSelection = \"epsilon\", epsilonValue = 0.025,     maxNumberOfIterations = 100) print(simResultsPE)   } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Simulation Enrichment Survival — getSimulationEnrichmentSurvival","title":"Get Simulation Enrichment Survival — getSimulationEnrichmentSurvival","text":"Returns simulated power, stopping selection probabilities, conditional power, expected sample size testing hazard ratios enrichment design testing situation. contrast getSimulationSurvival() (survival times simulated), normally distributed logrank test statistics simulated.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Simulation Enrichment Survival — getSimulationEnrichmentSurvival","text":"","code":"getSimulationEnrichmentSurvival(   design = NULL,   ...,   effectList = NULL,   intersectionTest = c(\"Simes\", \"SpiessensDebois\", \"Bonferroni\", \"Sidak\"),   stratifiedAnalysis = TRUE,   directionUpper = NA,   adaptations = NA,   typeOfSelection = c(\"best\", \"rBest\", \"epsilon\", \"all\", \"userDefined\"),   effectMeasure = c(\"effectEstimate\", \"testStatistic\"),   successCriterion = c(\"all\", \"atLeastOne\"),   epsilonValue = NA_real_,   rValue = NA_real_,   threshold = -Inf,   plannedEvents = NA_real_,   allocationRatioPlanned = NA_real_,   minNumberOfEventsPerStage = NA_real_,   maxNumberOfEventsPerStage = NA_real_,   conditionalPower = NA_real_,   thetaH1 = NA_real_,   maxNumberOfIterations = 1000L,   seed = NA_real_,   calcEventsFunction = NULL,   selectPopulationsFunction = NULL,   showStatistics = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Simulation Enrichment Survival — getSimulationEnrichmentSurvival","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. effectList List subsets, prevalences, effect sizes columns number rows reflecting different situations consider (see examples). intersectionTest Defines multiple test intersection hypotheses closed system hypotheses. Four options available enrichment designs: \"SpiessensDebois\", \"Bonferroni\", \"Simes\", \"Sidak\", default \"Simes\". stratifiedAnalysis Logical. enrichment designs, typically stratified analysis chosen. testing rates, also non-stratified analysis based overall data can performed. survival data, stratified analysis possible (see Brannath et al., 2009), default TRUE. directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. adaptations logical vector length kMax - 1 indicating whether adaptation takes place interim k, default rep(TRUE, kMax - 1). typeOfSelection way treatment arms populations selected interim. Five options available: \"best\", \"rbest\", \"epsilon\", \"\", \"userDefined\", default \"best\". \"rbest\" (select rValue best treatment arms/populations), parameter rValue specified, \"epsilon\" (select treatment arm/population worse epsilon compared best), parameter epsilonValue specified. \"userDefined\" selected, \"selectArmsFunction\" \"selectPopulationsFunction\" specified. effectMeasure Criterion treatment arm/population selection, either based test statistic (\"testStatistic\") effect estimate (difference means rates ratio survival) (\"effectEstimate\"), default \"effectEstimate\". successCriterion Defines study stopped efficacy interim. Two options available: \"\" stops trial efficacy criterion fulfilled selected treatment arms/populations, \"atLeastOne\" stops least one selected treatment arms/populations shown superior control interim, default \"\". epsilonValue typeOfSelection = \"epsilon\" (select treatment arm / population worse epsilon compared best), parameter epsilonValue specified. Must numeric length 1. rValue typeOfSelection = \"rbest\" (select rValue best treatment arms / populations), parameter rValue specified. threshold Selection criterion: treatment arm / population selected effectMeasure exceeds threshold, default -Inf. threshold can also vector length activeArms referring separate threshold condition treatment arms. plannedEvents plannedEvents numeric vector length kMax (number stages design) determines number cumulated (overall) events survival designs interim stages planned. two treatment arms, number events treatment arms. multi-arm designs, plannedEvents refers overall number events selected arms plus control. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar. minNumberOfEventsPerStage performing data driven sample size recalculation, numeric vector minNumberOfEventsPerStage length kMax determines minimum number events per stage (.e., cumulated), first element taken account. maxNumberOfEventsPerStage performing data driven sample size recalculation, numeric vector maxNumberOfEventsPerStage length kMax determines maximum number events per stage (.e., cumulated), first element taken account. conditionalPower conditionalPower together minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (minNumberOfEventsPerStage maxNumberOfEventsPerStage survival designs) specified, sample size recalculation based specified conditional power performed. defined power subsequent stage given current data. default, conditional power calculated observed effect size. Optionally, can also specify thetaH1 stDevH1 (simulating means), pi1H1 pi2H1 (simulating rates), thetaH1 (simulating hazard ratios) parameters calculated sample size recalculation performed. thetaH1 specified, value alternative conditional power sample size recalculation calculation performed. Must numeric length 1. maxNumberOfIterations number simulation iterations, default 1000. Must positive integer length 1. seed seed reproduce simulation, default random seed. calcEventsFunction Optionally, function can entered defines way performing sample size recalculation. default, event number recalculation performed conditional power specified minNumberOfEventsPerStage maxNumberOfEventsPerStage (see details examples). selectPopulationsFunction Optionally, function can entered defines way populations selected. function allowed depend effectVector length populations stage, conditionalPower, conditionalCriticalValue, plannedSubjects/plannedEvents, allocationRatioPlanned, selectedPopulations, thetaH1 (means survival), stDevH1 (means), overallEffects, rates additionally: piTreatmentsH1, piControlH1, overallRates, overallRatesControl (see examples). showStatistics Logical. TRUE, summary statistics simulated data displayed print command, otherwise output suppressed, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Simulation Enrichment Survival — getSimulationEnrichmentSurvival","text":"Returns SimulationResults object. following generics (R generic functions) available object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentSurvival.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Simulation Enrichment Survival — getSimulationEnrichmentSurvival","text":"given design function simulates power, stopping probabilities, selection probabilities, expected event number given number events, parameter configuration, population selection rule enrichment situation. allocation ratio can specified referring ratio number subjects active treatment group compared control group. definition thetaH1 makes sense kMax > 1 conditionalPower, minNumberOfEventsPerStage, maxNumberOfEventsPerStage (calcEventsFunction) defined. calcEventsFunction function returns number events given conditional power conditional critical value specified testing situation. function might depend variables stage, selectedPopulations, plannedEvents, directionUpper, allocationRatioPlanned, minNumberOfEventsPerStage, maxNumberOfEventsPerStage, conditionalPower, conditionalCriticalValue, overallEffects. function contain three-dots argument '...' (see examples).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentSurvival.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Simulation Enrichment Survival — getSimulationEnrichmentSurvival","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationEnrichmentSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Simulation Enrichment Survival — getSimulationEnrichmentSurvival","text":"","code":"if (FALSE) { # \\dontrun{ # Assess a population selection strategy with one subset population and # a survival endpoint. The considered situations are defined through the  # event rates yielding a range of hazard ratios in the subsets. Design  # with O'Brien and Fleming alpha spending and a reassessment of event  # number in the first interim based on conditional power and assumed  # hazard ratio using weighted inverse normal combination test.        subGroups <- c(\"S\", \"R\") prevalences <- c(0.40, 0.60)   p2 <- c(0.3, 0.4) range1 <- p2[1] + seq(0, 0.3, 0.05)  p1 <- c() for (x1 in range1) {     p1 <- c(p1, x1, p2[2] + 0.1) }     hazardRatios <- log(matrix(1 - p1, byrow = TRUE, ncol = 2)) /     matrix(log(1 - p2), byrow = TRUE, ncol = 2,     nrow = length(range1))  effectList <- list(subGroups=subGroups, prevalences=prevalences,     hazardRatios = hazardRatios)  design <- getDesignInverseNormal(informationRates = c(0.3, 0.7, 1),     typeOfDesign = \"asOF\")  simResultsPE <- getSimulationEnrichmentSurvival(design,      plannedEvents = c(40, 90, 120),     effectList = effectList,     typeOfSelection = \"rbest\", rValue = 2,     conditionalPower = 0.8, minNumberOfEventsPerStage = c(NA, 50, 30),     maxNumberOfEventsPerStage = c(NA, 150, 30), thetaH1 = 4 / 3,     maxNumberOfIterations = 100) print(simResultsPE) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Simulation Means — getSimulationMeans","title":"Get Simulation Means — getSimulationMeans","text":"Returns simulated power, stopping probabilities, conditional power, expected sample size testing means one two treatment groups testing situation.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Simulation Means — getSimulationMeans","text":"","code":"getSimulationMeans(   design = NULL,   ...,   groups = 2L,   normalApproximation = TRUE,   meanRatio = FALSE,   thetaH0 = ifelse(meanRatio, 1, 0),   alternative = seq(0, 1, 0.2),   stDev = 1,   plannedSubjects = NA_real_,   directionUpper = NA,   allocationRatioPlanned = NA_real_,   minNumberOfSubjectsPerStage = NA_real_,   maxNumberOfSubjectsPerStage = NA_real_,   conditionalPower = NA_real_,   thetaH1 = NA_real_,   stDevH1 = NA_real_,   maxNumberOfIterations = 1000L,   seed = NA_real_,   calcSubjectsFunction = NULL,   showStatistics = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Simulation Means — getSimulationMeans","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. groups number treatment groups (1 2), default 2. normalApproximation type computation p-values. Default TRUE, .e., normally distributed test statistics generated. FALSE, t test used calculating p-values, .e., t distributed test statistics generated. meanRatio TRUE, design characteristics one-sided testing H0: mu1 / mu2 = thetaH0 simulated, default FALSE. thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. count data: bound testing H0: lambda1 / lambda2 = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. alternative alternative hypothesis value testing means data simulated. can vector assumed alternatives, default seq(0, 1, 0.2). stDev standard deviation data simulated, default 1. two-armed trials, allowed specify standard deviations separately, .e., vector two elements. meanRatio = TRUE specified, stDev defines coefficient variation sigma / mu2. plannedSubjects plannedSubjects numeric vector length kMax (number stages design) determines number cumulated (overall) subjects interim stages planned. two treatment arms, number subjects treatment arms. multi-arm designs, plannedSubjects refers number subjects per selected active arm. directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar. minNumberOfSubjectsPerStage performing data driven sample size recalculation, numeric vector minNumberOfSubjectsPerStage length kMax determines minimum number subjects per stage (.e., cumulated), first element taken account. two treatment arms, number subjects treatment arms. multi-arm designs minNumberOfSubjectsPerStage refers minimum number subjects per selected active arm. maxNumberOfSubjectsPerStage performing data driven sample size recalculation, numeric vector maxNumberOfSubjectsPerStage length kMax determines maximum number subjects per stage (.e., cumulated), first element taken account. two treatment arms, number subjects treatment arms. multi-arm designs maxNumberOfSubjectsPerStage refers maximum number subjects per selected active arm. conditionalPower conditionalPower together minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (minNumberOfEventsPerStage maxNumberOfEventsPerStage survival designs) specified, sample size recalculation based specified conditional power performed. defined power subsequent stage given current data. default, conditional power calculated observed effect size. Optionally, can also specify thetaH1 stDevH1 (simulating means), pi1H1 pi2H1 (simulating rates), thetaH1 (simulating hazard ratios) parameters calculated sample size recalculation performed. thetaH1 specified, value alternative conditional power sample size recalculation calculation performed. Must numeric length 1. stDevH1 specified, value standard deviation conditional power sample size recalculation calculation performed, default value stDev. maxNumberOfIterations number simulation iterations, default 1000. Must positive integer length 1. seed seed reproduce simulation, default random seed. calcSubjectsFunction Optionally, function can entered defines way performing sample size recalculation. default, sample size recalculation performed conditional power specified minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (see details examples). showStatistics Logical. TRUE, summary statistics simulated data displayed print command, otherwise output suppressed, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Simulation Means — getSimulationMeans","text":"Returns SimulationResults object. following generics (R generic functions) available object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Simulation Means — getSimulationMeans","text":"given design function simulates power, stopping probabilities, conditional power, expected sample size given number subjects parameter configuration. Additionally, allocation ratio = n1/n2 can specified n1 n2 number subjects two treatment groups. definition thetaH1 makes sense kMax > 1 conditionalPower, minNumberOfSubjectsPerStage, maxNumberOfSubjectsPerStage (calcSubjectsFunction) defined. calcSubjectsFunction function returns number subjects given conditional power conditional critical value specified testing situation. function might depend variables stage, meanRatio, thetaH0, groups, plannedSubjects, sampleSizesPerStage, directionUpper, allocationRatioPlanned, minNumberOfSubjectsPerStage, maxNumberOfSubjectsPerStage, conditionalPower, conditionalCriticalValue, thetaH1, stDevH1. function contain three-dots argument '...' (see examples).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMeans.html","id":"simulation-data","dir":"Reference","previous_headings":"","what":"Simulation Data","title":"Get Simulation Means — getSimulationMeans","text":"summary statistics \"Simulated data\" contains following parameters: median range; mean +/-sd $show(showStatistics = FALSE) $setShowStatistics(FALSE) can used disable output aggregated simulated data. Example 1: simulationResults <- getSimulationMeans(plannedSubjects = 40) simulationResults$show(showStatistics = FALSE) Example 2: simulationResults <- getSimulationMeans(plannedSubjects = 40) simulationResults$setShowStatistics(FALSE)simulationResults getData() can used get aggregated simulated data object data.frame. data frame contains following columns: iterationNumber: number simulation iteration. stageNumber: stage. alternative: alternative hypothesis value. numberOfSubjects: number subjects consideration (interim) analysis takes place. rejectPerStage: 1 null hypothesis can rejected, 0 otherwise. futilityPerStage: 1 study stopped futility, 0 otherwise. testStatistic: test statistic used test decision, depends design chosen (group sequential, inverse normal, Fisher's combination test). testStatisticsPerStage: test statistic stage data considered stage taken account. effectEstimate: Overall simulated standardized effect estimate. trialStop: TRUE study stopped efficacy futility final stage, FALSE otherwise. conditionalPowerAchieved: conditional power subsequent stage trial selected sample size effect. effect either estimated data can user defined thetaH1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMeans.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Simulation Means — getSimulationMeans","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Simulation Means — getSimulationMeans","text":"","code":"if (FALSE) { # \\dontrun{ # Fixed sample size design with two groups, total sample size 40, # alternative = c(0, 0.2, 0.4, 0.8, 1), and standard deviation = 1 (the default) getSimulationMeans(plannedSubjects = 40, maxNumberOfIterations = 10)  # Increase number of simulation iterations and compare results # with power calculator using normal approximation getSimulationMeans(     alternative = 0:4, stDev = 5,     plannedSubjects = 40, maxNumberOfIterations = 1000 ) getPowerMeans(     alternative = 0:4, stDev = 5,     maxNumberOfSubjects = 40, normalApproximation = TRUE )  # Do the same for a three-stage O'Brien&Fleming inverse # normal group sequential design with non-binding futility stops designIN <- getDesignInverseNormal(typeOfDesign = \"OF\", futilityBounds = c(0, 0)) x <- getSimulationMeans(designIN,     alternative = c(0:4), stDev = 5,     plannedSubjects = c(20, 40, 60), maxNumberOfIterations = 1000 ) getPowerMeans(designIN,     alternative = 0:4, stDev = 5,     maxNumberOfSubjects = 60, normalApproximation = TRUE )  # Assess power and average sample size if a sample size increase is foreseen # at conditional power 80% for each subsequent stage based on observed overall # effect and specified minNumberOfSubjectsPerStage and # maxNumberOfSubjectsPerStage getSimulationMeans(designIN,     alternative = 0:4, stDev = 5,     plannedSubjects = c(20, 40, 60),     minNumberOfSubjectsPerStage = c(NA, 20, 20),     maxNumberOfSubjectsPerStage = c(NA, 80, 80),     conditionalPower = 0.8,     maxNumberOfIterations = 50 )  # Do the same under the assumption that a sample size increase only takes # place at the first interim. The sample size for the third stage is set equal # to the second stage sample size. mySampleSizeCalculationFunction <- function(..., stage,         minNumberOfSubjectsPerStage,         maxNumberOfSubjectsPerStage,         sampleSizesPerStage,         conditionalPower,         conditionalCriticalValue,         allocationRatioPlanned,         thetaH1,         stDevH1) {     if (stage <= 2) {         # Note that allocationRatioPlanned is as a vector of length kMax         stageSubjects <- (1 + allocationRatioPlanned[stage])^2 /              allocationRatioPlanned[stage] *             (max(0, conditionalCriticalValue + stats::qnorm(conditionalPower)))^2 /             (max(1e-12, thetaH1 / stDevH1))^2         stageSubjects <- min(max(             minNumberOfSubjectsPerStage[stage],             stageSubjects         ), maxNumberOfSubjectsPerStage[stage])     } else {         stageSubjects <- sampleSizesPerStage[stage - 1]     }     return(stageSubjects) } getSimulationMeans(designIN,     alternative = 0:4, stDev = 5,     plannedSubjects = c(20, 40, 60),     minNumberOfSubjectsPerStage = c(NA, 20, 20),     maxNumberOfSubjectsPerStage = c(NA, 80, 80),     conditionalPower = 0.8,     calcSubjectsFunction = mySampleSizeCalculationFunction,     maxNumberOfIterations = 50 ) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Simulation Multi-Arm Means — getSimulationMultiArmMeans","title":"Get Simulation Multi-Arm Means — getSimulationMultiArmMeans","text":"Returns simulated power, stopping selection probabilities, conditional power, expected sample size testing means multi-arm treatment groups testing situation.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmMeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Simulation Multi-Arm Means — getSimulationMultiArmMeans","text":"","code":"getSimulationMultiArmMeans(   design = NULL,   ...,   activeArms = 3L,   effectMatrix = NULL,   typeOfShape = c(\"linear\", \"sigmoidEmax\", \"userDefined\"),   muMaxVector = seq(0, 1, 0.2),   gED50 = NA_real_,   slope = 1,   doseLevels = NA_real_,   intersectionTest = c(\"Dunnett\", \"Bonferroni\", \"Simes\", \"Sidak\", \"Hierarchical\"),   stDev = 1,   adaptations = NA,   typeOfSelection = c(\"best\", \"rBest\", \"epsilon\", \"all\", \"userDefined\"),   effectMeasure = c(\"effectEstimate\", \"testStatistic\"),   successCriterion = c(\"all\", \"atLeastOne\"),   epsilonValue = NA_real_,   rValue = NA_real_,   threshold = -Inf,   plannedSubjects = NA_integer_,   allocationRatioPlanned = NA_real_,   minNumberOfSubjectsPerStage = NA_real_,   maxNumberOfSubjectsPerStage = NA_real_,   conditionalPower = NA_real_,   thetaH1 = NA_real_,   stDevH1 = NA_real_,   maxNumberOfIterations = 1000L,   seed = NA_real_,   calcSubjectsFunction = NULL,   selectArmsFunction = NULL,   showStatistics = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmMeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Simulation Multi-Arm Means — getSimulationMultiArmMeans","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. activeArms number active treatment arms compared control, default 3. effectMatrix Matrix effect sizes activeArms columns number rows reflecting different situations consider. typeOfShape shape dose-response relationship treatment groups. can either \"linear\", \"sigmoidEmax\", \"userDefined\", default \"linear\". \"linear\", muMaxVector specifies range effect sizes treatment group highest response. \"sigmoidEmax\" selected, gED50 slope entered specify ED50 slope sigmoid Emax model. \"sigmoidEmax\", muMaxVector specifies range effect sizes treatment group response according infinite dose. \"userDefined\" selected, effectMatrix entered. muMaxVector Range effect sizes treatment group highest response \"linear\" \"sigmoidEmax\" model, default seq(0, 1, 0.2). gED50 typeOfShape = \"sigmoidEmax\" selected, gED50 entered specify ED50 sigmoid Emax model. slope typeOfShape = \"sigmoidEmax\" selected, slope can entered specify slope sigmoid Emax model, default 1. doseLevels dose levels dose response relationship. specified, dose levels 1,...,activeArms. intersectionTest Defines multiple test intersection hypotheses closed system hypotheses. Five options available multi-arm designs: \"Dunnett\", \"Bonferroni\", \"Simes\", \"Sidak\", \"Hierarchical\", default \"Dunnett\". stDev standard deviation data simulated, default 1. two-armed trials, allowed specify standard deviations separately, .e., vector two elements. meanRatio = TRUE specified, stDev defines coefficient variation sigma / mu2. adaptations logical vector length kMax - 1 indicating whether adaptation takes place interim k, default rep(TRUE, kMax - 1). typeOfSelection way treatment arms populations selected interim. Five options available: \"best\", \"rbest\", \"epsilon\", \"\", \"userDefined\", default \"best\". \"rbest\" (select rValue best treatment arms/populations), parameter rValue specified, \"epsilon\" (select treatment arm/population worse epsilon compared best), parameter epsilonValue specified. \"userDefined\" selected, \"selectArmsFunction\" \"selectPopulationsFunction\" specified. effectMeasure Criterion treatment arm/population selection, either based test statistic (\"testStatistic\") effect estimate (difference means rates ratio survival) (\"effectEstimate\"), default \"effectEstimate\". successCriterion Defines study stopped efficacy interim. Two options available: \"\" stops trial efficacy criterion fulfilled selected treatment arms/populations, \"atLeastOne\" stops least one selected treatment arms/populations shown superior control interim, default \"\". epsilonValue typeOfSelection = \"epsilon\" (select treatment arm / population worse epsilon compared best), parameter epsilonValue specified. Must numeric length 1. rValue typeOfSelection = \"rbest\" (select rValue best treatment arms / populations), parameter rValue specified. threshold Selection criterion: treatment arm / population selected effectMeasure exceeds threshold, default -Inf. threshold can also vector length activeArms referring separate threshold condition treatment arms. plannedSubjects plannedSubjects numeric vector length kMax (number stages design) determines number cumulated (overall) subjects interim stages planned. two treatment arms, number subjects treatment arms. multi-arm designs, plannedSubjects refers number subjects per selected active arm. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar. minNumberOfSubjectsPerStage performing data driven sample size recalculation, numeric vector minNumberOfSubjectsPerStage length kMax determines minimum number subjects per stage (.e., cumulated), first element taken account. two treatment arms, number subjects treatment arms. multi-arm designs minNumberOfSubjectsPerStage refers minimum number subjects per selected active arm. maxNumberOfSubjectsPerStage performing data driven sample size recalculation, numeric vector maxNumberOfSubjectsPerStage length kMax determines maximum number subjects per stage (.e., cumulated), first element taken account. two treatment arms, number subjects treatment arms. multi-arm designs maxNumberOfSubjectsPerStage refers maximum number subjects per selected active arm. conditionalPower conditionalPower together minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (minNumberOfEventsPerStage maxNumberOfEventsPerStage survival designs) specified, sample size recalculation based specified conditional power performed. defined power subsequent stage given current data. default, conditional power calculated observed effect size. Optionally, can also specify thetaH1 stDevH1 (simulating means), pi1H1 pi2H1 (simulating rates), thetaH1 (simulating hazard ratios) parameters calculated sample size recalculation performed. thetaH1 specified, value alternative conditional power sample size recalculation calculation performed. Must numeric length 1. stDevH1 specified, value standard deviation conditional power sample size recalculation calculation performed, default value stDev. maxNumberOfIterations number simulation iterations, default 1000. Must positive integer length 1. seed seed reproduce simulation, default random seed. calcSubjectsFunction Optionally, function can entered defines way performing sample size recalculation. default, sample size recalculation performed conditional power specified minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (see details examples). selectArmsFunction Optionally, function can entered defines way treatment arms selected. function allowed depend effectVector length activeArms, stage, conditionalPower, conditionalCriticalValue, plannedSubjects/plannedEvents, allocationRatioPlanned, selectedArms, thetaH1 (means survival), stDevH1 (means), overallEffects, rates additionally: piTreatmentsH1, piControlH1, overallRates, overallRatesControl (see examples). showStatistics Logical. TRUE, summary statistics simulated data displayed print command, otherwise output suppressed, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmMeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Simulation Multi-Arm Means — getSimulationMultiArmMeans","text":"Returns SimulationResults object. following generics (R generic functions) available object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmMeans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Simulation Multi-Arm Means — getSimulationMultiArmMeans","text":"given design function simulates power, stopping probabilities, selection probabilities, expected sample size given number subjects, parameter configuration, treatment arm selection rule multi-arm situation. allocation ratio can specified referring ratio number subjects active treatment groups compared control group. definition thetaH1 /stDevH1 makes sense kMax > 1 conditionalPower, minNumberOfSubjectsPerStage, maxNumberOfSubjectsPerStage (calcSubjectsFunction) defined. calcSubjectsFunction function returns number subjects given conditional power conditional critical value specified testing situation. function might depend variables stage, selectedArms, plannedSubjects, allocationRatioPlanned, minNumberOfSubjectsPerStage, maxNumberOfSubjectsPerStage, conditionalPower, conditionalCriticalValue, overallEffects, stDevH1. function contain three-dots argument '...' (see examples).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmMeans.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Simulation Multi-Arm Means — getSimulationMultiArmMeans","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmMeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Simulation Multi-Arm Means — getSimulationMultiArmMeans","text":"","code":"if (FALSE) { # \\dontrun{ # Assess a treatment-arm selection strategy with three active arms,  # if the better of the arms is selected for the second stage, and  # compare it with the no-selection case.  # Assume a linear dose-response relationship  maxNumberOfIterations <- 100 designIN <- getDesignInverseNormal(typeOfDesign = \"OF\", kMax = 2) sim <- getSimulationMultiArmMeans(design = designIN,     activeArms = 3, typeOfShape = \"linear\",     muMaxVector = seq(0,0.8,0.2),     intersectionTest = \"Simes\",     typeOfSelection = \"best\",     plannedSubjects = c(30,60),     maxNumberOfIterations = maxNumberOfIterations)  sim0 <- getSimulationMultiArmMeans(design = designIN,     activeArms = 3, typeOfShape = \"linear\",     muMaxVector = seq(0,0.8,0.2),     intersectionTest = \"Simes\",     typeOfSelection = \"all\",     plannedSubjects = c(30,60),     maxNumberOfIterations = maxNumberOfIterations)  sim$rejectAtLeastOne sim$expectedNumberOfSubjects  sim0$rejectAtLeastOne sim0$expectedNumberOfSubjects  # Compare the power of the conditional Dunnett test with the power of the  # combination test using Dunnett's intersection tests if no treatment arm  # selection takes place. Asseume a linear dose-response relationship. maxNumberOfIterations <- 100 designIN <- getDesignInverseNormal(typeOfDesign = \"asUser\",      userAlphaSpending = c(0, 0.025)) designCD <- getDesignConditionalDunnett(secondStageConditioning = TRUE)  index <- 1 for (design in c(designIN, designCD)) {     results <- getSimulationMultiArmMeans(design, activeArms = 3,          muMaxVector = seq(0, 1, 0.2), typeOfShape = \"linear\",          plannedSubjects = cumsum(rep(20, 2)),          intersectionTest = \"Dunnett\",          typeOfSelection = \"all\", maxNumberOfIterations = maxNumberOfIterations)     if (index == 1) {         drift <- results$effectMatrix[nrow(results$effectMatrix), ]         plot(drift, results$rejectAtLeastOne, type = \"l\", lty = 1,              lwd = 3, col = \"black\", ylab = \"Power\")     } else {         lines(drift,results$rejectAtLeastOne, type = \"l\",              lty = index, lwd = 3, col = \"red\")     }     index <- index + 1 } legend(\"topleft\", legend=c(\"Combination Dunnett\", \"Conditional Dunnett\"),     col=c(\"black\", \"red\"), lty = (1:2), cex = 0.8)  # Assess the design characteristics of a user defined selection # strategy in a two-stage design using the inverse normal method # with constant bounds. Stopping for futility due to # de-selection of all treatment arms. designIN <- getDesignInverseNormal(typeOfDesign = \"P\", kMax = 2)  mySelection <- function(effectVector) {     selectedArms <- (effectVector >= c(0, 0.1, 0.3))     return(selectedArms) }  results <- getSimulationMultiArmMeans(designIN, activeArms = 3,      muMaxVector = seq(0, 1, 0.2),      typeOfShape = \"linear\",      plannedSubjects = c(30,60),      intersectionTest = \"Dunnett\",      typeOfSelection = \"userDefined\",     selectArmsFunction = mySelection,     maxNumberOfIterations = 100)  options(rpact.summary.output.size = \"medium\")          summary(results) if (require(ggplot2)) plot(results, type = c(5,3,9), grid = 4) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Simulation Multi-Arm Rates — getSimulationMultiArmRates","title":"Get Simulation Multi-Arm Rates — getSimulationMultiArmRates","text":"Returns simulated power, stopping selection probabilities, conditional power, expected sample size testing rates multi-arm treatment groups testing situation.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmRates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Simulation Multi-Arm Rates — getSimulationMultiArmRates","text":"","code":"getSimulationMultiArmRates(   design = NULL,   ...,   activeArms = 3L,   effectMatrix = NULL,   typeOfShape = c(\"linear\", \"sigmoidEmax\", \"userDefined\"),   piMaxVector = seq(0.2, 0.5, 0.1),   piControl = 0.2,   gED50 = NA_real_,   slope = 1,   doseLevels = NA_real_,   intersectionTest = c(\"Dunnett\", \"Bonferroni\", \"Simes\", \"Sidak\", \"Hierarchical\"),   directionUpper = NA,   adaptations = NA,   typeOfSelection = c(\"best\", \"rBest\", \"epsilon\", \"all\", \"userDefined\"),   effectMeasure = c(\"effectEstimate\", \"testStatistic\"),   successCriterion = c(\"all\", \"atLeastOne\"),   epsilonValue = NA_real_,   rValue = NA_real_,   threshold = -Inf,   plannedSubjects = NA_real_,   allocationRatioPlanned = NA_real_,   minNumberOfSubjectsPerStage = NA_real_,   maxNumberOfSubjectsPerStage = NA_real_,   conditionalPower = NA_real_,   piTreatmentsH1 = NA_real_,   piControlH1 = NA_real_,   maxNumberOfIterations = 1000L,   seed = NA_real_,   calcSubjectsFunction = NULL,   selectArmsFunction = NULL,   showStatistics = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmRates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Simulation Multi-Arm Rates — getSimulationMultiArmRates","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. activeArms number active treatment arms compared control, default 3. effectMatrix Matrix effect sizes activeArms columns number rows reflecting different situations consider. typeOfShape shape dose-response relationship treatment groups. can either \"linear\", \"sigmoidEmax\", \"userDefined\", default \"linear\". \"linear\", piMaxVector specifies range effect sizes treatment group highest response. \"sigmoidEmax\" selected, gED50 slope entered specify ED50 slope sigmoid Emax model. \"sigmoidEmax\", piMaxVector specifies range effect sizes treatment group response according infinite dose. \"userDefined\" selected, effectMatrix entered. piMaxVector Range assumed probabilities treatment group highest response \"linear\" \"sigmoidEmax\" model, default seq(0, 1, 0.2). piControl specified, assumed probability control arm simulation sample size recalculation performed. gED50 typeOfShape = \"sigmoidEmax\" selected, gED50 entered specify ED50 sigmoid Emax model. slope typeOfShape = \"sigmoidEmax\" selected, slope can entered specify slope sigmoid Emax model, default 1. doseLevels dose levels dose response relationship. specified, dose levels 1,...,activeArms. intersectionTest Defines multiple test intersection hypotheses closed system hypotheses. Five options available multi-arm designs: \"Dunnett\", \"Bonferroni\", \"Simes\", \"Sidak\", \"Hierarchical\", default \"Dunnett\". directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. adaptations logical vector length kMax - 1 indicating whether adaptation takes place interim k, default rep(TRUE, kMax - 1). typeOfSelection way treatment arms populations selected interim. Five options available: \"best\", \"rbest\", \"epsilon\", \"\", \"userDefined\", default \"best\". \"rbest\" (select rValue best treatment arms/populations), parameter rValue specified, \"epsilon\" (select treatment arm/population worse epsilon compared best), parameter epsilonValue specified. \"userDefined\" selected, \"selectArmsFunction\" \"selectPopulationsFunction\" specified. effectMeasure Criterion treatment arm/population selection, either based test statistic (\"testStatistic\") effect estimate (difference means rates ratio survival) (\"effectEstimate\"), default \"effectEstimate\". successCriterion Defines study stopped efficacy interim. Two options available: \"\" stops trial efficacy criterion fulfilled selected treatment arms/populations, \"atLeastOne\" stops least one selected treatment arms/populations shown superior control interim, default \"\". epsilonValue typeOfSelection = \"epsilon\" (select treatment arm / population worse epsilon compared best), parameter epsilonValue specified. Must numeric length 1. rValue typeOfSelection = \"rbest\" (select rValue best treatment arms / populations), parameter rValue specified. threshold Selection criterion: treatment arm / population selected effectMeasure exceeds threshold, default -Inf. threshold can also vector length activeArms referring separate threshold condition treatment arms. plannedSubjects plannedSubjects numeric vector length kMax (number stages design) determines number cumulated (overall) subjects interim stages planned. two treatment arms, number subjects treatment arms. multi-arm designs, plannedSubjects refers number subjects per selected active arm. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar. minNumberOfSubjectsPerStage performing data driven sample size recalculation, numeric vector minNumberOfSubjectsPerStage length kMax determines minimum number subjects per stage (.e., cumulated), first element taken account. two treatment arms, number subjects treatment arms. multi-arm designs minNumberOfSubjectsPerStage refers minimum number subjects per selected active arm. maxNumberOfSubjectsPerStage performing data driven sample size recalculation, numeric vector maxNumberOfSubjectsPerStage length kMax determines maximum number subjects per stage (.e., cumulated), first element taken account. two treatment arms, number subjects treatment arms. multi-arm designs maxNumberOfSubjectsPerStage refers maximum number subjects per selected active arm. conditionalPower conditionalPower together minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (minNumberOfEventsPerStage maxNumberOfEventsPerStage survival designs) specified, sample size recalculation based specified conditional power performed. defined power subsequent stage given current data. default, conditional power calculated observed effect size. Optionally, can also specify thetaH1 stDevH1 (simulating means), pi1H1 pi2H1 (simulating rates), thetaH1 (simulating hazard ratios) parameters calculated sample size recalculation performed. piTreatmentsH1 specified, assumed probability active treatment arm(s) sample size recalculation performed. piControlH1 specified, assumed probability reference group (different piControl) conditional power calculated. maxNumberOfIterations number simulation iterations, default 1000. Must positive integer length 1. seed seed reproduce simulation, default random seed. calcSubjectsFunction Optionally, function can entered defines way performing sample size recalculation. default, sample size recalculation performed conditional power specified minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (see details examples). selectArmsFunction Optionally, function can entered defines way treatment arms selected. function allowed depend effectVector length activeArms, stage, conditionalPower, conditionalCriticalValue, plannedSubjects/plannedEvents, allocationRatioPlanned, selectedArms, thetaH1 (means survival), stDevH1 (means), overallEffects, rates additionally: piTreatmentsH1, piControlH1, overallRates, overallRatesControl (see examples). showStatistics Logical. TRUE, summary statistics simulated data displayed print command, otherwise output suppressed, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmRates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Simulation Multi-Arm Rates — getSimulationMultiArmRates","text":"Returns SimulationResults object. following generics (R generic functions) available object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Simulation Multi-Arm Rates — getSimulationMultiArmRates","text":"given design function simulates power, stopping probabilities, selection probabilities, expected sample size given number subjects, parameter configuration, treatment arm selection rule multi-arm situation. allocation ratio can specified referring ratio number subjects active treatment groups compared control group. definition piTreatmentsH1 /piControlH1 makes sense kMax > 1 conditionalPower, minNumberOfSubjectsPerStage, maxNumberOfSubjectsPerStage (calcSubjectsFunction) defined. calcSubjectsFunction function returns number subjects given conditional power conditional critical value specified testing situation. function might depend variables stage, selectedArms, directionUpper, plannedSubjects, allocationRatioPlanned, minNumberOfSubjectsPerStage, maxNumberOfSubjectsPerStage, conditionalPower, conditionalCriticalValue, overallRates, overallRatesControl, piTreatmentsH1, piControlH1. function contain three-dots argument '...' (see examples).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmRates.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Simulation Multi-Arm Rates — getSimulationMultiArmRates","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmRates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Simulation Multi-Arm Rates — getSimulationMultiArmRates","text":"","code":"if (FALSE) { # \\dontrun{ # Simulate the power of the combination test with two interim stages and  # O'Brien & Fleming boundaries using Dunnett's intersection tests if the  # best treatment arm is selected at first interim. Selection only take  # place if a non-negative treatment effect is observed (threshold = 0);  # 20 subjects per stage and treatment arm, simulation is performed for  # four parameter configurations. design <- getDesignInverseNormal(typeOfDesign = \"OF\") effectMatrix <- matrix(c(0.2,0.2,0.2,     0.4,0.4,0.4,     0.4,0.5,0.5,     0.4,0.5,0.6),     byrow = TRUE, nrow = 4, ncol = 3) x <- getSimulationMultiArmRates(design = design, typeOfShape = \"userDefined\",      effectMatrix = effectMatrix , piControl = 0.2,      typeOfSelection = \"best\", threshold = 0, intersectionTest = \"Dunnett\",      plannedSubjects = c(20, 40, 60),      maxNumberOfIterations = 50) summary(x) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Simulation Multi-Arm Survival — getSimulationMultiArmSurvival","title":"Get Simulation Multi-Arm Survival — getSimulationMultiArmSurvival","text":"Returns simulated power, stopping selection probabilities, conditional power, expected sample size testing hazard ratios multi-arm treatment groups testing situation. contrast getSimulationSurvival() (survival times simulated), normally distributed logrank test statistics simulated.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Simulation Multi-Arm Survival — getSimulationMultiArmSurvival","text":"","code":"getSimulationMultiArmSurvival(   design = NULL,   ...,   activeArms = 3L,   effectMatrix = NULL,   typeOfShape = c(\"linear\", \"sigmoidEmax\", \"userDefined\"),   omegaMaxVector = seq(1, 2.6, 0.4),   gED50 = NA_real_,   slope = 1,   doseLevels = NA_real_,   intersectionTest = c(\"Dunnett\", \"Bonferroni\", \"Simes\", \"Sidak\", \"Hierarchical\"),   directionUpper = NA,   adaptations = NA,   typeOfSelection = c(\"best\", \"rBest\", \"epsilon\", \"all\", \"userDefined\"),   effectMeasure = c(\"effectEstimate\", \"testStatistic\"),   successCriterion = c(\"all\", \"atLeastOne\"),   correlationComputation = c(\"alternative\", \"null\"),   epsilonValue = NA_real_,   rValue = NA_real_,   threshold = -Inf,   plannedEvents = NA_real_,   allocationRatioPlanned = NA_real_,   minNumberOfEventsPerStage = NA_real_,   maxNumberOfEventsPerStage = NA_real_,   conditionalPower = NA_real_,   thetaH1 = NA_real_,   maxNumberOfIterations = 1000L,   seed = NA_real_,   calcEventsFunction = NULL,   selectArmsFunction = NULL,   showStatistics = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Simulation Multi-Arm Survival — getSimulationMultiArmSurvival","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. activeArms number active treatment arms compared control, default 3. effectMatrix Matrix effect sizes activeArms columns number rows reflecting different situations consider. typeOfShape shape dose-response relationship treatment groups. can either \"linear\", \"sigmoidEmax\", \"userDefined\", default \"linear\". \"linear\", omegaMaxVector specifies range effect sizes treatment group highest response. \"sigmoidEmax\" selected, gED50 slope entered specify ED50 slope sigmoid Emax model. \"sigmoidEmax\", omegaMaxVector specifies range effect sizes treatment group response according infinite dose. \"userDefined\" selected, effectMatrix entered. omegaMaxVector Range hazard ratios highest response \"linear\" \"sigmoidEmax\" model, default seq(1, 2.6, 0.4). gED50 typeOfShape = \"sigmoidEmax\" selected, gED50 entered specify ED50 sigmoid Emax model. slope typeOfShape = \"sigmoidEmax\" selected, slope can entered specify slope sigmoid Emax model, default 1. doseLevels dose levels dose response relationship. specified, dose levels 1,...,activeArms. intersectionTest Defines multiple test intersection hypotheses closed system hypotheses. Five options available multi-arm designs: \"Dunnett\", \"Bonferroni\", \"Simes\", \"Sidak\", \"Hierarchical\", default \"Dunnett\". directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. adaptations logical vector length kMax - 1 indicating whether adaptation takes place interim k, default rep(TRUE, kMax - 1). typeOfSelection way treatment arms populations selected interim. Five options available: \"best\", \"rbest\", \"epsilon\", \"\", \"userDefined\", default \"best\". \"rbest\" (select rValue best treatment arms/populations), parameter rValue specified, \"epsilon\" (select treatment arm/population worse epsilon compared best), parameter epsilonValue specified. \"userDefined\" selected, \"selectArmsFunction\" \"selectPopulationsFunction\" specified. effectMeasure Criterion treatment arm/population selection, either based test statistic (\"testStatistic\") effect estimate (difference means rates ratio survival) (\"effectEstimate\"), default \"effectEstimate\". successCriterion Defines study stopped efficacy interim. Two options available: \"\" stops trial efficacy criterion fulfilled selected treatment arms/populations, \"atLeastOne\" stops least one selected treatment arms/populations shown superior control interim, default \"\". correlationComputation correlationComputation = \"alternative\", simulating log-rank statistics many--one design, correlation matrix according Deng et al. (Biometrics, 2019) accounting respective alternative used; correlationComputation = \"null\", constant correlation matrix valid null, .e., accounting alternative used, default \"alternative\". epsilonValue typeOfSelection = \"epsilon\" (select treatment arm / population worse epsilon compared best), parameter epsilonValue specified. Must numeric length 1. rValue typeOfSelection = \"rbest\" (select rValue best treatment arms / populations), parameter rValue specified. threshold Selection criterion: treatment arm / population selected effectMeasure exceeds threshold, default -Inf. threshold can also vector length activeArms referring separate threshold condition treatment arms. plannedEvents plannedEvents numeric vector length kMax (number stages design) determines number cumulated (overall) events survival designs interim stages planned. two treatment arms, number events treatment arms. multi-arm designs, plannedEvents refers overall number events selected arms plus control. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar. minNumberOfEventsPerStage performing data driven sample size recalculation, numeric vector minNumberOfEventsPerStage length kMax determines minimum number events per stage (.e., cumulated), first element taken account. maxNumberOfEventsPerStage performing data driven sample size recalculation, numeric vector maxNumberOfEventsPerStage length kMax determines maximum number events per stage (.e., cumulated), first element taken account. conditionalPower conditionalPower together minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (minNumberOfEventsPerStage maxNumberOfEventsPerStage survival designs) specified, sample size recalculation based specified conditional power performed. defined power subsequent stage given current data. default, conditional power calculated observed effect size. Optionally, can also specify thetaH1 stDevH1 (simulating means), pi1H1 pi2H1 (simulating rates), thetaH1 (simulating hazard ratios) parameters calculated sample size recalculation performed. thetaH1 specified, value alternative conditional power sample size recalculation calculation performed. Must numeric length 1. maxNumberOfIterations number simulation iterations, default 1000. Must positive integer length 1. seed seed reproduce simulation, default random seed. calcEventsFunction Optionally, function can entered defines way performing sample size recalculation. default, event number recalculation performed conditional power specified minNumberOfEventsPerStage maxNumberOfEventsPerStage (see details examples). selectArmsFunction Optionally, function can entered defines way treatment arms selected. function allowed depend effectVector length activeArms, stage, conditionalPower, conditionalCriticalValue, plannedSubjects/plannedEvents, allocationRatioPlanned, selectedArms, thetaH1 (means survival), stDevH1 (means), overallEffects, rates additionally: piTreatmentsH1, piControlH1, overallRates, overallRatesControl (see examples). showStatistics Logical. TRUE, summary statistics simulated data displayed print command, otherwise output suppressed, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Simulation Multi-Arm Survival — getSimulationMultiArmSurvival","text":"Returns SimulationResults object. following generics (R generic functions) available object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmSurvival.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Simulation Multi-Arm Survival — getSimulationMultiArmSurvival","text":"given design function simulates power, stopping probabilities, selection probabilities, expected sample size given number subjects, parameter configuration, treatment arm selection rule multi-arm situation. allocation ratio can specified referring ratio number subjects active treatment groups compared control group. definition thetaH1 makes sense kMax > 1 conditionalPower, minNumberOfEventsPerStage, maxNumberOfEventsPerStage (calcEventsFunction) defined. calcEventsFunction function returns number events given conditional power conditional critical value specified testing situation. function might depend variables stage, selectedArms, plannedEvents, directionUpper, allocationRatioPlanned, minNumberOfEventsPerStage, maxNumberOfEventsPerStage, conditionalPower, conditionalCriticalValue, overallEffects. function contain three-dots argument '...' (see examples).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmSurvival.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Simulation Multi-Arm Survival — getSimulationMultiArmSurvival","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationMultiArmSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Simulation Multi-Arm Survival — getSimulationMultiArmSurvival","text":"","code":"if (FALSE) { # \\dontrun{ # Assess different selection rules for a two-stage survival design with  # O'Brien & Fleming alpha spending boundaries and (non-binding) stopping  # for futility if the test statistic is negative.  # Number of events at the second stage is adjusted based on conditional  # power 80% and specified minimum and maximum number of Events. design <- getDesignInverseNormal(typeOfDesign = \"asOF\", futilityBounds = 0)  y1 <- getSimulationMultiArmSurvival(design = design, activeArms = 4,      intersectionTest = \"Simes\", typeOfShape = \"sigmoidEmax\",      omegaMaxVector = seq(1, 2, 0.5), gED50 = 2, slope = 4,      typeOfSelection = \"best\", conditionalPower = 0.8,      minNumberOfEventsPerStage = c(NA_real_, 30),      maxNumberOfEventsPerStage = c(NA_real_, 90),     maxNumberOfIterations = 50,      plannedEvents = c(75, 120))  y2 <- getSimulationMultiArmSurvival(design = design, activeArms = 4,      intersectionTest = \"Simes\", typeOfShape = \"sigmoidEmax\",      omegaMaxVector = seq(1,2,0.5), gED50 = 2, slope = 4,     typeOfSelection = \"epsilon\", epsilonValue = 0.2,      effectMeasure = \"effectEstimate\",     conditionalPower = 0.8, minNumberOfEventsPerStage = c(NA_real_, 30),      maxNumberOfEventsPerStage = c(NA_real_, 90),     maxNumberOfIterations = 50,       plannedEvents = c(75, 120))  y1$effectMatrix  y1$rejectAtLeastOne y2$rejectAtLeastOne  y1$selectedArms y2$selectedArms } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Simulation Rates — getSimulationRates","title":"Get Simulation Rates — getSimulationRates","text":"Returns simulated power, stopping probabilities, conditional power, expected sample size testing rates one two treatment groups testing situation.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationRates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Simulation Rates — getSimulationRates","text":"","code":"getSimulationRates(   design = NULL,   ...,   groups = 2L,   normalApproximation = TRUE,   riskRatio = FALSE,   thetaH0 = ifelse(riskRatio, 1, 0),   pi1 = seq(0.2, 0.5, 0.1),   pi2 = NA_real_,   plannedSubjects = NA_real_,   directionUpper = NA,   allocationRatioPlanned = NA_real_,   minNumberOfSubjectsPerStage = NA_real_,   maxNumberOfSubjectsPerStage = NA_real_,   conditionalPower = NA_real_,   pi1H1 = NA_real_,   pi2H1 = NA_real_,   maxNumberOfIterations = 1000L,   seed = NA_real_,   calcSubjectsFunction = NULL,   showStatistics = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationRates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Simulation Rates — getSimulationRates","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. groups number treatment groups (1 2), default 2. normalApproximation type computation p-values. Default FALSE testing means (.e., t test used) TRUE testing rates hazard ratio. testing rates, normalApproximation = FALSE specified, binomial test (one sample) exact test Fisher (two samples) used calculating p-values. survival setting normalApproximation = FALSE effect. riskRatio TRUE, design characteristics one-sided testing H0: pi1 / pi2 = thetaH0 simulated, default FALSE. thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. count data: bound testing H0: lambda1 / lambda2 = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. pi1 numeric value vector represents assumed probability active treatment group two treatment groups considered, alternative probability one treatment group design, default seq(0.2, 0.5, 0.1) (power calculations simulations) seq(0.4, 0.6, 0.1) (sample size calculations). pi2 numeric value represents assumed probability reference group two treatment groups considered, default 0.2. plannedSubjects plannedSubjects numeric vector length kMax (number stages design) determines number cumulated (overall) subjects interim stages planned. two treatment arms, number subjects treatment arms. multi-arm designs, plannedSubjects refers number subjects per selected active arm. directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar. minNumberOfSubjectsPerStage performing data driven sample size recalculation, numeric vector minNumberOfSubjectsPerStage length kMax determines minimum number subjects per stage (.e., cumulated), first element taken account. two treatment arms, number subjects treatment arms. multi-arm designs minNumberOfSubjectsPerStage refers minimum number subjects per selected active arm. maxNumberOfSubjectsPerStage performing data driven sample size recalculation, numeric vector maxNumberOfSubjectsPerStage length kMax determines maximum number subjects per stage (.e., cumulated), first element taken account. two treatment arms, number subjects treatment arms. multi-arm designs maxNumberOfSubjectsPerStage refers maximum number subjects per selected active arm. conditionalPower conditionalPower together minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (minNumberOfEventsPerStage maxNumberOfEventsPerStage survival designs) specified, sample size recalculation based specified conditional power performed. defined power subsequent stage given current data. default, conditional power calculated observed effect size. Optionally, can also specify thetaH1 stDevH1 (simulating means), pi1H1 pi2H1 (simulating rates), thetaH1 (simulating hazard ratios) parameters calculated sample size recalculation performed. pi1H1 specified, assumed probability active treatment group two treatment groups considered, assumed probability one treatment group design, conditional power calculated. pi2H1 specified, assumed probability reference group two treatment groups considered, conditional power calculated. maxNumberOfIterations number simulation iterations, default 1000. Must positive integer length 1. seed seed reproduce simulation, default random seed. calcSubjectsFunction Optionally, function can entered defines way performing sample size recalculation. default, sample size recalculation performed conditional power specified minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (see details examples). showStatistics Logical. TRUE, summary statistics simulated data displayed print command, otherwise output suppressed, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationRates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Simulation Rates — getSimulationRates","text":"Returns SimulationResults object. following generics (R generic functions) available object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Simulation Rates — getSimulationRates","text":"given design function simulates power, stopping probabilities, conditional power, expected sample size given number subjects parameter configuration. Additionally, allocation ratio = n1/n2 can specified n1 n2 number subjects two treatment groups. definition pi1H1 /pi2H1 makes sense kMax > 1 conditionalPower, minNumberOfSubjectsPerStage, maxNumberOfSubjectsPerStage (calcSubjectsFunction) defined. calcSubjectsFunction function returns number subjects given conditional power conditional critical value specified testing situation. function might depend variables stage, riskRatio, thetaH0, groups, plannedSubjects, sampleSizesPerStage, directionUpper, allocationRatioPlanned, minNumberOfSubjectsPerStage, maxNumberOfSubjectsPerStage, conditionalPower, conditionalCriticalValue, overallRate, farringtonManningValue1, farringtonManningValue2. function contain three-dots argument '...' (see examples).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationRates.html","id":"simulation-data","dir":"Reference","previous_headings":"","what":"Simulation Data","title":"Get Simulation Rates — getSimulationRates","text":"summary statistics \"Simulated data\" contains following parameters: median range; mean +/-sd $show(showStatistics = FALSE) $setShowStatistics(FALSE) can used disable output aggregated simulated data. Example 1: simulationResults <- getSimulationRates(plannedSubjects = 40) simulationResults$show(showStatistics = FALSE) Example 2: simulationResults <- getSimulationRates(plannedSubjects = 40) simulationResults$setShowStatistics(FALSE)simulationResults getData() can used get aggregated simulated data object data.frame. data frame contains following columns: iterationNumber: number simulation iteration. stageNumber: stage. pi1: assumed derived event rate treatment group (available). pi2: assumed derived event rate control group (available). numberOfSubjects: number subjects consideration (interim) analysis takes place. rejectPerStage: 1 null hypothesis can rejected, 0 otherwise. futilityPerStage: 1 study stopped futility, 0 otherwise. testStatistic: test statistic used test decision, depends design chosen (group sequential, inverse normal, Fisher combination test)' testStatisticsPerStage: test statistic stage data considered stage taken account. overallRate1: cumulative rate treatment group 1. overallRate2: cumulative rate treatment group 2. stagewiseRates1: stage-wise rate treatment group 1. stagewiseRates2: stage-wise rate treatment group 2. sampleSizesPerStage1: stage-wise sample size treatment group 1. sampleSizesPerStage2: stage-wise sample size treatment group 2. trialStop: TRUE study stopped efficacy futility final stage, FALSE otherwise. conditionalPowerAchieved: conditional power subsequent stage trial selected sample size effect. effect either estimated data can user defined pi1H1 pi2H1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationRates.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Simulation Rates — getSimulationRates","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationRates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Simulation Rates — getSimulationRates","text":"","code":"if (FALSE) { # \\dontrun{ # Fixed sample size design (two groups) with total sample  # size 120, pi1 = (0.3,0.4,0.5,0.6) and pi2 = 0.3 getSimulationRates(pi1 = seq(0.3, 0.6, 0.1), pi2 = 0.3,      plannedSubjects = 120, maxNumberOfIterations = 10)  # Increase number of simulation iterations and compare results with power calculator getSimulationRates(pi1 = seq(0.3, 0.6, 0.1), pi2 = 0.3,      plannedSubjects = 120, maxNumberOfIterations = 50) getPowerRates(pi1 = seq(0.3, 0.6, 0.1), pi2 = 0.3, maxNumberOfSubjects = 120)  # Do the same for a two-stage Pocock inverse normal group sequential  # design with non-binding futility stops designIN <- getDesignInverseNormal(typeOfDesign = \"P\", futilityBounds = c(0)) getSimulationRates(designIN, pi1 = seq(0.3, 0.6, 0.1), pi2 = 0.3,      plannedSubjects = c(40, 80), maxNumberOfIterations = 50) getPowerRates(designIN, pi1 = seq(0.3, 0.6, 0.1), pi2 = 0.3, maxNumberOfSubjects = 80)  # Assess power and average sample size if a sample size reassessment is  # foreseen at conditional power 80% for the subsequent stage (decrease and increase)  # based on observed overall (cumulative) rates and specified minNumberOfSubjectsPerStage  # and maxNumberOfSubjectsPerStage  # Do the same under the assumption that a sample size increase only takes place  # if the rate difference exceeds the value 0.1 at interim. For this, the sample  # size recalculation method needs to be redefined:   mySampleSizeCalculationFunction <- function(..., stage,         plannedSubjects,         minNumberOfSubjectsPerStage,         maxNumberOfSubjectsPerStage,         conditionalPower,         conditionalCriticalValue,         overallRate) {     if (overallRate[1] - overallRate[2] < 0.1) {         return(plannedSubjects[stage] - plannedSubjects[stage - 1])      } else {         rateUnderH0 <- (overallRate[1] + overallRate[2]) / 2          stageSubjects <- 2 * (max(0, conditionalCriticalValue *              sqrt(2 * rateUnderH0 * (1 - rateUnderH0)) +              stats::qnorm(conditionalPower) * sqrt(overallRate[1] *              (1 - overallRate[1]) + overallRate[2] * (1 - overallRate[2]))))^2 /             (max(1e-12, (overallRate[1] - overallRate[2])))^2         stageSubjects <- ceiling(min(max(             minNumberOfSubjectsPerStage[stage],              stageSubjects), maxNumberOfSubjectsPerStage[stage]))         return(stageSubjects)     } } getSimulationRates(designIN, pi1 = seq(0.3, 0.6, 0.1), pi2 = 0.3,      plannedSubjects = c(40, 80), minNumberOfSubjectsPerStage = c(40, 20),      maxNumberOfSubjectsPerStage = c(40, 160), conditionalPower = 0.8,      calcSubjectsFunction = mySampleSizeCalculationFunction, maxNumberOfIterations = 50) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Simulation Survival — getSimulationSurvival","title":"Get Simulation Survival — getSimulationSurvival","text":"Returns analysis times, power, stopping probabilities, conditional power, expected sample size testing hazard ratio two treatment groups survival design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Simulation Survival — getSimulationSurvival","text":"","code":"getSimulationSurvival(   design = NULL,   ...,   thetaH0 = 1,   directionUpper = NA,   pi1 = NA_real_,   pi2 = NA_real_,   lambda1 = NA_real_,   lambda2 = NA_real_,   median1 = NA_real_,   median2 = NA_real_,   hazardRatio = NA_real_,   kappa = 1,   piecewiseSurvivalTime = NA_real_,   allocation1 = 1,   allocation2 = 1,   eventTime = 12,   accrualTime = c(0, 12),   accrualIntensity = 0.1,   accrualIntensityType = c(\"auto\", \"absolute\", \"relative\"),   dropoutRate1 = 0,   dropoutRate2 = 0,   dropoutTime = 12,   maxNumberOfSubjects = NA_real_,   plannedEvents = NA_real_,   minNumberOfEventsPerStage = NA_real_,   maxNumberOfEventsPerStage = NA_real_,   conditionalPower = NA_real_,   thetaH1 = NA_real_,   maxNumberOfIterations = 1000L,   maxNumberOfRawDatasetsPerStage = 0,   longTimeSimulationAllowed = FALSE,   seed = NA_real_,   calcEventsFunction = NULL,   showStatistics = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Simulation Survival — getSimulationSurvival","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. count data: bound testing H0: lambda1 / lambda2 = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. pi1 numeric value vector represents assumed event rate treatment group, default seq(0.2, 0.5, 0.1) (power calculations simulations) seq(0.4, 0.6, 0.1) (sample size calculations). pi2 numeric value represents assumed event rate control group, default 0.2. lambda1 assumed hazard rate treatment group, default. lambda1 can also used define piecewise exponentially distributed survival times (see details). Must positive numeric length 1. lambda2 assumed hazard rate reference group, default. lambda2 can also used define piecewise exponentially distributed survival times (see details). Must positive numeric length 1. median1 assumed median survival time treatment group, default. median2 assumed median survival time reference group, default. Must positive numeric length 1. hazardRatio vector hazard ratios consideration. event hazard rates treatment groups defined, hazard ratio needs specified calculated, default. Must positive numeric length 1. kappa numeric value > 0. kappa != 1 used specification shape Weibull distribution. Default 1, .e., exponential survival distribution used instead Weibull distribution. Note Weibull distribution used piecewise definition survival time distribution, .e., piecewiselambda (single value) kappa can specified. function equivalent pweibull(t, shape = kappa, scale = 1 / lambda) stats package, .e., scale parameter 1 / 'hazard rate'. example, getPiecewiseExponentialDistribution(time = 130, piecewiseLambda = 0.01, kappa = 4.2) pweibull(q = 130, shape = 4.2, scale = 1 / 0.01) provide result. piecewiseSurvivalTime vector specifies time intervals piecewise definition exponential survival time cumulative distribution function  (details see getPiecewiseSurvivalTime()). allocation1 number many subjects assigned treatment 1 subsequent order, default 1 allocation2 number many subjects assigned treatment 2 subsequent order, default 1 eventTime assumed time event rates calculated, default 12. accrualTime assumed accrual time intervals study, default c(0, 12) (details see getAccrualTime()). accrualIntensity numeric vector accrual intensities, default relative intensity 0.1 (details see getAccrualTime()). accrualIntensityType character value specifying accrual intensity input type. Must one \"auto\", \"absolute\", \"relative\"; default \"auto\", .e., values < 1 type \"relative\", otherwise \"absolute\". dropoutRate1 assumed drop-rate treatment group, default 0. dropoutRate2 assumed drop-rate control group, default 0. dropoutTime assumed time drop-rates control treatment group, default 12. maxNumberOfSubjects maxNumberOfSubjects > 0 needs specified. accrual time accrual intensity specified, calculated. Must positive integer length 1. plannedEvents plannedEvents numeric vector length kMax (number stages design) determines number cumulated (overall) events survival designs interim stages planned. two treatment arms, number events treatment arms. multi-arm designs, plannedEvents refers overall number events selected arms plus control. minNumberOfEventsPerStage performing data driven sample size recalculation, numeric vector minNumberOfEventsPerStage length kMax determines minimum number events per stage (.e., cumulated), first element taken account. maxNumberOfEventsPerStage performing data driven sample size recalculation, numeric vector maxNumberOfEventsPerStage length kMax determines maximum number events per stage (.e., cumulated), first element taken account. conditionalPower conditionalPower together minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (minNumberOfEventsPerStage maxNumberOfEventsPerStage survival designs) specified, sample size recalculation based specified conditional power performed. defined power subsequent stage given current data. default, conditional power calculated observed effect size. Optionally, can also specify thetaH1 stDevH1 (simulating means), pi1H1 pi2H1 (simulating rates), thetaH1 (simulating hazard ratios) parameters calculated sample size recalculation performed. thetaH1 specified, value alternative conditional power sample size recalculation calculation performed. Must numeric length 1. maxNumberOfIterations number simulation iterations, default 1000. Must positive integer length 1. maxNumberOfRawDatasetsPerStage number raw datasets per stage shall extracted saved data.frame, default 0. getRawData() can used get extracted raw data object. longTimeSimulationAllowed Logical indicates whether long time simulations consumes 30 seconds allowed , default FALSE. seed seed reproduce simulation, default random seed. calcEventsFunction Optionally, function can entered defines way performing sample size recalculation. default, event number recalculation performed conditional power specified minNumberOfEventsPerStage maxNumberOfEventsPerStage (see details examples). showStatistics Logical. TRUE, summary statistics simulated data displayed print command, otherwise output suppressed, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Simulation Survival — getSimulationSurvival","text":"Returns SimulationResults object. following generics (R generic functions) available object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationSurvival.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Simulation Survival — getSimulationSurvival","text":"given design function simulates power, stopping probabilities, conditional power, expected sample size given number events, number subjects, parameter configuration. also simulates time required events expected given assumptions (exponentially, piecewise exponentially, Weibull distributed survival times constant non-constant piecewise accrual). Additionally, integers allocation1 allocation2 can specified determine number allocated treatment group 1 treatment group 2, respectively. precisely, unequal randomization ratios must specified via two integer arguments allocation1 allocation2 describe many subjects consecutively enrolled group, respectively, subject assigned group. example, arguments allocation1 = 2, allocation2 = 1, maxNumberOfSubjects = 300 specify 2:1 randomization 200 subjects randomized intervention 100 control. (Caveat: use allocation1 = 200, allocation2 = 100, maxNumberOfSubjects = 300 imply 200 intervention subjects enrolled prior enrollment control subjects.) conditionalPower definition thetaH1 makes sense kMax > 1 conditionalPower, minNumberOfEventsPerStage, maxNumberOfEventsPerStage defined. Note numberOfSubjects, numberOfSubjects1, numberOfSubjects2 output expected number subjects. calcEventsFunction function returns number events given conditional power conditional critical value specified testing situation. function might depend variables stage, conditionalPower, thetaH0, plannedEvents, singleEventsPerStage, minNumberOfEventsPerStage, maxNumberOfEventsPerStage, allocationRatioPlanned, conditionalCriticalValue, function contain three-dots argument '...' (see examples).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationSurvival.html","id":"piecewise-survival-time","dir":"Reference","previous_headings":"","what":"Piecewise survival time","title":"Get Simulation Survival — getSimulationSurvival","text":"first element vector piecewiseSurvivalTime must equal 0. piecewiseSurvivalTime can also list combines definition time intervals hazard rates reference group. definition survival time treatment group obtained specification hazard ratio (see examples details).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationSurvival.html","id":"staggered-patient-entry","dir":"Reference","previous_headings":"","what":"Staggered patient entry","title":"Get Simulation Survival — getSimulationSurvival","text":"accrualTime time period subjects' accrual study. can value defines end accrual vector. case, accrualTime can used define non-constant accrual time. , accrualTime vector defines accrual intervals. first element accrualTime must equal 0 , additionally, accrualIntensity needs specified. accrualIntensity value vector (depending length accrualTime) defines intensity subjects enter trial intervals defined accrualTime. accrualTime can also list combines definition accrual time accrual intensity (see examples details). length accrualTime length accrualIntensity (.e., end accrual undefined), maxNumberOfSubjects > 0 needs specified end accrual calculated. case, accrualIntensity number subjects per time unit, .e., absolute accrual intensity. length accrualTime equals length accrualIntensity - 1 (.e., end accrual defined), maxNumberOfSubjects calculated absolute accrual intensity given. elements accrualIntensity smaller 1, accrualIntensity defines relative intensity subjects enter trial. example, accrualIntensity = c(0.1, 0.2) specifies second accrual interval intensity doubled compared first accrual interval. actual (absolute) accrual intensity calculated calculated given maxNumberOfSubjects. Note default accrualIntensity = 0.1 meaning absolute accrual intensity calculated.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationSurvival.html","id":"simulation-data","dir":"Reference","previous_headings":"","what":"Simulation Data","title":"Get Simulation Survival — getSimulationSurvival","text":"summary statistics \"Simulated data\" contains following parameters: median range; mean +/-sd $show(showStatistics = FALSE) $setShowStatistics(FALSE) can used disable output aggregated simulated data. Example 1: simulationResults <- getSimulationSurvival(maxNumberOfSubjects = 100, plannedEvents = 30) simulationResults$show(showStatistics = FALSE) Example 2: simulationResults <- getSimulationSurvival(maxNumberOfSubjects = 100, plannedEvents = 30) simulationResults$setShowStatistics(FALSE)simulationResults getData() can used get aggregated simulated data object data.frame. data frame contains following columns: iterationNumber: number simulation iteration. stageNumber: stage. pi1: assumed derived event rate treatment group. pi2: assumed derived event rate control group. hazardRatio: hazard ratio consideration (available). analysisTime: analysis time. numberOfSubjects: number subjects consideration (interim) analysis takes place. eventsPerStage1: observed number events per stage treatment group 1. eventsPerStage2: observed number events per stage treatment group 2. singleEventsPerStage: observed number events per stage treatment groups. rejectPerStage: 1 null hypothesis can rejected, 0 otherwise. futilityPerStage: 1 study stopped futility, 0 otherwise. eventsNotAchieved: 1 number events reached observed number subjects, 0 otherwise. testStatistic: test statistic used test decision, depends design chosen (group sequential, inverse normal, Fisher combination test)' logRankStatistic: Z-score statistic corresponds one-sided log-rank test considered stage. hazardRatioEstimateLR: estimated hazard ratio, derived log-rank statistic. trialStop: TRUE study stopped efficacy futility final stage, FALSE otherwise. conditionalPowerAchieved: conditional power subsequent stage trial selected sample size effect. effect either estimated data can user defined thetaH1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationSurvival.html","id":"raw-data","dir":"Reference","previous_headings":"","what":"Raw Data","title":"Get Simulation Survival — getSimulationSurvival","text":"getRawData() can used get simulated raw data object data.frame. Note getSimulationSurvival() must called maxNumberOfRawDatasetsPerStage > 0.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationSurvival.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Simulation Survival — getSimulationSurvival","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSimulationSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Simulation Survival — getSimulationSurvival","text":"","code":"if (FALSE) { # \\dontrun{ # Fixed sample size with minimum required definitions, pi1 = (0.3,0.4,0.5,0.6) and # pi2 = 0.3 at event time 12, and accrual time 24 getSimulationSurvival(     pi1 = seq(0.3, 0.6, 0.1), pi2 = 0.3, eventTime = 12,     accrualTime = 24, plannedEvents = 40, maxNumberOfSubjects = 200,     maxNumberOfIterations = 10 )  # Increase number of simulation iterations getSimulationSurvival(     pi1 = seq(0.3, 0.6, 0.1), pi2 = 0.3, eventTime = 12,     accrualTime = 24, plannedEvents = 40, maxNumberOfSubjects = 200,     maxNumberOfIterations = 50 )  # Determine necessary accrual time with default settings if 200 subjects and # 30 subjects per time unit can be recruited getSimulationSurvival(     plannedEvents = 40, accrualTime = 0,     accrualIntensity = 30, maxNumberOfSubjects = 200, maxNumberOfIterations = 50 )  # Determine necessary accrual time with default settings if 200 subjects and # if the first 6 time units 20 subjects per time unit can be recruited, # then 30 subjects per time unit getSimulationSurvival(     plannedEvents = 40, accrualTime = c(0, 6),     accrualIntensity = c(20, 30), maxNumberOfSubjects = 200,     maxNumberOfIterations = 50 )  # Determine maximum number of Subjects with default settings if the first # 6 time units 20 subjects per time unit can be recruited, and after # 10 time units 30 subjects per time unit getSimulationSurvival(     plannedEvents = 40, accrualTime = c(0, 6, 10),     accrualIntensity = c(20, 30), maxNumberOfIterations = 50 )  # Specify accrual time as a list at <- list(     \"0 - <6\"  = 20,     \"6 - Inf\" = 30 ) getSimulationSurvival(     plannedEvents = 40, accrualTime = at,     maxNumberOfSubjects = 200, maxNumberOfIterations = 50 )  # Specify accrual time as a list, if maximum number of subjects need to be calculated at <- list(     \"0 - <6\"   = 20,     \"6 - <=10\" = 30 ) getSimulationSurvival(plannedEvents = 40, accrualTime = at, maxNumberOfIterations = 50)  # Specify effect size for a two-stage group sequential design with # O'Brien & Fleming boundaries. Effect size is based on event rates # at specified event time, directionUpper = FALSE needs to be specified # because it should be shown that hazard ratio < 1 designGS <- getDesignGroupSequential(kMax = 2) getSimulationSurvival(     design = designGS,     pi1 = 0.2, pi2 = 0.3, eventTime = 24, plannedEvents = c(20, 40),     maxNumberOfSubjects = 200, directionUpper = FALSE, maxNumberOfIterations = 50 )  # As above, but with a three-stage O'Brien and Fleming design with # specified information rates, note that planned events consists of integer values designGS2 <- getDesignGroupSequential(informationRates = c(0.4, 0.7, 1)) getSimulationSurvival(     design = designGS2,      pi1 = 0.2, pi2 = 0.3, eventTime = 24,     plannedEvents = round(designGS2$informationRates * 40),     maxNumberOfSubjects = 200, directionUpper = FALSE,     maxNumberOfIterations = 50 )  # Effect size is based on event rate at specified event time for the reference # group and hazard ratio, directionUpper = FALSE needs to be specified because # it should be shown that hazard ratio < 1 getSimulationSurvival(     design = designGS, hazardRatio = 0.5,     pi2 = 0.3, eventTime = 24, plannedEvents = c(20, 40), maxNumberOfSubjects = 200,     directionUpper = FALSE, maxNumberOfIterations = 50 )  # Effect size is based on hazard rate for the reference group and # hazard ratio, directionUpper = FALSE needs to be specified because # it should be shown that hazard ratio < 1 getSimulationSurvival(     design = designGS,     hazardRatio = 0.5, lambda2 = 0.02, plannedEvents = c(20, 40),     maxNumberOfSubjects = 200, directionUpper = FALSE,     maxNumberOfIterations = 50 )  # Specification of piecewise exponential survival time and hazard ratios, # note that in getSimulationSurvival only on hazard ratio is used # in the case that the survival time is piecewise expoential getSimulationSurvival(     design = designGS,     piecewiseSurvivalTime = c(0, 5, 10), lambda2 = c(0.01, 0.02, 0.04),     hazardRatio = 1.5, plannedEvents = c(20, 40), maxNumberOfSubjects = 200,     maxNumberOfIterations = 50 )  pws <- list(     \"0 - <5\"  = 0.01,     \"5 - <10\" = 0.02,     \">=10\"    = 0.04 ) getSimulationSurvival(     design = designGS,     piecewiseSurvivalTime = pws, hazardRatio = c(1.5),     plannedEvents = c(20, 40), maxNumberOfSubjects = 200,     maxNumberOfIterations = 50 )  # Specification of piecewise exponential survival time for both treatment arms getSimulationSurvival(     design = designGS,     piecewiseSurvivalTime = c(0, 5, 10), lambda2 = c(0.01, 0.02, 0.04),     lambda1 = c(0.015, 0.03, 0.06), plannedEvents = c(20, 40),     maxNumberOfSubjects = 200, maxNumberOfIterations = 50 )  # Specification of piecewise exponential survival time as a list, # note that in getSimulationSurvival only on hazard ratio # (not a vector) can be used pws <- list(     \"0 - <5\"  = 0.01,     \"5 - <10\" = 0.02,     \">=10\"    = 0.04 ) getSimulationSurvival(     design = designGS,     piecewiseSurvivalTime = pws, hazardRatio = 1.5,     plannedEvents = c(20, 40), maxNumberOfSubjects = 200,     maxNumberOfIterations = 50 )  # Specification of piecewise exponential survival time and delayed effect # (response after 5 time units) getSimulationSurvival(     design = designGS,     piecewiseSurvivalTime = c(0, 5, 10), lambda2 = c(0.01, 0.02, 0.04),     lambda1 = c(0.01, 0.02, 0.06), plannedEvents = c(20, 40),     maxNumberOfSubjects = 200, maxNumberOfIterations = 50 )  # Specify effect size based on median survival times getSimulationSurvival(     median1 = 5, median2 = 3, plannedEvents = 40,     maxNumberOfSubjects = 200, directionUpper = FALSE,     maxNumberOfIterations = 50 )  # Specify effect size based on median survival # times of Weibull distribtion with kappa = 2 getSimulationSurvival(     median1 = 5, median2 = 3, kappa = 2,     plannedEvents = 40, maxNumberOfSubjects = 200,     directionUpper = FALSE, maxNumberOfIterations = 50 )  # Perform recalculation of number of events based on conditional power for a # three-stage design with inverse normal combination test, where the conditional power # is calculated under the specified effect size thetaH1 = 1.3 and up to a four-fold # increase in originally planned sample size (number of events) is allowed. # Note that the first value in minNumberOfEventsPerStage and # maxNumberOfEventsPerStage is arbitrary, i.e., it has no effect. designIN <- getDesignInverseNormal(informationRates = c(0.4, 0.7, 1))  resultsWithSSR1 <- getSimulationSurvival(     design = designIN,     hazardRatio = seq(1, 1.6, 0.1),     pi2 = 0.3, conditionalPower = 0.8, thetaH1 = 1.3,     plannedEvents = c(58, 102, 146),     minNumberOfEventsPerStage = c(NA, 44, 44),     maxNumberOfEventsPerStage = 4 * c(NA, 44, 44),     maxNumberOfSubjects = 800, maxNumberOfIterations = 50 ) resultsWithSSR1  # If thetaH1 is unspecified, the observed hazard ratio estimate # (calculated from the log-rank statistic) is used for performing the # recalculation of the number of events resultsWithSSR2 <- getSimulationSurvival(     design = designIN,     hazardRatio = seq(1, 1.6, 0.1),     pi2 = 0.3, conditionalPower = 0.8, plannedEvents = c(58, 102, 146),     minNumberOfEventsPerStage = c(NA, 44, 44),     maxNumberOfEventsPerStage = 4 * c(NA, 44, 44),     maxNumberOfSubjects = 800, maxNumberOfIterations = 50 ) resultsWithSSR2  # Compare it with design without event size recalculation resultsWithoutSSR <- getSimulationSurvival(     design = designIN,     hazardRatio = seq(1, 1.6, 0.1), pi2 = 0.3,     plannedEvents = c(58, 102, 145), maxNumberOfSubjects = 800,     maxNumberOfIterations = 50 ) resultsWithoutSSR$overallReject resultsWithSSR1$overallReject resultsWithSSR2$overallReject  # Confirm that event size racalcuation increases the Type I error rate, # i.e., you have to use the combination test resultsWithSSRGS <- getSimulationSurvival(     design = designGS2,      hazardRatio = seq(1),     pi2 = 0.3, conditionalPower = 0.8, plannedEvents = c(58, 102, 145),     minNumberOfEventsPerStage = c(NA, 44, 44),     maxNumberOfEventsPerStage = 4 * c(NA, 44, 44),     maxNumberOfSubjects = 800, maxNumberOfIterations = 50 ) resultsWithSSRGS$overallReject  # Set seed to get reproducable results identical(     getSimulationSurvival(         plannedEvents = 40, maxNumberOfSubjects = 200,         seed = 99     )$analysisTime,     getSimulationSurvival(         plannedEvents = 40, maxNumberOfSubjects = 200,         seed = 99     )$analysisTime )  # Perform recalculation of number of events based on conditional power as above. # The number of events is recalculated only in the first interim, the recalculated number # is also used for the final stage. Here, we use the user defind calcEventsFunction as # follows (note that the last stage value in minNumberOfEventsPerStage and maxNumberOfEventsPerStage # has no effect): myCalcEventsFunction <- function(...,         stage, conditionalPower, estimatedTheta,         plannedEvents, eventsOverStages,         minNumberOfEventsPerStage, maxNumberOfEventsPerStage,         conditionalCriticalValue) {     theta <- max(1 + 1e-12, estimatedTheta)     if (stage == 2) {         requiredStageEvents <-             max(0, conditionalCriticalValue + qnorm(conditionalPower))^2 * 4 / log(theta)^2         requiredOverallStageEvents <- min(             max(minNumberOfEventsPerStage[stage], requiredStageEvents),             maxNumberOfEventsPerStage[stage]         ) + eventsOverStages[stage - 1]     } else {         requiredOverallStageEvents <- 2 * eventsOverStages[stage - 1] - eventsOverStages[1]     }     return(requiredOverallStageEvents) } resultsWithSSR <- getSimulationSurvival(     design = designIN,     hazardRatio = seq(1, 2.6, 0.5),     pi2 = 0.3,     conditionalPower = 0.8,     plannedEvents = c(58, 102, 146),     minNumberOfEventsPerStage = c(NA, 44, 4),     maxNumberOfEventsPerStage = 4 * c(NA, 44, 4),     maxNumberOfSubjects = 800,     calcEventsFunction = myCalcEventsFunction,     seed = 1234,     maxNumberOfIterations = 50 ) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getStageResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Stage Results — getStageResults","title":"Get Stage Results — getStageResults","text":"Returns summary statistics p-values given data set given design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getStageResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Stage Results — getStageResults","text":"","code":"getStageResults(   design,   dataInput,   ...,   stage = NA_integer_,   directionUpper = NA )"},{"path":"https://rpact-com.github.io/rpact/reference/getStageResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Stage Results — getStageResults","text":"design trial design. dataInput summary data used calculating test results. either element DatasetMeans, DatasetRates, DatasetSurvival created function getDataset(). information see getDataset(). ... (optional) arguments passed: thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. normalApproximation type computation p-values. Default FALSE testing means (.e., t test used) TRUE testing rates hazard ratio. testing rates, normalApproximation = FALSE specified, binomial test (one sample) exact test Fisher (two samples) used calculating p-values. survival setting, normalApproximation = FALSE effect. equalVariances type t test. testing means two treatment groups, either t test assuming variances equal t test without assuming , .e., test Welch-Satterthwaite calculated, default TRUE. intersectionTest Defines multiple test intersection hypotheses closed system hypotheses testing multiple hypotheses. Five options available multi-arm designs: \"Dunnett\", \"Bonferroni\", \"Simes\", \"Sidak\", \"Hierarchical\", default \"Dunnett\". Four options available population enrichment designs: \"SpiessensDebois\" (one subset ), \"Bonferroni\", \"Simes\", \"Sidak\", default \"Simes\". varianceOption Defines way calculate variance multiple treatment arms (> 2) population enrichment designs testing means. multiple arms, three options available: \"overallPooled\", \"pairwisePooled\", \"notPooled\", default \"overallPooled\". enrichment designs, options : \"pooled\", \"pooledFromFull\" (one subset ), \"notPooled\", default \"pooled\". stratifiedAnalysis enrichment designs, typically stratified analysis chosen. testing means rates, also non-stratified analysis based overall data can performed. survival data, stratified analysis possible (see Brannath et al., 2009), default TRUE. stage stage number (optional). Default: total number existing stages data input. directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getStageResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Stage Results — getStageResults","text":"Returns StageResults object. names obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getStageResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Stage Results — getStageResults","text":"Calculates returns stage results specified design data input specified stage.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getStageResults.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Get Stage Results — getStageResults","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getStageResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Stage Results — getStageResults","text":"","code":"if (FALSE) { # \\dontrun{ design <- getDesignInverseNormal() dataRates <- getDataset(     n1      = c(10, 10),     n2      = c(20, 20),     events1 = c( 8, 10),     events2 = c(10, 16)) getStageResults(design, dataRates) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getSystemIdentifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Get System Identifier — getSystemIdentifier","title":"Get System Identifier — getSystemIdentifier","text":"function generates unique system identifier based platform, R version, rpact package version.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSystemIdentifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get System Identifier — getSystemIdentifier","text":"","code":"getSystemIdentifier(date = NULL)"},{"path":"https://rpact-com.github.io/rpact/reference/getSystemIdentifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get System Identifier — getSystemIdentifier","text":"date character string Date representing date. Default Sys.Date().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSystemIdentifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get System Identifier — getSystemIdentifier","text":"character string representing unique system identifier.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getSystemIdentifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get System Identifier — getSystemIdentifier","text":"","code":"if (FALSE) { # \\dontrun{ getSystemIdentifier() } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getTestActions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Test Actions — getTestActions","title":"Get Test Actions — getTestActions","text":"Returns test actions.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getTestActions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Test Actions — getTestActions","text":"","code":"getTestActions(stageResults, ...)"},{"path":"https://rpact-com.github.io/rpact/reference/getTestActions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Test Actions — getTestActions","text":"stageResults results given stage, obtained getStageResults(). ... available backward compatibility.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getTestActions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Test Actions — getTestActions","text":"Returns character vector length kMax Returns numeric vector length kMax containing test actions stage.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getTestActions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Test Actions — getTestActions","text":"Returns test actions specified design stage results specified stage.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/getTestActions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Test Actions — getTestActions","text":"","code":"if (FALSE) { # \\dontrun{ design <- getDesignInverseNormal(kMax = 2) data <- getDataset(     n      = c( 20,  30),     means  = c( 50,  51),     stDevs = c(130, 140) ) getTestActions(getStageResults(design, dataInput = data)) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/getWideFormat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Wide Format — getWideFormat","title":"Get Wide Format — getWideFormat","text":"Returns specified dataset data.frame -called wide format.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getWideFormat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Wide Format — getWideFormat","text":"","code":"getWideFormat(dataInput)"},{"path":"https://rpact-com.github.io/rpact/reference/getWideFormat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Wide Format — getWideFormat","text":"data.frame returned.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/getWideFormat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Wide Format — getWideFormat","text":"wide format (unstacked), data presented different data variable separate column, .e., different groups separate columns.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/kableParameterSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create output in Markdown — kableParameterSet","title":"Create output in Markdown — kableParameterSet","text":"kable() function returns output specified object formatted Markdown.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/kableParameterSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create output in Markdown — kableParameterSet","text":"","code":"# S3 method for class 'ParameterSet' kable(x, ...)  # S3 method for class 'FieldSet' kable(x, ..., enforceRowNames = TRUE, niceColumnNamesEnabled = TRUE)  # S3 method for class 'data.frame' kable(x, ...)  # S3 method for class 'table' kable(x, ...)  # S3 method for class 'matrix' kable(x, ...)  # S3 method for class 'array' kable(x, ...)  # S3 method for class 'numeric' kable(x, ...)  # S3 method for class 'character' kable(x, ...)  # S3 method for class 'logical' kable(x, ...)  kable(x, ...)"},{"path":"https://rpact-com.github.io/rpact/reference/kableParameterSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create output in Markdown — kableParameterSet","text":"x ParameterSet. x inherit class ParameterSet, knitr::kable(x) returned. ... arguments (see kable).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/kableParameterSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create output in Markdown — kableParameterSet","text":"function deprecated longer used. Manual use kable() rpact result objects longer needed, formatting display handled automatically rpact package. Please remove manual kable() calls code avoid redundancy potential issues. results displayed consistent format automatically.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/knit_print.FieldSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Field Set in Markdown Code Chunks — knit_print.FieldSet","title":"Print Field Set in Markdown Code Chunks — knit_print.FieldSet","text":"function knit_print.FieldSet default printing function rpact result objects knitr. chunk option render uses function default. fall back normal printing behavior set chunk option render = normal_print. information see knit_print.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/knit_print.FieldSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Field Set in Markdown Code Chunks — knit_print.FieldSet","text":"","code":"# S3 method for class 'FieldSet' knit_print(x, ...)"},{"path":"https://rpact-com.github.io/rpact/reference/knit_print.FieldSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Field Set in Markdown Code Chunks — knit_print.FieldSet","text":"x FieldSet. ... arguments (see knit_print).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/knit_print.FieldSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Field Set in Markdown Code Chunks — knit_print.FieldSet","text":"Generic function print field set Markdown.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/knit_print.FieldSet.html","id":"markdown-options","dir":"Reference","previous_headings":"","what":"Markdown options","title":"Print Field Set in Markdown Code Chunks — knit_print.FieldSet","text":"Use options(\"rpact.print.heading.base.number\" = NUMBER) (NUMBER integer value >= -2) specify heading level. NUMBER = 1 results heading prefix #, NUMBER = 2 results ##, ... default options(\"rpact.print.heading.base.number\" = -2), .e., top headings written italic explicit defined header. options(\"rpact.print.heading.base.number\" = -1) means headings written bold explicit defined header. Furthermore following options can set globally: rpact.auto.markdown.: TRUE, output types rendered Markdown format automatically. rpact.auto.markdown.print: TRUE, print outputs rendered Markdown format automatically. rpact.auto.markdown.summary: TRUE, summary outputs rendered Markdown format automatically. rpact.auto.markdown.plot: TRUE, plot outputs rendered Markdown format automatically. Example: options(\"rpact.auto.markdown.plot\" = FALSE) disables automatic knitting plots inside Markdown documents.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/knit_print.ParameterSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Parameter Set in Markdown Code Chunks — knit_print.ParameterSet","title":"Print Parameter Set in Markdown Code Chunks — knit_print.ParameterSet","text":"function knit_print.ParameterSet default printing function rpact result objects knitr. chunk option render uses function default. fall back normal printing behavior set chunk option render = normal_print. information see knit_print.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/knit_print.ParameterSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Parameter Set in Markdown Code Chunks — knit_print.ParameterSet","text":"","code":"# S3 method for class 'ParameterSet' knit_print(x, ...)"},{"path":"https://rpact-com.github.io/rpact/reference/knit_print.ParameterSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Parameter Set in Markdown Code Chunks — knit_print.ParameterSet","text":"x ParameterSet. ... arguments (see knit_print).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/knit_print.ParameterSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Parameter Set in Markdown Code Chunks — knit_print.ParameterSet","text":"Generic function print parameter set Markdown.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/knit_print.ParameterSet.html","id":"markdown-options","dir":"Reference","previous_headings":"","what":"Markdown options","title":"Print Parameter Set in Markdown Code Chunks — knit_print.ParameterSet","text":"Use options(\"rpact.print.heading.base.number\" = NUMBER) (NUMBER integer value >= -2) specify heading level. NUMBER = 1 results heading prefix #, NUMBER = 2 results ##, ... default options(\"rpact.print.heading.base.number\" = -2), .e., top headings written italic explicit defined header. options(\"rpact.print.heading.base.number\" = -1) means headings written bold explicit defined header. Furthermore following options can set globally: rpact.auto.markdown.: TRUE, output types rendered Markdown format automatically. rpact.auto.markdown.print: TRUE, print outputs rendered Markdown format automatically. rpact.auto.markdown.summary: TRUE, summary outputs rendered Markdown format automatically. rpact.auto.markdown.plot: TRUE, plot outputs rendered Markdown format automatically. Example: options(\"rpact.auto.markdown.plot\" = FALSE) disables automatic knitting plots inside Markdown documents.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/knit_print.SummaryFactory.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Summary Factory in Markdown Code Chunks — knit_print.SummaryFactory","title":"Print Summary Factory in Markdown Code Chunks — knit_print.SummaryFactory","text":"function knit_print.SummaryFactory default printing function rpact summary objects knitr. chunk option render uses function default. fall back normal printing behavior set chunk option render = normal_print. information see knit_print.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/knit_print.SummaryFactory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Summary Factory in Markdown Code Chunks — knit_print.SummaryFactory","text":"","code":"# S3 method for class 'SummaryFactory' knit_print(x, ...)"},{"path":"https://rpact-com.github.io/rpact/reference/knit_print.SummaryFactory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Summary Factory in Markdown Code Chunks — knit_print.SummaryFactory","text":"x SummaryFactory. ... arguments (see knit_print).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/knit_print.SummaryFactory.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Summary Factory in Markdown Code Chunks — knit_print.SummaryFactory","text":"Generic function print summary object Markdown.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/knit_print.SummaryFactory.html","id":"markdown-options","dir":"Reference","previous_headings":"","what":"Markdown options","title":"Print Summary Factory in Markdown Code Chunks — knit_print.SummaryFactory","text":"Use options(\"rpact.print.heading.base.number\" = NUMBER) (NUMBER integer value >= -2) specify heading level. NUMBER = 1 results heading prefix #, NUMBER = 2 results ##, ... default options(\"rpact.print.heading.base.number\" = -2), .e., top headings written italic explicit defined header. options(\"rpact.print.heading.base.number\" = -1) means headings written bold explicit defined header. Furthermore following options can set globally: rpact.auto.markdown.: TRUE, output types rendered Markdown format automatically. rpact.auto.markdown.print: TRUE, print outputs rendered Markdown format automatically. rpact.auto.markdown.summary: TRUE, summary outputs rendered Markdown format automatically. rpact.auto.markdown.plot: TRUE, plot outputs rendered Markdown format automatically. Example: options(\"rpact.auto.markdown.plot\" = FALSE) disables automatic knitting plots inside Markdown documents.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/length.TrialDesignSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Length of Trial Design Set — length.TrialDesignSet","title":"Length of Trial Design Set — length.TrialDesignSet","text":"Returns number designs TrialDesignSet.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/length.TrialDesignSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Length of Trial Design Set — length.TrialDesignSet","text":"","code":"# S3 method for class 'TrialDesignSet' length(x)"},{"path":"https://rpact-com.github.io/rpact/reference/length.TrialDesignSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Length of Trial Design Set — length.TrialDesignSet","text":"x TrialDesignSet object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/length.TrialDesignSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Length of Trial Design Set — length.TrialDesignSet","text":"Returns non-negative integer length 1 representing number design TrialDesignSet.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/length.TrialDesignSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Length of Trial Design Set — length.TrialDesignSet","text":"helpful iteration designs design set.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/length.TrialDesignSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Length of Trial Design Set — length.TrialDesignSet","text":"","code":"if (FALSE) { # \\dontrun{ designSet <- getDesignSet(design = getDesignGroupSequential(), alpha = c(0.01, 0.05)) length(designSet) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/mvnprd.html","id":null,"dir":"Reference","previous_headings":"","what":"Original Algorithm AS 251: Normal Distribution — mvnprd","title":"Original Algorithm AS 251: Normal Distribution — mvnprd","text":"Calculates Multivariate Normal Distribution Product Correlation Structure published Charles Dunnett, Algorithm 251.1 Appl.Statist. (1989), Vol.38, .3, doi:10.2307/2347754 .","code":""},{"path":"https://rpact-com.github.io/rpact/reference/mvnprd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Original Algorithm AS 251: Normal Distribution — mvnprd","text":"","code":"mvnprd(..., A, B, BPD, EPS = 1e-06, INF, IERC = 1, HINC = 0)"},{"path":"https://rpact-com.github.io/rpact/reference/mvnprd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Original Algorithm AS 251: Normal Distribution — mvnprd","text":"... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. Upper limits integration. Array N dimensions B Lower limits integration. Array N dimensions BPD Values defining correlation structure. Array N dimensions EPS desired accuracy.  Defaults 1e-06 INF Determines integration done infinity. Array N dimensions. Valid values INF(): 0 = c(B(), Inf), 1 = c(-Inf, ()), 2 = c(B(), ()) IERC error control. set 1, strict error control based fourth derivative used.  set zero, error control based halving intervals used HINC Interval width Simpson's rule. Value zero caused default .24 used","code":""},{"path":"https://rpact-com.github.io/rpact/reference/mvnprd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Original Algorithm AS 251: Normal Distribution — mvnprd","text":"wrapper function original Fortran 77 code. multivariate normal vector correlation structure defined RHO(,J) = BPD() * BPD(J), computes probability vector falls rectangle n-space error less eps.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/mvstud.html","id":null,"dir":"Reference","previous_headings":"","what":"Original Algorithm AS 251: Student T Distribution — mvstud","title":"Original Algorithm AS 251: Student T Distribution — mvstud","text":"Calculates Multivariate Normal Distribution Product Correlation Structure published Charles Dunnett, Algorithm 251.1 Appl.Statist. (1989), Vol.38, .3, doi:10.2307/2347754 .","code":""},{"path":"https://rpact-com.github.io/rpact/reference/mvstud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Original Algorithm AS 251: Student T Distribution — mvstud","text":"","code":"mvstud(..., NDF, A, B, BPD, D, EPS = 1e-06, INF, IERC = 1, HINC = 0)"},{"path":"https://rpact-com.github.io/rpact/reference/mvstud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Original Algorithm AS 251: Student T Distribution — mvstud","text":"... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. NDF Degrees Freedom. Use 0 infinite D.F. Upper limits integration. Array N dimensions B Lower limits integration. Array N dimensions BPD Values defining correlation structure. Array N dimensions D Non-Centrality Vector EPS desired accuracy.  Defaults 1e-06 INF Determines integration done infinity. Array N dimensions. Valid values INF(): 0 = c(B(), Inf), 1 = c(-Inf, ()), 2 = c(B(), ()) IERC error control. set 1, strict error control based fourth derivative used.  set zero, error control based halving intervals used HINC Interval width Simpson's rule. Value zero caused default .24 used","code":""},{"path":"https://rpact-com.github.io/rpact/reference/mvstud.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Original Algorithm AS 251: Student T Distribution — mvstud","text":"wrapper function original Fortran 77 code. multivariate normal vector correlation structure defined RHO(,J) = BPD() * BPD(J), computes probability vector falls rectangle n-space error less eps.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/mvstud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Original Algorithm AS 251: Student T Distribution — mvstud","text":"","code":"if (FALSE) { # \\dontrun{ N <- 3 RHO <- 0.5 B <- rep(-5.0, length = N) A <- rep(5.0, length = N) INF <- rep(2, length = N) BPD <- rep(sqrt(RHO), length = N) D <- rep(0.0, length = N) result <- mvstud(NDF = 0, A = A, B = B, BPD = BPD, INF = INF, D = D) result } # }"},{"path":"https://rpact-com.github.io/rpact/reference/names.AnalysisResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of a Analysis Results Object — names.AnalysisResults","title":"Names of a Analysis Results Object — names.AnalysisResults","text":"Function get names AnalysisResults object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.AnalysisResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of a Analysis Results Object — names.AnalysisResults","text":"","code":"# S3 method for class 'AnalysisResults' names(x)"},{"path":"https://rpact-com.github.io/rpact/reference/names.AnalysisResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Names of a Analysis Results Object — names.AnalysisResults","text":"x AnalysisResults object created getAnalysisResults().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.AnalysisResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Names of a Analysis Results Object — names.AnalysisResults","text":"Returns character vector containing names AnalysisResults object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.AnalysisResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Names of a Analysis Results Object — names.AnalysisResults","text":"Returns names analysis results can accessed user.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.FieldSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of a Field Set Object — names.FieldSet","title":"Names of a Field Set Object — names.FieldSet","text":"Function get names FieldSet object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.FieldSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of a Field Set Object — names.FieldSet","text":"","code":"# S3 method for class 'FieldSet' names(x)"},{"path":"https://rpact-com.github.io/rpact/reference/names.FieldSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Names of a Field Set Object — names.FieldSet","text":"x FieldSet object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.FieldSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Names of a Field Set Object — names.FieldSet","text":"Returns character vector containing names AnalysisResults object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.FieldSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Names of a Field Set Object — names.FieldSet","text":"Returns names field set can accessed user.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.SimulationResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of a Simulation Results Object — names.SimulationResults","title":"Names of a Simulation Results Object — names.SimulationResults","text":"Function get names SimulationResults object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.SimulationResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of a Simulation Results Object — names.SimulationResults","text":"","code":"# S3 method for class 'SimulationResults' names(x)"},{"path":"https://rpact-com.github.io/rpact/reference/names.SimulationResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Names of a Simulation Results Object — names.SimulationResults","text":"x SimulationResults object created getSimulationResults[MultiArm/Enrichment][Means/Rates/Survival].","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.SimulationResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Names of a Simulation Results Object — names.SimulationResults","text":"Returns character vector containing names AnalysisResults object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.SimulationResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Names of a Simulation Results Object — names.SimulationResults","text":"Returns names simulation results can accessed user.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.StageResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of a Stage Results Object — names.StageResults","title":"Names of a Stage Results Object — names.StageResults","text":"Function get names StageResults object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.StageResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of a Stage Results Object — names.StageResults","text":"","code":"# S3 method for class 'StageResults' names(x)"},{"path":"https://rpact-com.github.io/rpact/reference/names.StageResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Names of a Stage Results Object — names.StageResults","text":"x StageResults object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.StageResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Names of a Stage Results Object — names.StageResults","text":"Returns character vector containing names AnalysisResults object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.StageResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Names of a Stage Results Object — names.StageResults","text":"Returns names stage results can accessed user.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.TrialDesignSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of a Trial Design Set Object — names.TrialDesignSet","title":"Names of a Trial Design Set Object — names.TrialDesignSet","text":"Function get names TrialDesignSet object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.TrialDesignSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of a Trial Design Set Object — names.TrialDesignSet","text":"","code":"# S3 method for class 'TrialDesignSet' names(x)"},{"path":"https://rpact-com.github.io/rpact/reference/names.TrialDesignSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Names of a Trial Design Set Object — names.TrialDesignSet","text":"x TrialDesignSet object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.TrialDesignSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Names of a Trial Design Set Object — names.TrialDesignSet","text":"Returns character vector containing names AnalysisResults object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.TrialDesignSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Names of a Trial Design Set Object — names.TrialDesignSet","text":"Returns names design set can accessed user.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/names.TrialDesignSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Names of a Trial Design Set Object — names.TrialDesignSet","text":"","code":"if (FALSE) { # \\dontrun{ designSet <- getDesignSet(design = getDesignGroupSequential(), alpha = c(0.01, 0.05)) names(designSet) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/param_accrualIntensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Accrual Intensity — param_accrualIntensity","title":"Parameter Description: Accrual Intensity — param_accrualIntensity","text":"Parameter Description: Accrual Intensity","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_accrualIntensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Accrual Intensity — param_accrualIntensity","text":"accrualIntensity numeric vector accrual intensities, default relative intensity 0.1 (details see getAccrualTime()).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_accrualIntensityType.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Accrual Intensity Type — param_accrualIntensityType","title":"Parameter Description: Accrual Intensity Type — param_accrualIntensityType","text":"Parameter Description: Accrual Intensity Type","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_accrualIntensityType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Accrual Intensity Type — param_accrualIntensityType","text":"accrualIntensityType character value specifying accrual intensity input type. Must one \"auto\", \"absolute\", \"relative\"; default \"auto\", .e., values < 1 type \"relative\", otherwise \"absolute\".","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_accrualIntensity_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: accrualIntensity for Counts — param_accrualIntensity_counts","title":"Parameter Description: accrualIntensity for Counts — param_accrualIntensity_counts","text":"Parameter Description: accrualIntensity Counts","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_accrualIntensity_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: accrualIntensity for Counts — param_accrualIntensity_counts","text":"accrualIntensity specified, assumed accrual intensities study, default.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_accrualTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Accrual Time — param_accrualTime","title":"Parameter Description: Accrual Time — param_accrualTime","text":"Parameter Description: Accrual Time","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_accrualTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Accrual Time — param_accrualTime","text":"accrualTime assumed accrual time intervals study, default c(0, 12) (details see getAccrualTime()).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_accrualTime_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: accrualTime for Counts — param_accrualTime_counts","title":"Parameter Description: accrualTime for Counts — param_accrualTime_counts","text":"Parameter Description: accrualTime Counts","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_accrualTime_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: accrualTime for Counts — param_accrualTime_counts","text":"accrualTime specified, assumed accrual time interval(s) study, default.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_activeArms.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Active Arms — param_activeArms","title":"Parameter Description: Active Arms — param_activeArms","text":"Parameter Description: Active Arms","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_activeArms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Active Arms — param_activeArms","text":"activeArms number active treatment arms compared control, default 3.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_adaptations.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Adaptations — param_adaptations","title":"Parameter Description: Adaptations — param_adaptations","text":"Parameter Description: Adaptations","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_adaptations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Adaptations — param_adaptations","text":"adaptations logical vector length kMax - 1 indicating whether adaptation takes place interim k, default rep(TRUE, kMax - 1).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_allocationRatioPlanned.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Allocation Ratio Planned — param_allocationRatioPlanned","title":"Parameter Description: Allocation Ratio Planned — param_allocationRatioPlanned","text":"Parameter Description: Allocation Ratio Planned","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_allocationRatioPlanned.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Allocation Ratio Planned — param_allocationRatioPlanned","text":"allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_allocationRatioPlanned_sampleSize.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Allocation Ratio Planned With Optimum Option — param_allocationRatioPlanned_sampleSize","title":"Parameter Description: Allocation Ratio Planned With Optimum Option — param_allocationRatioPlanned_sampleSize","text":"Parameter Description: Allocation Ratio Planned Optimum Option","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_allocationRatioPlanned_sampleSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Allocation Ratio Planned With Optimum Option — param_allocationRatioPlanned_sampleSize","text":"allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. allocationRatioPlanned = 0 entered, optimal allocation ratio yielding smallest overall sample size determined.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Alpha — param_alpha","title":"Parameter Description: Alpha — param_alpha","text":"Parameter Description: Alpha","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Alpha — param_alpha","text":"alpha significance level alpha, default 0.025. Must positive numeric length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_alternative.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Alternative — param_alternative","title":"Parameter Description: Alternative — param_alternative","text":"Parameter Description: Alternative","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_alternative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Alternative — param_alternative","text":"alternative alternative hypothesis value testing means. can vector assumed alternatives, default seq(0, 1, 0.2) (power calculations) seq(0.2, 1, 0.2) (sample size calculations).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_alternative_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Alternative for Simulation — param_alternative_simulation","title":"Parameter Description: Alternative for Simulation — param_alternative_simulation","text":"Parameter Description: Alternative Simulation","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_alternative_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Alternative for Simulation — param_alternative_simulation","text":"alternative alternative hypothesis value testing means data simulated. can vector assumed alternatives, default seq(0, 1, 0.2).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Beta — param_beta","title":"Parameter Description: Beta — param_beta","text":"Parameter Description: Beta","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Beta — param_beta","text":"beta Type II error rate, necessary providing sample size calculations (e.g., getSampleSizeMeans()), beta spending function designs, optimum designs, default 0.20. Must positive numeric length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_bindingFutility.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Binding Futility — param_bindingFutility","title":"Parameter Description: Binding Futility — param_bindingFutility","text":"Parameter Description: Binding Futility","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_bindingFutility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Binding Futility — param_bindingFutility","text":"bindingFutility Logical. bindingFutility = TRUE specified calculation critical values affected futility bounds futility threshold binding sense study must stopped futility condition reached (default FALSE).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_calcEventsFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Calculate Events Function — param_calcEventsFunction","title":"Parameter Description: Calculate Events Function — param_calcEventsFunction","text":"Parameter Description: Calculate Events Function","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_calcEventsFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Calculate Events Function — param_calcEventsFunction","text":"calcEventsFunction Optionally, function can entered defines way performing sample size recalculation. default, event number recalculation performed conditional power specified minNumberOfEventsPerStage maxNumberOfEventsPerStage (see details examples).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_calcSubjectsFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Calculate Subjects Function — param_calcSubjectsFunction","title":"Parameter Description: Calculate Subjects Function — param_calcSubjectsFunction","text":"Parameter Description: Calculate Subjects Function","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_calcSubjectsFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Calculate Subjects Function — param_calcSubjectsFunction","text":"calcSubjectsFunction Optionally, function can entered defines way performing sample size recalculation. default, sample size recalculation performed conditional power specified minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (see details examples).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_conditionalPower.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Conditional Power — param_conditionalPower","title":"Parameter Description: Conditional Power — param_conditionalPower","text":"Parameter Description: Conditional Power","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_conditionalPower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Conditional Power — param_conditionalPower","text":"conditionalPower conditional power subsequent stage sample size recalculation performed. Must positive numeric length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_conditionalPowerSimulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Conditional Power — param_conditionalPowerSimulation","title":"Parameter Description: Conditional Power — param_conditionalPowerSimulation","text":"Parameter Description: Conditional Power","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_conditionalPowerSimulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Conditional Power — param_conditionalPowerSimulation","text":"conditionalPower conditionalPower together minNumberOfSubjectsPerStage maxNumberOfSubjectsPerStage (minNumberOfEventsPerStage maxNumberOfEventsPerStage survival designs) specified, sample size recalculation based specified conditional power performed. defined power subsequent stage given current data. default, conditional power calculated observed effect size. Optionally, can also specify thetaH1 stDevH1 (simulating means), pi1H1 pi2H1 (simulating rates), thetaH1 (simulating hazard ratios) parameters calculated sample size recalculation performed.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_dataInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Data Input — param_dataInput","title":"Parameter Description: Data Input — param_dataInput","text":"Parameter Description: Data Input","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_dataInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Data Input — param_dataInput","text":"dataInput summary data used calculating test results. either element DatasetMeans, DatasetRates, DatasetSurvival created function getDataset(). information see getDataset().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Design — param_design","title":"Parameter Description: Design — param_design","text":"Parameter Description: Design","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Design — param_design","text":"design trial design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_design_with_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Design with Default — param_design_with_default","title":"Parameter Description: Design with Default — param_design_with_default","text":"Parameter Description: Design Default","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_design_with_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Design with Default — param_design_with_default","text":"design trial design. trial design specified, fixed sample size design used. case, Type error rate alpha, Type II error rate beta, twoSidedPower, sided can directly entered argument necessary.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_digits.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Digits — param_digits","title":"Parameter Description: Digits — param_digits","text":"Parameter Description: Digits","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_digits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Digits — param_digits","text":"digits Defines many digits used numeric values. Must positive integer length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_directionUpper.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Direction Upper — param_directionUpper","title":"Parameter Description: Direction Upper — param_directionUpper","text":"Parameter Description: Direction Upper","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_directionUpper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Direction Upper — param_directionUpper","text":"directionUpper Logical. Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_doseLevels.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Dose Levels — param_doseLevels","title":"Parameter Description: Dose Levels — param_doseLevels","text":"Parameter Description: Dose Levels","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_doseLevels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Dose Levels — param_doseLevels","text":"doseLevels dose levels dose response relationship. specified, dose levels 1,...,activeArms.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_dropoutRate1.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Dropout Rate (1) — param_dropoutRate1","title":"Parameter Description: Dropout Rate (1) — param_dropoutRate1","text":"Parameter Description: Dropout Rate (1)","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_dropoutRate1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Dropout Rate (1) — param_dropoutRate1","text":"dropoutRate1 assumed drop-rate treatment group, default 0.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_dropoutRate2.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Dropout Rate (2) — param_dropoutRate2","title":"Parameter Description: Dropout Rate (2) — param_dropoutRate2","text":"Parameter Description: Dropout Rate (2)","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_dropoutRate2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Dropout Rate (2) — param_dropoutRate2","text":"dropoutRate2 assumed drop-rate control group, default 0.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_dropoutTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Dropout Time — param_dropoutTime","title":"Parameter Description: Dropout Time — param_dropoutTime","text":"Parameter Description: Dropout Time","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_dropoutTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Dropout Time — param_dropoutTime","text":"dropoutTime assumed time drop-rates control treatment group, default 12.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_effectList.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Effect List — param_effectList","title":"Parameter Description: Effect List — param_effectList","text":"Parameter Description: Effect List","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_effectList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Effect List — param_effectList","text":"effectList List subsets, prevalences, effect sizes columns number rows reflecting different situations consider (see examples).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_effectMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Effect Matrix — param_effectMatrix","title":"Parameter Description: Effect Matrix — param_effectMatrix","text":"Parameter Description: Effect Matrix","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_effectMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Effect Matrix — param_effectMatrix","text":"effectMatrix Matrix effect sizes activeArms columns number rows reflecting different situations consider.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_effectMeasure.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Effect Measure — param_effectMeasure","title":"Parameter Description: Effect Measure — param_effectMeasure","text":"Parameter Description: Effect Measure","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_effectMeasure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Effect Measure — param_effectMeasure","text":"effectMeasure Criterion treatment arm/population selection, either based test statistic (\"testStatistic\") effect estimate (difference means rates ratio survival) (\"effectEstimate\"), default \"effectEstimate\".","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_epsilonValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Epsilon Value — param_epsilonValue","title":"Parameter Description: Epsilon Value — param_epsilonValue","text":"Parameter Description: Epsilon Value","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_epsilonValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Epsilon Value — param_epsilonValue","text":"epsilonValue typeOfSelection = \"epsilon\" (select treatment arm / population worse epsilon compared best), parameter epsilonValue specified. Must numeric length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_eventTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Event Time — param_eventTime","title":"Parameter Description: Event Time — param_eventTime","text":"Parameter Description: Event Time","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_eventTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Event Time — param_eventTime","text":"eventTime assumed time event rates calculated, default 12.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_fixedExposureTime_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: fixedExposureTime for Counts — param_fixedExposureTime_counts","title":"Parameter Description: fixedExposureTime for Counts — param_fixedExposureTime_counts","text":"Parameter Description: fixedExposureTime Counts","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_fixedExposureTime_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: fixedExposureTime for Counts — param_fixedExposureTime_counts","text":"fixedExposureTime specified, fixed time exposure per subject count data, default.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_followUpTime_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: followUpTime for Counts — param_followUpTime_counts","title":"Parameter Description: followUpTime for Counts — param_followUpTime_counts","text":"Parameter Description: followUpTime Counts","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_followUpTime_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: followUpTime for Counts — param_followUpTime_counts","text":"followUpTime specified, assumed (additional) follow-time study, default. total study duration accrualTime + followUpTime.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_gED50.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: G ED50 — param_gED50","title":"Parameter Description: G ED50 — param_gED50","text":"Parameter Description: G ED50","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_gED50.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: G ED50 — param_gED50","text":"gED50 typeOfShape = \"sigmoidEmax\" selected, gED50 entered specify ED50 sigmoid Emax model.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Grid (Output Specification Of Multiple Plots) — param_grid","title":"Parameter Description: Grid (Output Specification Of Multiple Plots) — param_grid","text":"Parameter Description: Grid (Output Specification Multiple Plots)","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Grid (Output Specification Of Multiple Plots) — param_grid","text":"grid integer value specifying output multiple plots. default (1) list ggplot objects returned. grid value > 1 specified, grid plot returned number plots <= specified grid value; list ggplot objects returned otherwise. grid = 0 specified, plots created using print command list ggplot objects returned invisible. Note one following packages must installed create grid plot: 'ggpubr', 'gridExtra', 'cowplot'.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Number Of Treatment Groups — param_groups","title":"Parameter Description: Number Of Treatment Groups — param_groups","text":"Parameter Description: Number Treatment Groups","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Number Of Treatment Groups — param_groups","text":"groups number treatment groups (1 2), default 2.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_hazardRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Hazard Ratio — param_hazardRatio","title":"Parameter Description: Hazard Ratio — param_hazardRatio","text":"Parameter Description: Hazard Ratio","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_hazardRatio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Hazard Ratio — param_hazardRatio","text":"hazardRatio vector hazard ratios consideration. event hazard rates treatment groups defined, hazard ratio needs specified calculated, default. Must positive numeric length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_includeAllParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Include All Parameters — param_includeAllParameters","title":"Parameter Description: Include All Parameters — param_includeAllParameters","text":"Parameter Description: Include Parameters","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_includeAllParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Include All Parameters — param_includeAllParameters","text":"includeAllParameters Logical. TRUE, available parameters included data frame; meaningful parameter selection otherwise, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_informationEpsilon.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Information Epsilon — param_informationEpsilon","title":"Parameter Description: Information Epsilon — param_informationEpsilon","text":"Parameter Description: Information Epsilon","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_informationEpsilon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Information Epsilon — param_informationEpsilon","text":"informationEpsilon Positive integer value specifying absolute information epsilon, defines maximum distance observed information maximum information causes final analysis. Updates final analysis case observed information final analysis smaller (\"-running\") planned maximum information maxInformation, default 0. Alternatively, floating-point number > 0 < 1 can specified define relative information epsilon.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_informationRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Information Rates — param_informationRates","title":"Parameter Description: Information Rates — param_informationRates","text":"Parameter Description: Information Rates","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_informationRates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Information Rates — param_informationRates","text":"informationRates information rates t_1, ..., t_kMax (must fixed prior trial), default (1:kMax) / kMax. weighted inverse normal design, weights derived w_1 = sqrt(t_1), w_k = sqrt(t_k - t_(k-1)). weighted Fisher's combination test, weights (scales) w_k = sqrt((t_k - t_(k-1)) / t_1) (see documentation).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_intersectionTest_Enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Intersection Test — param_intersectionTest_Enrichment","title":"Parameter Description: Intersection Test — param_intersectionTest_Enrichment","text":"Parameter Description: Intersection Test","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_intersectionTest_Enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Intersection Test — param_intersectionTest_Enrichment","text":"intersectionTest Defines multiple test intersection hypotheses closed system hypotheses. Four options available enrichment designs: \"SpiessensDebois\", \"Bonferroni\", \"Simes\", \"Sidak\", default \"Simes\".","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_intersectionTest_MultiArm.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Intersection Test — param_intersectionTest_MultiArm","title":"Parameter Description: Intersection Test — param_intersectionTest_MultiArm","text":"Parameter Description: Intersection Test","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_intersectionTest_MultiArm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Intersection Test — param_intersectionTest_MultiArm","text":"intersectionTest Defines multiple test intersection hypotheses closed system hypotheses. Five options available multi-arm designs: \"Dunnett\", \"Bonferroni\", \"Simes\", \"Sidak\", \"Hierarchical\", default \"Dunnett\".","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_kMax.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Maximum Number of Stages — param_kMax","title":"Parameter Description: Maximum Number of Stages — param_kMax","text":"Parameter Description: Maximum Number Stages","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_kMax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Maximum Number of Stages — param_kMax","text":"kMax maximum number stages K. Must positive integer length 1 (default value 3). maximum selectable kMax 20 group sequential inverse normal 6 Fisher combination test designs.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_kappa.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Kappa — param_kappa","title":"Parameter Description: Kappa — param_kappa","text":"Parameter Description: Kappa","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_kappa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Kappa — param_kappa","text":"kappa numeric value > 0. kappa != 1 used specification shape Weibull distribution. Default 1, .e., exponential survival distribution used instead Weibull distribution. Note Weibull distribution used piecewise definition survival time distribution, .e., piecewiselambda (single value) kappa can specified. function equivalent pweibull(t, shape = kappa, scale = 1 / lambda) stats package, .e., scale parameter 1 / 'hazard rate'. example, getPiecewiseExponentialDistribution(time = 130, piecewiseLambda = 0.01, kappa = 4.2) pweibull(q = 130, shape = 4.2, scale = 1 / 0.01) provide result.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_lambda1.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Lambda (1) — param_lambda1","title":"Parameter Description: Lambda (1) — param_lambda1","text":"Parameter Description: Lambda (1)","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_lambda1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Lambda (1) — param_lambda1","text":"lambda1 assumed hazard rate treatment group, default. lambda1 can also used define piecewise exponentially distributed survival times (see details). Must positive numeric length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_lambda1_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: lambda (1) for Counts — param_lambda1_counts","title":"Parameter Description: lambda (1) for Counts — param_lambda1_counts","text":"Parameter Description: lambda (1) Counts","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_lambda1_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: lambda (1) for Counts — param_lambda1_counts","text":"lambda1 numeric value vector represents assumed rate homogeneous Poisson process active treatment group, default.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_lambda2.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Lambda (2) — param_lambda2","title":"Parameter Description: Lambda (2) — param_lambda2","text":"Parameter Description: Lambda (2)","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_lambda2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Lambda (2) — param_lambda2","text":"lambda2 assumed hazard rate reference group, default. lambda2 can also used define piecewise exponentially distributed survival times (see details). Must positive numeric length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_lambda2_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: lambda (2) for Counts — param_lambda2_counts","title":"Parameter Description: lambda (2) for Counts — param_lambda2_counts","text":"Parameter Description: lambda (2) Counts","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_lambda2_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: lambda (2) for Counts — param_lambda2_counts","text":"lambda2 numeric value represents assumed rate homogeneous Poisson process control group, default.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_lambda_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: lambda for Counts — param_lambda_counts","title":"Parameter Description: lambda for Counts — param_lambda_counts","text":"Parameter Description: lambda Counts","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_lambda_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: lambda for Counts — param_lambda_counts","text":"lambda numeric value vector represents assumed rate homogeneous Poisson process pooled treatment groups, default.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_legendPosition.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Legend Position On Plots — param_legendPosition","title":"Parameter Description: Legend Position On Plots — param_legendPosition","text":"Parameter Description: Legend Position Plots","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_legendPosition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Legend Position On Plots — param_legendPosition","text":"legendPosition position legend. default (NA_integer_) algorithm tries find suitable position. Choose one following values specify position manually: -1: legend shown NA: algorithm tries find suitable position 0: legend position outside plot 1: legend position left top 2: legend position left center 3: legend position left bottom 4: legend position right top 5: legend position right center 6: legend position right bottom","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_maxInformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Maximum Information — param_maxInformation","title":"Parameter Description: Maximum Information — param_maxInformation","text":"Parameter Description: Maximum Information","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_maxInformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Maximum Information — param_maxInformation","text":"maxInformation Positive value specifying maximum information.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_maxNumberOfEventsPerStage.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Max Number Of Events Per Stage — param_maxNumberOfEventsPerStage","title":"Parameter Description: Max Number Of Events Per Stage — param_maxNumberOfEventsPerStage","text":"Parameter Description: Max Number Events Per Stage","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_maxNumberOfEventsPerStage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Max Number Of Events Per Stage — param_maxNumberOfEventsPerStage","text":"maxNumberOfEventsPerStage performing data driven sample size recalculation, numeric vector maxNumberOfEventsPerStage length kMax determines maximum number events per stage (.e., cumulated), first element taken account.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_maxNumberOfIterations.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Maximum Number Of Iterations — param_maxNumberOfIterations","title":"Parameter Description: Maximum Number Of Iterations — param_maxNumberOfIterations","text":"Parameter Description: Maximum Number Iterations","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_maxNumberOfIterations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Maximum Number Of Iterations — param_maxNumberOfIterations","text":"maxNumberOfIterations number simulation iterations, default 1000. Must positive integer length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_maxNumberOfSubjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Maximum Number Of Subjects — param_maxNumberOfSubjects","title":"Parameter Description: Maximum Number Of Subjects — param_maxNumberOfSubjects","text":"Parameter Description: Maximum Number Subjects","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_maxNumberOfSubjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Maximum Number Of Subjects — param_maxNumberOfSubjects","text":"maxNumberOfSubjects maxNumberOfSubjects > 0 needs specified power calculations calculation necessary follow-(count data). two treatment arms, maximum number subjects treatment arms.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_maxNumberOfSubjectsPerStage.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Maximum Number Of Subjects Per Stage — param_maxNumberOfSubjectsPerStage","title":"Parameter Description: Maximum Number Of Subjects Per Stage — param_maxNumberOfSubjectsPerStage","text":"Parameter Description: Maximum Number Subjects Per Stage","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_maxNumberOfSubjectsPerStage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Maximum Number Of Subjects Per Stage — param_maxNumberOfSubjectsPerStage","text":"maxNumberOfSubjectsPerStage performing data driven sample size recalculation, numeric vector maxNumberOfSubjectsPerStage length kMax determines maximum number subjects per stage (.e., cumulated), first element taken account. two treatment arms, number subjects treatment arms. multi-arm designs maxNumberOfSubjectsPerStage refers maximum number subjects per selected active arm.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_maxNumberOfSubjects_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Maximum Number Of Subjects For Survival Endpoint — param_maxNumberOfSubjects_survival","title":"Parameter Description: Maximum Number Of Subjects For Survival Endpoint — param_maxNumberOfSubjects_survival","text":"Parameter Description: Maximum Number Subjects Survival Endpoint","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_maxNumberOfSubjects_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Maximum Number Of Subjects For Survival Endpoint — param_maxNumberOfSubjects_survival","text":"maxNumberOfSubjects maxNumberOfSubjects > 0 needs specified. accrual time accrual intensity specified, calculated. Must positive integer length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_median1.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Median (1) — param_median1","title":"Parameter Description: Median (1) — param_median1","text":"Parameter Description: Median (1)","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_median1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Median (1) — param_median1","text":"median1 assumed median survival time treatment group, default.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_median2.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Median (2) — param_median2","title":"Parameter Description: Median (2) — param_median2","text":"Parameter Description: Median (2)","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_median2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Median (2) — param_median2","text":"median2 assumed median survival time reference group, default. Must positive numeric length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_minNumberOfEventsPerStage.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Min Number Of Events Per Stage — param_minNumberOfEventsPerStage","title":"Parameter Description: Min Number Of Events Per Stage — param_minNumberOfEventsPerStage","text":"Parameter Description: Min Number Events Per Stage","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_minNumberOfEventsPerStage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Min Number Of Events Per Stage — param_minNumberOfEventsPerStage","text":"minNumberOfEventsPerStage performing data driven sample size recalculation, numeric vector minNumberOfEventsPerStage length kMax determines minimum number events per stage (.e., cumulated), first element taken account.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_minNumberOfSubjectsPerStage.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Minimum Number Of Subjects Per Stage — param_minNumberOfSubjectsPerStage","title":"Parameter Description: Minimum Number Of Subjects Per Stage — param_minNumberOfSubjectsPerStage","text":"Parameter Description: Minimum Number Subjects Per Stage","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_minNumberOfSubjectsPerStage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Minimum Number Of Subjects Per Stage — param_minNumberOfSubjectsPerStage","text":"minNumberOfSubjectsPerStage performing data driven sample size recalculation, numeric vector minNumberOfSubjectsPerStage length kMax determines minimum number subjects per stage (.e., cumulated), first element taken account. two treatment arms, number subjects treatment arms. multi-arm designs minNumberOfSubjectsPerStage refers minimum number subjects per selected active arm.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_nMax.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: N_max — param_nMax","title":"Parameter Description: N_max — param_nMax","text":"Parameter Description: N_max","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_nMax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: N_max — param_nMax","text":"nMax maximum sample size. Must positive integer length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_nPlanned.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: N Planned — param_nPlanned","title":"Parameter Description: N Planned — param_nPlanned","text":"Parameter Description: N Planned","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_nPlanned.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: N Planned — param_nPlanned","text":"nPlanned additional (.e., \"new\" cumulative) sample size planned subsequent stages. argument must vector length equal number remaining stages contain combined sample size treatment groups two groups considered. survival outcomes, contain planned number additional events. multi-arm designs, per-comparison (combined) sample size. enrichment designs, (combined) sample size considered sub-population.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_niceColumnNamesEnabled.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Nice Column Names Enabled — param_niceColumnNamesEnabled","title":"Parameter Description: Nice Column Names Enabled — param_niceColumnNamesEnabled","text":"Parameter Description: Nice Column Names Enabled","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_niceColumnNamesEnabled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Nice Column Names Enabled — param_niceColumnNamesEnabled","text":"niceColumnNamesEnabled Logical. TRUE, nice looking column names used; syntactic names (variable names) otherwise (see make.names).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_normalApproximation.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Normal Approximation — param_normalApproximation","title":"Parameter Description: Normal Approximation — param_normalApproximation","text":"Parameter Description: Normal Approximation","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_normalApproximation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Normal Approximation — param_normalApproximation","text":"normalApproximation type computation p-values. Default FALSE testing means (.e., t test used) TRUE testing rates hazard ratio. testing rates, normalApproximation = FALSE specified, binomial test (one sample) exact test Fisher (two samples) used calculating p-values. survival setting normalApproximation = FALSE effect.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_overDispersion_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: overdispersion for Counts — param_overdispersion_counts","title":"Parameter Description: overdispersion for Counts — param_overdispersion_counts","text":"Parameter Description: overdispersion Counts","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_overDispersion_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: overdispersion for Counts — param_overdispersion_counts","text":"overdispersion numeric value represents assumed overdispersion negative binomial distribution, default 0.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Palette — param_palette","title":"Parameter Description: Palette — param_palette","text":"Parameter Description: Palette","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Palette — param_palette","text":"palette palette, default \"Set1\".","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_pi1_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Pi (1) for Rates — param_pi1_rates","title":"Parameter Description: Pi (1) for Rates — param_pi1_rates","text":"Parameter Description: Pi (1) Rates","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_pi1_rates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Pi (1) for Rates — param_pi1_rates","text":"pi1 numeric value vector represents assumed probability active treatment group two treatment groups considered, alternative probability one treatment group design, default seq(0.2, 0.5, 0.1) (power calculations simulations) seq(0.4, 0.6, 0.1) (sample size calculations).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_pi1_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Pi (1) for Survival Data — param_pi1_survival","title":"Parameter Description: Pi (1) for Survival Data — param_pi1_survival","text":"Parameter Description: Pi (1) Survival Data","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_pi1_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Pi (1) for Survival Data — param_pi1_survival","text":"pi1 numeric value vector represents assumed event rate treatment group, default seq(0.2, 0.5, 0.1) (power calculations simulations) seq(0.4, 0.6, 0.1) (sample size calculations).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_pi2_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Pi (2) for Rates — param_pi2_rates","title":"Parameter Description: Pi (2) for Rates — param_pi2_rates","text":"Parameter Description: Pi (2) Rates","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_pi2_rates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Pi (2) for Rates — param_pi2_rates","text":"pi2 numeric value represents assumed probability reference group two treatment groups considered, default 0.2.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_pi2_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Pi (2) for Survival Data — param_pi2_survival","title":"Parameter Description: Pi (2) for Survival Data — param_pi2_survival","text":"Parameter Description: Pi (2) Survival Data","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_pi2_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Pi (2) for Survival Data — param_pi2_survival","text":"pi2 numeric value represents assumed event rate control group, default 0.2.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_piecewiseSurvivalTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Piecewise Survival Time — param_piecewiseSurvivalTime","title":"Parameter Description: Piecewise Survival Time — param_piecewiseSurvivalTime","text":"Parameter Description: Piecewise Survival Time","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_piecewiseSurvivalTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Piecewise Survival Time — param_piecewiseSurvivalTime","text":"piecewiseSurvivalTime vector specifies time intervals piecewise definition exponential survival time cumulative distribution function  (details see getPiecewiseSurvivalTime()).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_plannedCalendarTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Planned Calendar Time — param_plannedCalendarTime","title":"Parameter Description: Planned Calendar Time — param_plannedCalendarTime","text":"Parameter Description: Planned Calendar Time","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_plannedCalendarTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Planned Calendar Time — param_plannedCalendarTime","text":"plannedCalendarTime simulating count data, time points analysis planned performed. vector length kMax","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_plannedEvents.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Planned Events — param_plannedEvents","title":"Parameter Description: Planned Events — param_plannedEvents","text":"Parameter Description: Planned Events","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_plannedEvents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Planned Events — param_plannedEvents","text":"plannedEvents plannedEvents numeric vector length kMax (number stages design) determines number cumulated (overall) events survival designs interim stages planned. two treatment arms, number events treatment arms. multi-arm designs, plannedEvents refers overall number events selected arms plus control.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_plannedSubjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Planned Subjects — param_plannedSubjects","title":"Parameter Description: Planned Subjects — param_plannedSubjects","text":"Parameter Description: Planned Subjects","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_plannedSubjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Planned Subjects — param_plannedSubjects","text":"plannedSubjects plannedSubjects numeric vector length kMax (number stages design) determines number cumulated (overall) subjects interim stages planned. two treatment arms, number subjects treatment arms. multi-arm designs, plannedSubjects refers number subjects per selected active arm.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_plotPointsEnabled.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Plot Points Enabled — param_plotPointsEnabled","title":"Parameter Description: Plot Points Enabled — param_plotPointsEnabled","text":"Parameter Description: Plot Points Enabled","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_plotPointsEnabled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Plot Points Enabled — param_plotPointsEnabled","text":"plotPointsEnabled Logical. TRUE, additional points plotted.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_plotSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Plot Settings — param_plotSettings","title":"Parameter Description: Plot Settings — param_plotSettings","text":"Parameter Description: Plot Settings","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_plotSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Plot Settings — param_plotSettings","text":"plotSettings object class PlotSettings created getPlotSettings().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_populations.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Populations — param_populations","title":"Parameter Description: Populations — param_populations","text":"Parameter Description: Populations","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_populations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Populations — param_populations","text":"populations number populations two-sample comparison, default 3.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_rValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: R Value — param_rValue","title":"Parameter Description: R Value — param_rValue","text":"Parameter Description: R Value","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_rValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: R Value — param_rValue","text":"rValue typeOfSelection = \"rbest\" (select rValue best treatment arms / populations), parameter rValue specified.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_seed.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Seed — param_seed","title":"Parameter Description: Seed — param_seed","text":"Parameter Description: Seed","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_seed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Seed — param_seed","text":"seed seed reproduce simulation, default random seed.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_selectArmsFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Select Arms Function — param_selectArmsFunction","title":"Parameter Description: Select Arms Function — param_selectArmsFunction","text":"Parameter Description: Select Arms Function","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_selectArmsFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Select Arms Function — param_selectArmsFunction","text":"selectArmsFunction Optionally, function can entered defines way treatment arms selected. function allowed depend effectVector length activeArms, stage, conditionalPower, conditionalCriticalValue, plannedSubjects/plannedEvents, allocationRatioPlanned, selectedArms, thetaH1 (means survival), stDevH1 (means), overallEffects, rates additionally: piTreatmentsH1, piControlH1, overallRates, overallRatesControl (see examples).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_selectPopulationsFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Select Populations Function — param_selectPopulationsFunction","title":"Parameter Description: Select Populations Function — param_selectPopulationsFunction","text":"Parameter Description: Select Populations Function","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_selectPopulationsFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Select Populations Function — param_selectPopulationsFunction","text":"selectPopulationsFunction Optionally, function can entered defines way populations selected. function allowed depend effectVector length populations stage, conditionalPower, conditionalCriticalValue, plannedSubjects/plannedEvents, allocationRatioPlanned, selectedPopulations, thetaH1 (means survival), stDevH1 (means), overallEffects, rates additionally: piTreatmentsH1, piControlH1, overallRates, overallRatesControl (see examples).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_showSource.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Show Source — param_showSource","title":"Parameter Description: Show Source — param_showSource","text":"Parameter Description: Show Source","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_showSource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Show Source — param_showSource","text":"showSource Logical. TRUE, parameter names object printed used create plot; may , e.g., useful check values create plots base R plot function. Alternatively showSource can defined one following character values: \"commands\": returns character vector plot commands \"axes\": returns list axes definitions \"test\": plot commands validated eval(parse()) returned character vector (function stop error occurs) \"validate\": plot commands validated eval(parse()) returned character vector (function stops error occurs) Note: plot object returned showSource character.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_showStatistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Show Statistics — param_showStatistics","title":"Parameter Description: Show Statistics — param_showStatistics","text":"Parameter Description: Show Statistics","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_showStatistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Show Statistics — param_showStatistics","text":"showStatistics Logical. TRUE, summary statistics simulated data displayed print command, otherwise output suppressed, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_sided.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Sided — param_sided","title":"Parameter Description: Sided — param_sided","text":"Parameter Description: Sided","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_sided.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Sided — param_sided","text":"sided alternative one-sided (1) two-sided (2), default 1. Must positive integer length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_slope.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Slope — param_slope","title":"Parameter Description: Slope — param_slope","text":"Parameter Description: Slope","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_slope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Slope — param_slope","text":"slope typeOfShape = \"sigmoidEmax\" selected, slope can entered specify slope sigmoid Emax model, default 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_stDev.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Standard Deviation — param_stDev","title":"Parameter Description: Standard Deviation — param_stDev","text":"Parameter Description: Standard Deviation","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_stDev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Standard Deviation — param_stDev","text":"stDev standard deviation sample size power calculation performed, default 1. two-armed trials, allowed specify standard deviations separately, .e., vector two elements. meanRatio = TRUE specified, stDev defines coefficient variation sigma / mu2.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_stDevH1.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Standard Deviation Under Alternative — param_stDevH1","title":"Parameter Description: Standard Deviation Under Alternative — param_stDevH1","text":"Parameter Description: Standard Deviation Alternative","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_stDevH1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Standard Deviation Under Alternative — param_stDevH1","text":"stDevH1 specified, value standard deviation conditional power sample size recalculation calculation performed, default value stDev.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_stDevSimulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Standard Deviation for Simulation — param_stDevSimulation","title":"Parameter Description: Standard Deviation for Simulation — param_stDevSimulation","text":"Parameter Description: Standard Deviation Simulation","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_stDevSimulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Standard Deviation for Simulation — param_stDevSimulation","text":"stDev standard deviation data simulated, default 1. two-armed trials, allowed specify standard deviations separately, .e., vector two elements. meanRatio = TRUE specified, stDev defines coefficient variation sigma / mu2.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Stage — param_stage","title":"Parameter Description: Stage — param_stage","text":"Parameter Description: Stage","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Stage — param_stage","text":"stage stage number (optional). Default: total number existing stages data input.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_stageResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Stage Results — param_stageResults","title":"Parameter Description: Stage Results — param_stageResults","text":"Parameter Description: Stage Results","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_stageResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Stage Results — param_stageResults","text":"stageResults results given stage, obtained getStageResults().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_stratifiedAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Stratified Analysis — param_stratifiedAnalysis","title":"Parameter Description: Stratified Analysis — param_stratifiedAnalysis","text":"Parameter Description: Stratified Analysis","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_stratifiedAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Stratified Analysis — param_stratifiedAnalysis","text":"stratifiedAnalysis Logical. enrichment designs, typically stratified analysis chosen. testing rates, also non-stratified analysis based overall data can performed. survival data, stratified analysis possible (see Brannath et al., 2009), default TRUE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_successCriterion.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Success Criterion — param_successCriterion","title":"Parameter Description: Success Criterion — param_successCriterion","text":"Parameter Description: Success Criterion","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_successCriterion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Success Criterion — param_successCriterion","text":"successCriterion Defines study stopped efficacy interim. Two options available: \"\" stops trial efficacy criterion fulfilled selected treatment arms/populations, \"atLeastOne\" stops least one selected treatment arms/populations shown superior control interim, default \"\".","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_theta.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Theta — param_theta","title":"Parameter Description: Theta — param_theta","text":"Parameter Description: Theta","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_theta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Theta — param_theta","text":"theta vector standardized effect sizes (theta values), default sequence -1 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_thetaH0.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Theta H0 — param_thetaH0","title":"Parameter Description: Theta H0 — param_thetaH0","text":"Parameter Description: Theta H0","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_thetaH0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Theta H0 — param_thetaH0","text":"thetaH0 null hypothesis value, default 0 normal binary case (testing means rates, respectively), 1 survival case (testing hazard ratio). non-inferiority designs, thetaH0 non-inferiority bound. , case (one-sided) testing means: value != 0 (value != 1 testing mean ratio) can specified. rates: value != 0 (value != 1 testing risk ratio pi1 / pi2) can specified. survival data: bound testing H0: hazard ratio = thetaH0 != 1 can specified. count data: bound testing H0: lambda1 / lambda2 = thetaH0 != 1 can specified. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_thetaH1.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Effect Under Alternative — param_thetaH1","title":"Parameter Description: Effect Under Alternative — param_thetaH1","text":"Parameter Description: Effect Alternative","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_thetaH1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Effect Under Alternative — param_thetaH1","text":"thetaH1 specified, value alternative conditional power sample size recalculation calculation performed. Must numeric length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_theta_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: theta for Counts — param_theta_counts","title":"Parameter Description: theta for Counts — param_theta_counts","text":"Parameter Description: theta Counts","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_theta_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: theta for Counts — param_theta_counts","text":"theta numeric value vector represents assumed mean ratios lambda1/lambda2 homogeneous Poisson process, default.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_three_dots.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: ","title":"Parameter Description: ","text":"Parameter Description: \"...\"","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_three_dots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: ","text":"... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_three_dots_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: ","title":"Parameter Description: ","text":"Parameter Description: \"...\" (optional plot arguments)","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_three_dots_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: ","text":"... Optional plot arguments. moment xlim ylim implemented changing x y axis limits without dropping data observations.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Threshold — param_threshold","title":"Parameter Description: Threshold — param_threshold","text":"Parameter Description: Threshold","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Threshold — param_threshold","text":"threshold Selection criterion: treatment arm / population selected effectMeasure exceeds threshold, default -Inf. threshold can also vector length activeArms referring separate threshold condition treatment arms.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_tolerance.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Tolerance — param_tolerance","title":"Parameter Description: Tolerance — param_tolerance","text":"Parameter Description: Tolerance","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_tolerance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Tolerance — param_tolerance","text":"tolerance numerical tolerance, default 1e-06. Must positive numeric length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_typeOfComputation.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Type Of Computation — param_typeOfComputation","title":"Parameter Description: Type Of Computation — param_typeOfComputation","text":"Parameter Description: Type Computation","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_typeOfComputation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Type Of Computation — param_typeOfComputation","text":"typeOfComputation Three options available: \"Schoenfeld\", \"Freedman\", \"HsiehFreedman\", default \"Schoenfeld\". details, see Hsieh (Statistics Medicine, 1992). non-inferiority testing (.e., thetaH0 != 1), Schoenfeld's formula can used.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_typeOfDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Type of Design — param_typeOfDesign","title":"Parameter Description: Type of Design — param_typeOfDesign","text":"Parameter Description: Type Design","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_typeOfDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Type of Design — param_typeOfDesign","text":"typeOfDesign type design. Type design one following: O'Brien & Fleming (\"\"), Pocock (\"P\"), Wang & Tsiatis Delta class (\"WT\"), Pampallona & Tsiatis (\"PT\"), Haybittle & Peto (\"HP\"), Optimum design within Wang & Tsiatis class (\"WToptimum\"), O'Brien & Fleming type alpha spending (\"asOF\"), Pocock type alpha spending (\"asP\"), Kim & DeMets alpha spending (\"asKD\"), Hwang, Shi & DeCani alpha spending (\"asHSD\"), user defined alpha spending (\"asUser\"), early efficacy stop (\"noEarlyEfficacy\"), default \"\".","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_typeOfSelection.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Type of Selection — param_typeOfSelection","title":"Parameter Description: Type of Selection — param_typeOfSelection","text":"Parameter Description: Type Selection","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_typeOfSelection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Type of Selection — param_typeOfSelection","text":"typeOfSelection way treatment arms populations selected interim. Five options available: \"best\", \"rbest\", \"epsilon\", \"\", \"userDefined\", default \"best\". \"rbest\" (select rValue best treatment arms/populations), parameter rValue specified, \"epsilon\" (select treatment arm/population worse epsilon compared best), parameter epsilonValue specified. \"userDefined\" selected, \"selectArmsFunction\" \"selectPopulationsFunction\" specified.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_typeOfShapeMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Type Of Shape — param_typeOfShapeMeans","title":"Parameter Description: Type Of Shape — param_typeOfShapeMeans","text":"Parameter Description: Type Shape","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_typeOfShapeMeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Type Of Shape — param_typeOfShapeMeans","text":"typeOfShape shape dose-response relationship treatment groups. can either \"linear\", \"sigmoidEmax\", \"userDefined\", default \"linear\". \"linear\", muMaxVector specifies range effect sizes treatment group highest response. \"sigmoidEmax\" selected, gED50 slope entered specify ED50 slope sigmoid Emax model. \"sigmoidEmax\", muMaxVector specifies range effect sizes treatment group response according infinite dose. \"userDefined\" selected, effectMatrix entered.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_typeOfShapeRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Type Of Shape — param_typeOfShapeRates","title":"Parameter Description: Type Of Shape — param_typeOfShapeRates","text":"Parameter Description: Type Shape","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_typeOfShapeRates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Type Of Shape — param_typeOfShapeRates","text":"typeOfShape shape dose-response relationship treatment groups. can either \"linear\", \"sigmoidEmax\", \"userDefined\", default \"linear\". \"linear\", piMaxVector specifies range effect sizes treatment group highest response. \"sigmoidEmax\" selected, gED50 slope entered specify ED50 slope sigmoid Emax model. \"sigmoidEmax\", piMaxVector specifies range effect sizes treatment group response according infinite dose. \"userDefined\" selected, effectMatrix entered.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_typeOfShapeSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Type Of Shape — param_typeOfShapeSurvival","title":"Parameter Description: Type Of Shape — param_typeOfShapeSurvival","text":"Parameter Description: Type Shape","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_typeOfShapeSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Type Of Shape — param_typeOfShapeSurvival","text":"typeOfShape shape dose-response relationship treatment groups. can either \"linear\", \"sigmoidEmax\", \"userDefined\", default \"linear\". \"linear\", omegaMaxVector specifies range effect sizes treatment group highest response. \"sigmoidEmax\" selected, gED50 slope entered specify ED50 slope sigmoid Emax model. \"sigmoidEmax\", omegaMaxVector specifies range effect sizes treatment group response according infinite dose. \"userDefined\" selected, effectMatrix entered.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_userAlphaSpending.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: User Alpha Spending — param_userAlphaSpending","title":"Parameter Description: User Alpha Spending — param_userAlphaSpending","text":"Parameter Description: User Alpha Spending","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_userAlphaSpending.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: User Alpha Spending — param_userAlphaSpending","text":"userAlphaSpending user defined alpha spending. Numeric vector length kMax containing cumulative alpha-spending (Type error rate) interim stage: 0 <= alpha_1 <= ... <= alpha_K <= alpha.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_varianceOption.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Description: Variance Option — param_varianceOption","title":"Parameter Description: Variance Option — param_varianceOption","text":"Parameter Description: Variance Option","code":""},{"path":"https://rpact-com.github.io/rpact/reference/param_varianceOption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Description: Variance Option — param_varianceOption","text":"varianceOption Defines way calculate variance multiple treatment arms (> 2) population enrichment designs testing means. multiple arms, three options available: \"overallPooled\", \"pairwisePooled\", \"notPooled\", default \"overallPooled\". enrichment designs, options : \"pooled\", \"pooledFromFull\" (one subset ), \"notPooled\", default \"pooled\".","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.AnalysisResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis Results Plotting — plot.AnalysisResults","title":"Analysis Results Plotting — plot.AnalysisResults","text":"Plots conditional power together likelihood function.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.AnalysisResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis Results Plotting — plot.AnalysisResults","text":"","code":"# S3 method for class 'AnalysisResults' plot(   x,   y,   ...,   type = 1L,   nPlanned = NA_real_,   allocationRatioPlanned = NA_real_,   main = NA_character_,   xlab = NA_character_,   ylab = NA_character_,   legendTitle = NA_character_,   palette = \"Set1\",   legendPosition = NA_integer_,   showSource = FALSE,   grid = 1,   plotSettings = NULL )"},{"path":"https://rpact-com.github.io/rpact/reference/plot.AnalysisResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis Results Plotting — plot.AnalysisResults","text":"x analysis results given stage, obtained getAnalysisResults(). y available kind plot (defined compatible generic plot function). ... Optional plot arguments. Furthermore following arguments can defined: thetaRange: range assumed effect sizes testing means survival design specified. Additionally, testing means selected, assumedStDev (assumed standard deviation) can specified (default 1). piTreatmentRange: range assumed rates pi1 calculate conditional power. Additionally, two-sample comparison selected, pi2 can specified (default value getAnalysisResults()). directionUpper: Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. thetaH0: null hypothesis value, default 0 normal binary case, 1 survival case. testing rate one sample, value thetaH0 (0, 1) specified defining null hypothesis H0: pi = thetaH0. type plot type (default = 1). Note moment one type (conditional power plot) available. nPlanned additional (.e., \"new\" cumulative) sample size planned subsequent stages. argument must vector length equal number remaining stages contain combined sample size treatment groups two groups considered. survival outcomes, contain planned number additional events. multi-arm designs, per-comparison (combined) sample size. enrichment designs, (combined) sample size considered sub-population. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar. main main title, default \"Dataset\". xlab x-axis label, default \"Stage\". ylab y-axis label. legendTitle legend title, default \"\". palette palette, default \"Set1\". legendPosition position legend. default (NA_integer_) algorithm tries find suitable position. Choose one following values specify position manually: -1: legend shown NA: algorithm tries find suitable position 0: legend position outside plot 1: legend position left top 2: legend position left center 3: legend position left bottom 4: legend position right top 5: legend position right center 6: legend position right bottom showSource Logical. TRUE, parameter names object printed used create plot; may , e.g., useful check values create plots base R plot function. Alternatively showSource can defined one following character values: \"commands\": returns character vector plot commands \"axes\": returns list axes definitions \"test\": plot commands validated eval(parse()) returned character vector (function stop error occurs) \"validate\": plot commands validated eval(parse()) returned character vector (function stops error occurs) Note: plot object returned showSource character. grid integer value specifying output multiple plots. default (1) list ggplot objects returned. grid value > 1 specified, grid plot returned number plots <= specified grid value; list ggplot objects returned otherwise. grid = 0 specified, plots created using print command list ggplot objects returned invisible. Note one following packages must installed create grid plot: 'ggpubr', 'gridExtra', 'cowplot'. plotSettings object class PlotSettings created getPlotSettings().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.AnalysisResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analysis Results Plotting — plot.AnalysisResults","text":"Returns ggplot2 object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.AnalysisResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis Results Plotting — plot.AnalysisResults","text":"conditional power calculated effect size sample size specified.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.AnalysisResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analysis Results Plotting — plot.AnalysisResults","text":"","code":"if (FALSE) { # \\dontrun{ design <- getDesignGroupSequential(kMax = 2)  dataExample <- getDataset(     n = c(20, 30),     means = c(50, 51),     stDevs = c(130, 140) )  result <- getAnalysisResults(design = design,      dataInput = dataExample, thetaH0 = 20,      nPlanned = c(30), thetaH1 = 1.5, stage = 1)   if (require(ggplot2)) plot(result, thetaRange = c(0, 100)) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/plot.Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset Plotting — plot.Dataset","title":"Dataset Plotting — plot.Dataset","text":"Plots dataset.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset Plotting — plot.Dataset","text":"","code":"# S3 method for class 'Dataset' plot(   x,   y,   ...,   main = \"Dataset\",   xlab = \"Stage\",   ylab = NA_character_,   legendTitle = \"Group\",   palette = \"Set1\",   showSource = FALSE,   plotSettings = NULL )"},{"path":"https://rpact-com.github.io/rpact/reference/plot.Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset Plotting — plot.Dataset","text":"x Dataset object plot. y available kind plot (defined compatible generic plot function). ... Optional plot arguments. moment xlim ylim implemented changing x y axis limits without dropping data observations. main main title, default \"Dataset\". xlab x-axis label, default \"Stage\". ylab y-axis label. legendTitle legend title, default \"Group\". palette palette, default \"Set1\". showSource Logical. TRUE, parameter names object printed used create plot; may , e.g., useful check values create plots base R plot function. Alternatively showSource can defined one following character values: \"commands\": returns character vector plot commands \"axes\": returns list axes definitions \"test\": plot commands validated eval(parse()) returned character vector (function stop error occurs) \"validate\": plot commands validated eval(parse()) returned character vector (function stops error occurs) Note: plot object returned showSource character. plotSettings object class PlotSettings created getPlotSettings().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.Dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dataset Plotting — plot.Dataset","text":"Returns ggplot2 object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.Dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dataset Plotting — plot.Dataset","text":"Generic function plot kinds datasets.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.Dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset Plotting — plot.Dataset","text":"","code":"if (FALSE) { # \\dontrun{ # Plot a dataset of means dataExample <- getDataset(     n1 = c(22, 11, 22, 11),     n2 = c(22, 13, 22, 13),     means1 = c(1, 1.1, 1, 1),     means2 = c(1.4, 1.5, 3, 2.5),     stDevs1 = c(1, 2, 2, 1.3),     stDevs2 = c(1, 2, 2, 1.3) ) if (require(ggplot2)) plot(dataExample, main = \"Comparison of Means\")  # Plot a dataset of rates dataExample <- getDataset(     n1 = c(8, 10, 9, 11),     n2 = c(11, 13, 12, 13),     events1 = c(3, 5, 5, 6),     events2 = c(8, 10, 12, 12) ) if (require(ggplot2)) plot(dataExample, main = \"Comparison of Rates\") } # }"},{"path":"https://rpact-com.github.io/rpact/reference/plot.EventProbabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Probabilities Plotting — plot.EventProbabilities","title":"Event Probabilities Plotting — plot.EventProbabilities","text":"Plots object inherits class EventProbabilities.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.EventProbabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Probabilities Plotting — plot.EventProbabilities","text":"","code":"# S3 method for class 'EventProbabilities' plot(   x,   y,   ...,   allocationRatioPlanned = x$allocationRatioPlanned,   main = NA_character_,   xlab = NA_character_,   ylab = NA_character_,   type = 1L,   legendTitle = NA_character_,   palette = \"Set1\",   plotPointsEnabled = NA,   legendPosition = NA_integer_,   showSource = FALSE,   plotSettings = NULL )"},{"path":"https://rpact-com.github.io/rpact/reference/plot.EventProbabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Probabilities Plotting — plot.EventProbabilities","text":"x object inherits EventProbabilities. y optional object inherits NumberOfSubjects. ... Optional plot arguments. moment xlim ylim implemented changing x y axis limits without dropping data observations. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar. main main title. xlab x-axis label. ylab y-axis label. type plot type (default = 1). Note moment one type available. legendTitle legend title, default \"\". palette palette, default \"Set1\". plotPointsEnabled Logical. TRUE, additional points plotted. legendPosition position legend. default (NA_integer_) algorithm tries find suitable position. Choose one following values specify position manually: -1: legend shown NA: algorithm tries find suitable position 0: legend position outside plot 1: legend position left top 2: legend position left center 3: legend position left bottom 4: legend position right top 5: legend position right center 6: legend position right bottom showSource Logical. TRUE, parameter names object printed used create plot; may , e.g., useful check values create plots base R plot function. Alternatively showSource can defined one following character values: \"commands\": returns character vector plot commands \"axes\": returns list axes definitions \"test\": plot commands validated eval(parse()) returned character vector (function stop error occurs) \"validate\": plot commands validated eval(parse()) returned character vector (function stops error occurs) Note: plot object returned showSource character. plotSettings object class PlotSettings created getPlotSettings().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.EventProbabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Event Probabilities Plotting — plot.EventProbabilities","text":"Returns ggplot2 object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.EventProbabilities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Event Probabilities Plotting — plot.EventProbabilities","text":"Generic function plot event probabilities object. Generic function plot event probabilities object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.NumberOfSubjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Number Of Subjects Plotting — plot.NumberOfSubjects","title":"Number Of Subjects Plotting — plot.NumberOfSubjects","text":"Plots object inherits class NumberOfSubjects.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.NumberOfSubjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number Of Subjects Plotting — plot.NumberOfSubjects","text":"","code":"# S3 method for class 'NumberOfSubjects' plot(   x,   y,   ...,   allocationRatioPlanned = NA_real_,   main = NA_character_,   xlab = NA_character_,   ylab = NA_character_,   type = 1L,   legendTitle = NA_character_,   palette = \"Set1\",   plotPointsEnabled = NA,   legendPosition = NA_integer_,   showSource = FALSE,   plotSettings = NULL )"},{"path":"https://rpact-com.github.io/rpact/reference/plot.NumberOfSubjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number Of Subjects Plotting — plot.NumberOfSubjects","text":"x object inherits NumberOfSubjects. y optional object inherits EventProbabilities. ... Optional plot arguments. moment xlim ylim implemented changing x y axis limits without dropping data observations. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. ignored y undefined. main main title. xlab x-axis label. ylab y-axis label. type plot type (default = 1). Note moment one type available. legendTitle legend title, default \"\". palette palette, default \"Set1\". plotPointsEnabled Logical. TRUE, additional points plotted. legendPosition position legend. default (NA_integer_) algorithm tries find suitable position. Choose one following values specify position manually: -1: legend shown NA: algorithm tries find suitable position 0: legend position outside plot 1: legend position left top 2: legend position left center 3: legend position left bottom 4: legend position right top 5: legend position right center 6: legend position right bottom showSource Logical. TRUE, parameter names object printed used create plot; may , e.g., useful check values create plots base R plot function. Alternatively showSource can defined one following character values: \"commands\": returns character vector plot commands \"axes\": returns list axes definitions \"test\": plot commands validated eval(parse()) returned character vector (function stop error occurs) \"validate\": plot commands validated eval(parse()) returned character vector (function stops error occurs) Note: plot object returned showSource character. plotSettings object class PlotSettings created getPlotSettings().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.NumberOfSubjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number Of Subjects Plotting — plot.NumberOfSubjects","text":"Returns ggplot2 object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.NumberOfSubjects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number Of Subjects Plotting — plot.NumberOfSubjects","text":"Generic function plot \"number subjects\" object. Generic function plot \"number subjects\" object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.ParameterSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Set Plotting — plot.ParameterSet","title":"Parameter Set Plotting — plot.ParameterSet","text":"Plots object inherits class ParameterSet.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.ParameterSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Set Plotting — plot.ParameterSet","text":"","code":"# S3 method for class 'ParameterSet' plot(   x,   y,   ...,   main = NA_character_,   xlab = NA_character_,   ylab = NA_character_,   type = 1L,   palette = \"Set1\",   legendPosition = NA_integer_,   showSource = FALSE,   plotSettings = NULL )"},{"path":"https://rpact-com.github.io/rpact/reference/plot.ParameterSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Set Plotting — plot.ParameterSet","text":"x object inherits ParameterSet. y available kind plot (defined compatible generic plot function). ... Optional plot arguments. moment xlim ylim implemented changing x y axis limits without dropping data observations. main main title. xlab x-axis label. ylab y-axis label. type plot type (default = 1). palette palette, default \"Set1\". legendPosition position legend. default (NA_integer_) algorithm tries find suitable position. Choose one following values specify position manually: -1: legend shown NA: algorithm tries find suitable position 0: legend position outside plot 1: legend position left top 2: legend position left center 3: legend position left bottom 4: legend position right top 5: legend position right center 6: legend position right bottom showSource Logical. TRUE, parameter names object printed used create plot; may , e.g., useful check values create plots base R plot function. Alternatively showSource can defined one following character values: \"commands\": returns character vector plot commands \"axes\": returns list axes definitions \"test\": plot commands validated eval(parse()) returned character vector (function stop error occurs) \"validate\": plot commands validated eval(parse()) returned character vector (function stops error occurs) Note: plot object returned showSource character. plotSettings object class PlotSettings created getPlotSettings().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.ParameterSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Set Plotting — plot.ParameterSet","text":"Returns ggplot2 object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.ParameterSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter Set Plotting — plot.ParameterSet","text":"Generic function plot parameter set.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.SimulationResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation Results Plotting — plot.SimulationResults","title":"Simulation Results Plotting — plot.SimulationResults","text":"Plots simulation results.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.SimulationResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation Results Plotting — plot.SimulationResults","text":"","code":"# S3 method for class 'SimulationResults' plot(   x,   y,   ...,   main = NA_character_,   xlab = NA_character_,   ylab = NA_character_,   type = NA_integer_,   palette = \"Set1\",   theta = seq(-1, 1, 0.01),   plotPointsEnabled = NA,   legendPosition = NA_integer_,   showSource = FALSE,   grid = 1,   plotSettings = NULL )"},{"path":"https://rpact-com.github.io/rpact/reference/plot.SimulationResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation Results Plotting — plot.SimulationResults","text":"x simulation results, obtained getSimulationSurvival(). y available kind plot (defined compatible generic plot function). ... Optional plot arguments. moment xlim ylim implemented changing x y axis limits without dropping data observations. main main title. xlab x-axis label. ylab y-axis label. type plot type (default = 1). following plot types available: 1: creates 'Overall Success' plot (multi-arm enrichment ) 2: creates 'Success per Stage' plot (multi-arm enrichment  ) 3: creates 'Selected Arms per Stage' plot (multi-arm enrichment  ) 4: creates 'Reject per Stage' 'Rejected Arms per Stage' plot 5: creates 'Overall Power Early Stopping' plot 6: creates 'Expected Number Subjects Power / Early Stop' 'Expected Number Events Power / Early Stop' plot 7: creates 'Overall Power' plot 8: creates 'Overall Early Stopping' plot 9: creates 'Expected Sample Size' 'Expected Number Events' plot 10: creates 'Study Duration' plot (non-multi-arm non-enrichment survival ) 11: creates 'Expected Number Subjects' plot (non-multi-arm non-enrichment survival ) 12: creates 'Analysis Times' plot (non-multi-arm non-enrichment survival ) 13: creates 'Cumulative Distribution Function' plot (non-multi-arm non-enrichment survival ) 14: creates 'Survival Function' plot (non-multi-arm non-enrichment survival ) \"\": creates available plots returns grid plot list palette palette, default \"Set1\". theta vector standardized effect sizes (theta values), default sequence -1 1. plotPointsEnabled Logical. TRUE, additional points plotted. legendPosition position legend. default (NA_integer_) algorithm tries find suitable position. Choose one following values specify position manually: -1: legend shown NA: algorithm tries find suitable position 0: legend position outside plot 1: legend position left top 2: legend position left center 3: legend position left bottom 4: legend position right top 5: legend position right center 6: legend position right bottom showSource Logical. TRUE, parameter names object printed used create plot; may , e.g., useful check values create plots base R plot function. Alternatively showSource can defined one following character values: \"commands\": returns character vector plot commands \"axes\": returns list axes definitions \"test\": plot commands validated eval(parse()) returned character vector (function stop error occurs) \"validate\": plot commands validated eval(parse()) returned character vector (function stops error occurs) Note: plot object returned showSource character. grid integer value specifying output multiple plots. default (1) list ggplot objects returned. grid value > 1 specified, grid plot returned number plots <= specified grid value; list ggplot objects returned otherwise. grid = 0 specified, plots created using print command list ggplot objects returned invisible. Note one following packages must installed create grid plot: 'ggpubr', 'gridExtra', 'cowplot'. plotSettings object class PlotSettings created getPlotSettings().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.SimulationResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation Results Plotting — plot.SimulationResults","text":"Returns ggplot2 object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.SimulationResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulation Results Plotting — plot.SimulationResults","text":"Generic function plot kinds simulation results.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.SimulationResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulation Results Plotting — plot.SimulationResults","text":"","code":"if (FALSE) { # \\dontrun{ results <- getSimulationMeans(     alternative = 0:4, stDev = 5,     plannedSubjects = 40, maxNumberOfIterations = 1000 ) plot(results, type = 5) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/plot.StageResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Stage Results Plotting — plot.StageResults","title":"Stage Results Plotting — plot.StageResults","text":"Plots conditional power together likelihood function.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.StageResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stage Results Plotting — plot.StageResults","text":"","code":"# S3 method for class 'StageResults' plot(   x,   y,   ...,   type = 1L,   nPlanned,   allocationRatioPlanned = 1,   main = NA_character_,   xlab = NA_character_,   ylab = NA_character_,   legendTitle = NA_character_,   palette = \"Set1\",   legendPosition = NA_integer_,   showSource = FALSE,   plotSettings = NULL )"},{"path":"https://rpact-com.github.io/rpact/reference/plot.StageResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stage Results Plotting — plot.StageResults","text":"x stage results given stage, obtained getStageResults() getAnalysisResults(). y available kind plot (defined compatible generic plot function). ... Optional plot arguments. Furthermore following arguments can defined: thetaRange: range assumed effect sizes testing means survival design specified. Additionally, testing means selected, assumed standard deviation can specified (default 1). piTreatmentRange: range assumed rates pi1 calculate conditional power. Additionally, two-sample comparison selected, pi2 can specified (default value getAnalysisResults()). directionUpper: Specifies direction alternative, applicable one-sided testing; default TRUE means larger values test statistics yield smaller p-values. thetaH0: null hypothesis value, default 0 normal binary case, 1 survival case. testing rate one sample, value thetaH0 (0,1) specified defining null hypothesis H0: pi = thetaH0. type plot type (default = 1). Note moment one type (conditional power plot) available. nPlanned additional (.e., \"new\" cumulative) sample size planned subsequent stages. argument must vector length equal number remaining stages contain combined sample size treatment groups two groups considered. survival outcomes, contain planned number additional events. multi-arm designs, per-comparison (combined) sample size. enrichment designs, (combined) sample size considered sub-population. allocationRatioPlanned planned allocation ratio n1 / n2 two treatment groups design, default 1. multi-arm designs, allocation ratio relating active arm(s) control. simulating means rates two treatment groups design, can vector length kMax, number stages. can vector length kMax, , multi-arm enrichment designs. cases, change allocating subjects treatment groups stages can assessed. Note internally allocationRatioPlanned treated vector length kMax, scalar. main main title. xlab x-axis label. ylab y-axis label. legendTitle legend title. palette palette, default \"Set1\". legendPosition position legend. default (NA_integer_) algorithm tries find suitable position. Choose one following values specify position manually: -1: legend shown NA: algorithm tries find suitable position 0: legend position outside plot 1: legend position left top 2: legend position left center 3: legend position left bottom 4: legend position right top 5: legend position right center 6: legend position right bottom showSource Logical. TRUE, parameter names object printed used create plot; may , e.g., useful check values create plots base R plot function. Alternatively showSource can defined one following character values: \"commands\": returns character vector plot commands \"axes\": returns list axes definitions \"test\": plot commands validated eval(parse()) returned character vector (function stop error occurs) \"validate\": plot commands validated eval(parse()) returned character vector (function stops error occurs) Note: plot object returned showSource character. plotSettings object class PlotSettings created getPlotSettings().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.StageResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stage Results Plotting — plot.StageResults","text":"Returns ggplot2 object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.StageResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stage Results Plotting — plot.StageResults","text":"Generic function plot kinds stage results. conditional power calculated effect size sample size specified.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.StageResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stage Results Plotting — plot.StageResults","text":"","code":"if (FALSE) { # \\dontrun{ design <- getDesignGroupSequential(     kMax = 4, alpha = 0.025,     informationRates = c(0.2, 0.5, 0.8, 1),     typeOfDesign = \"WT\", deltaWT = 0.25 ) dataExample <- getDataset(     n = c(20, 30, 30),     means = c(50, 51, 55),     stDevs = c(130, 140, 120) ) stageResults <- getStageResults(design, dataExample, thetaH0 = 20) if (require(ggplot2)) plot(stageResults, nPlanned = c(30), thetaRange = c(0, 100)) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/plot.SummaryFactory.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Factory Plotting — plot.SummaryFactory","title":"Summary Factory Plotting — plot.SummaryFactory","text":"Plots summary factory.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.SummaryFactory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Factory Plotting — plot.SummaryFactory","text":"","code":"# S3 method for class 'SummaryFactory' plot(x, y, ..., showSummary = FALSE)"},{"path":"https://rpact-com.github.io/rpact/reference/plot.SummaryFactory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Factory Plotting — plot.SummaryFactory","text":"x summary factory object. y available kind plot (defined compatible generic plot function). ... Optional plot arguments. moment xlim ylim implemented changing x y axis limits without dropping data observations. showSummary Show summary creating plot output, default FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.SummaryFactory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Factory Plotting — plot.SummaryFactory","text":"Returns ggplot2 object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.SummaryFactory.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary Factory Plotting — plot.SummaryFactory","text":"Generic function plot kinds summary factories.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial Design Plotting — plot.TrialDesign","title":"Trial Design Plotting — plot.TrialDesign","text":"Plots trial design.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial Design Plotting — plot.TrialDesign","text":"","code":"# S3 method for class 'TrialDesign' plot(   x,   y,   ...,   main = NA_character_,   xlab = NA_character_,   ylab = NA_character_,   type = 1L,   palette = \"Set1\",   theta = seq(-1, 1, 0.01),   nMax = NA_integer_,   plotPointsEnabled = NA,   legendPosition = NA_integer_,   showSource = FALSE,   grid = 1,   plotSettings = NULL )  # S3 method for class 'TrialDesignCharacteristics' plot(x, y, ..., type = 1L, grid = 1)"},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trial Design Plotting — plot.TrialDesign","text":"x trial design, obtained getDesignGroupSequential(), getDesignInverseNormal() getDesignFisher(). y available kind plot (defined compatible generic plot function). ... Optional plot arguments. moment xlim ylim implemented changing x y axis limits without dropping data observations. main main title. xlab x-axis label. ylab y-axis label. type plot type (default = 1). following plot types available: 1: creates 'Boundaries' plot 3: creates 'Stage Levels' plot 4: creates 'Error Spending' plot 5: creates 'Power Early Stopping' plot 6: creates 'Average Sample Size Power / Early Stop' plot 7: creates 'Power' plot 8: creates 'Early Stopping' plot 9: creates 'Average Sample Size' plot \"\": creates available plots returns grid plot list palette palette, default \"Set1\". theta vector standardized effect sizes (theta values), default sequence -1 1. nMax maximum sample size. Must positive integer length 1. plotPointsEnabled Logical. TRUE, additional points plotted. legendPosition position legend. default (NA_integer_) algorithm tries find suitable position. Choose one following values specify position manually: -1: legend shown NA: algorithm tries find suitable position 0: legend position outside plot 1: legend position left top 2: legend position left center 3: legend position left bottom 4: legend position right top 5: legend position right center 6: legend position right bottom showSource Logical. TRUE, parameter names object printed used create plot; may , e.g., useful check values create plots base R plot function. Alternatively showSource can defined one following character values: \"commands\": returns character vector plot commands \"axes\": returns list axes definitions \"test\": plot commands validated eval(parse()) returned character vector (function stop error occurs) \"validate\": plot commands validated eval(parse()) returned character vector (function stops error occurs) Note: plot object returned showSource character. grid integer value specifying output multiple plots. default (1) list ggplot objects returned. grid value > 1 specified, grid plot returned number plots <= specified grid value; list ggplot objects returned otherwise. grid = 0 specified, plots created using print command list ggplot objects returned invisible. Note one following packages must installed create grid plot: 'ggpubr', 'gridExtra', 'cowplot'. plotSettings object class PlotSettings created getPlotSettings().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trial Design Plotting — plot.TrialDesign","text":"Returns ggplot2 object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trial Design Plotting — plot.TrialDesign","text":"Generic function plot trial design. Generic function plot trial design. Note nMax argument passed ggplot2. Rather, underlying calculations (e.g. power different theta's average sample size) based calls function getPowerAndAverageSampleNumber() argument nMax. .e., nMax argument ggplot2 getPowerAndAverageSampleNumber() called prior plotting.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trial Design Plotting — plot.TrialDesign","text":"","code":"if (FALSE) { # \\dontrun{ design <- getDesignInverseNormal(     kMax = 3, alpha = 0.025,     typeOfDesign = \"asKD\", gammaA = 2,     informationRates = c(0.2, 0.7, 1),     typeBetaSpending = \"bsOF\" ) if (require(ggplot2)) {     plot(design) # default: type = 1 } } # }"},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesignPlan.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial Design Plan Plotting — plot.TrialDesignPlan","title":"Trial Design Plan Plotting — plot.TrialDesignPlan","text":"Plots trial design plan.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesignPlan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial Design Plan Plotting — plot.TrialDesignPlan","text":"","code":"# S3 method for class 'TrialDesignPlan' plot(   x,   y,   ...,   main = NA_character_,   xlab = NA_character_,   ylab = NA_character_,   type = NA_integer_,   palette = \"Set1\",   theta = NA_real_,   plotPointsEnabled = NA,   legendPosition = NA_integer_,   showSource = FALSE,   grid = 1,   plotSettings = NULL )"},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesignPlan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trial Design Plan Plotting — plot.TrialDesignPlan","text":"x trial design plan, obtained getSampleSizeMeans(), getSampleSizeRates(), getSampleSizeSurvival(), getSampleSizeCounts(), getPowerMeans(), getPowerRates() getPowerSurvival() getPowerCounts(). y available kind plot (defined compatible generic plot function). ... Optional plot arguments. moment xlim ylim implemented changing x y axis limits without dropping data observations. main main title. xlab x-axis label. ylab y-axis label. type plot type (default = 1). following plot types available: 1: creates 'Boundaries' plot 2: creates 'Boundaries Effect Scale' plot 3: creates 'Boundaries p Values Scale' plot 4: creates 'Error Spending' plot 5: creates 'Sample Size' 'Overall Power Early Stopping' plot 6: creates 'Number Events' 'Sample Size' plot 7: creates 'Overall Power' plot 8: creates 'Overall Early Stopping' plot 9: creates 'Expected Number Events' 'Expected Sample Size' plot 10: creates 'Study Duration' plot 11: creates 'Expected Number Subjects' plot 12: creates 'Analysis Times' plot 13: creates 'Cumulative Distribution Function' plot 14: creates 'Survival Function' plot \"\": creates available plots returns grid plot list palette palette, default \"Set1\". theta vector standardized effect sizes (theta values), default sequence -1 1. plotPointsEnabled Logical. TRUE, additional points plotted. legendPosition position legend. default (NA_integer_) algorithm tries find suitable position. Choose one following values specify position manually: -1: legend shown NA: algorithm tries find suitable position 0: legend position outside plot 1: legend position left top 2: legend position left center 3: legend position left bottom 4: legend position right top 5: legend position right center 6: legend position right bottom showSource Logical. TRUE, parameter names object printed used create plot; may , e.g., useful check values create plots base R plot function. Alternatively showSource can defined one following character values: \"commands\": returns character vector plot commands \"axes\": returns list axes definitions \"test\": plot commands validated eval(parse()) returned character vector (function stop error occurs) \"validate\": plot commands validated eval(parse()) returned character vector (function stops error occurs) Note: plot object returned showSource character. grid integer value specifying output multiple plots. default (1) list ggplot objects returned. grid value > 1 specified, grid plot returned number plots <= specified grid value; list ggplot objects returned otherwise. grid = 0 specified, plots created using print command list ggplot objects returned invisible. Note one following packages must installed create grid plot: 'ggpubr', 'gridExtra', 'cowplot'. plotSettings object class PlotSettings created getPlotSettings().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesignPlan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trial Design Plan Plotting — plot.TrialDesignPlan","text":"Returns ggplot2 object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesignPlan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trial Design Plan Plotting — plot.TrialDesignPlan","text":"Generic function plot kinds trial design plans.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesignPlan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trial Design Plan Plotting — plot.TrialDesignPlan","text":"","code":"if (FALSE) { # \\dontrun{ if (require(ggplot2)) plot(getSampleSizeMeans()) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesignSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial Design Set Plotting — plot.TrialDesignSet","title":"Trial Design Set Plotting — plot.TrialDesignSet","text":"Plots trial design set.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesignSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial Design Set Plotting — plot.TrialDesignSet","text":"","code":"# S3 method for class 'TrialDesignSet' plot(   x,   y,   ...,   type = 1L,   main = NA_character_,   xlab = NA_character_,   ylab = NA_character_,   palette = \"Set1\",   theta = seq(-1, 1, 0.02),   nMax = NA_integer_,   plotPointsEnabled = NA,   legendPosition = NA_integer_,   showSource = FALSE,   grid = 1,   plotSettings = NULL )"},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesignSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trial Design Set Plotting — plot.TrialDesignSet","text":"x trial design set, obtained getDesignSet(). y available kind plot (defined compatible generic plot function). ... Optional plot arguments. moment xlim ylim implemented changing x y axis limits without dropping data observations. type plot type (default = 1). following plot types available: 1: creates 'Boundaries' plot 3: creates 'Stage Levels' plot 4: creates 'Error Spending' plot 5: creates 'Power Early Stopping' plot 6: creates 'Average Sample Size Power / Early Stop' plot 7: creates 'Power' plot 8: creates 'Early Stopping' plot 9: creates 'Average Sample Size' plot \"\": creates available plots returns grid plot list main main title. xlab x-axis label. ylab y-axis label. palette palette, default \"Set1\". theta vector standardized effect sizes (theta values), default sequence -1 1. nMax maximum sample size. Must positive integer length 1. plotPointsEnabled Logical. TRUE, additional points plotted. legendPosition position legend. default (NA_integer_) algorithm tries find suitable position. Choose one following values specify position manually: -1: legend shown NA: algorithm tries find suitable position 0: legend position outside plot 1: legend position left top 2: legend position left center 3: legend position left bottom 4: legend position right top 5: legend position right center 6: legend position right bottom showSource Logical. TRUE, parameter names object printed used create plot; may , e.g., useful check values create plots base R plot function. Alternatively showSource can defined one following character values: \"commands\": returns character vector plot commands \"axes\": returns list axes definitions \"test\": plot commands validated eval(parse()) returned character vector (function stop error occurs) \"validate\": plot commands validated eval(parse()) returned character vector (function stops error occurs) Note: plot object returned showSource character. grid integer value specifying output multiple plots. default (1) list ggplot objects returned. grid value > 1 specified, grid plot returned number plots <= specified grid value; list ggplot objects returned otherwise. grid = 0 specified, plots created using print command list ggplot objects returned invisible. Note one following packages must installed create grid plot: 'ggpubr', 'gridExtra', 'cowplot'. plotSettings object class PlotSettings created getPlotSettings().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesignSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trial Design Set Plotting — plot.TrialDesignSet","text":"Returns ggplot2 object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesignSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trial Design Set Plotting — plot.TrialDesignSet","text":"Generic function plot trial design set. , e.g., useful compare different designs design parameters visual.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesignSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trial Design Set Plotting — plot.TrialDesignSet","text":"","code":"if (FALSE) { # \\dontrun{ design <- getDesignInverseNormal(     kMax = 3, alpha = 0.025,     typeOfDesign = \"asKD\", gammaA = 2,     informationRates = c(0.2, 0.7, 1), typeBetaSpending = \"bsOF\" )  # Create a set of designs based on the master design defined above # and varied parameter 'gammaA' designSet <- getDesignSet(design = design, gammaA = 4)  if (require(ggplot2)) plot(designSet, type = 1, legendPosition = 6) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesignSummaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Trial Design Summaries — plot.TrialDesignSummaries","title":"Plot Trial Design Summaries — plot.TrialDesignSummaries","text":"Generic function plot TrialDesignSummaries object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesignSummaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Trial Design Summaries — plot.TrialDesignSummaries","text":"","code":"# S3 method for class 'TrialDesignSummaries' plot(x, ..., type = 1L, grid = 1)"},{"path":"https://rpact-com.github.io/rpact/reference/plot.TrialDesignSummaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Trial Design Summaries — plot.TrialDesignSummaries","text":"x TrialDesignSummaries object plot. ... arguments passed methods. type plot type (default = 1). following plot types available: 1: creates 'Boundaries' plot 3: creates 'Stage Levels' plot 4: creates 'Error Spending' plot 5: creates 'Power Early Stopping' plot 6: creates 'Average Sample Size Power / Early Stop' plot 7: creates 'Power' plot 8: creates 'Early Stopping' plot 9: creates 'Average Sample Size' plot \"\": creates available plots returns grid plot list grid integer value specifying output multiple plots. default (1) list ggplot objects returned. grid value > 1 specified, grid plot returned number plots <= specified grid value; list ggplot objects returned otherwise. grid = 0 specified, plots created using print command list ggplot objects returned invisible. Note one following packages must installed create grid plot: 'ggpubr', 'gridExtra', 'cowplot'.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Dataset Values — print.Dataset","title":"Print Dataset Values — print.Dataset","text":"print prints Dataset argument returns invisibly (via invisible(x)).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Dataset Values — print.Dataset","text":"","code":"# S3 method for class 'Dataset' print(   x,   ...,   markdown = NA,   output = c(\"list\", \"long\", \"wide\", \"r\", \"rComplete\") )"},{"path":"https://rpact-com.github.io/rpact/reference/print.Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Dataset Values — print.Dataset","text":"x Dataset object. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. markdown TRUE, output created Markdown. output character defining output type, default \"list\".","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.Dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Dataset Values — print.Dataset","text":"Prints dataset.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.FieldSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Field Set Values — print.FieldSet","title":"Print Field Set Values — print.FieldSet","text":"print prints FieldSet argument returns invisibly (via invisible(x)).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.FieldSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Field Set Values — print.FieldSet","text":"","code":"# S3 method for class 'FieldSet' print(x, ..., markdown = NA)"},{"path":"https://rpact-com.github.io/rpact/reference/print.FieldSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Field Set Values — print.FieldSet","text":"x FieldSet object print. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. markdown TRUE, object x printed using markdown syntax; normal representation used otherwise (default FALSE)","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.FieldSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Field Set Values — print.FieldSet","text":"Prints parameters results field set.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.ParameterSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Parameter Set Values — print.ParameterSet","title":"Print Parameter Set Values — print.ParameterSet","text":"print prints ParameterSet argument returns invisibly (via invisible(x)).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.ParameterSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Parameter Set Values — print.ParameterSet","text":"","code":"# S3 method for class 'ParameterSet' print(x, ..., markdown = NA)"},{"path":"https://rpact-com.github.io/rpact/reference/print.ParameterSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Parameter Set Values — print.ParameterSet","text":"x ParameterSet object print. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. markdown TRUE, object x printed using markdown syntax; normal representation used otherwise (default FALSE)","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.ParameterSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Parameter Set Values — print.ParameterSet","text":"Prints parameters results parameter set.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.SummaryFactory.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Factory Printing — print.SummaryFactory","title":"Summary Factory Printing — print.SummaryFactory","text":"Prints result object stored inside summary factory.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.SummaryFactory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Factory Printing — print.SummaryFactory","text":"","code":"# S3 method for class 'SummaryFactory' print(x, ..., markdown = NA, sep = NA_character_)"},{"path":"https://rpact-com.github.io/rpact/reference/print.SummaryFactory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Factory Printing — print.SummaryFactory","text":"x summary factory object. ... Optional plot arguments. moment xlim ylim implemented changing x y axis limits without dropping data observations. markdown TRUE, object x printed using markdown syntax; normal representation used otherwise (default FALSE) sep separator line summary print output, default \"\\n\\n-----\\n\\n\".","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.SummaryFactory.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary Factory Printing — print.SummaryFactory","text":"Generic function print kinds summary factories.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.TrialDesignCharacteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial Design Characteristics Printing — print.TrialDesignCharacteristics","title":"Trial Design Characteristics Printing — print.TrialDesignCharacteristics","text":"Prints design characteristics object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.TrialDesignCharacteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial Design Characteristics Printing — print.TrialDesignCharacteristics","text":"","code":"# S3 method for class 'TrialDesignCharacteristics' print(x, ..., markdown = NA, showDesign = TRUE)"},{"path":"https://rpact-com.github.io/rpact/reference/print.TrialDesignCharacteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trial Design Characteristics Printing — print.TrialDesignCharacteristics","text":"x trial design characteristics object. ... Optional plot arguments. moment xlim ylim implemented changing x y axis limits without dropping data observations. markdown TRUE, object x printed using markdown syntax; normal representation used otherwise (default FALSE) showDesign Show design print output design characteristics, default TRUE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.TrialDesignCharacteristics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trial Design Characteristics Printing — print.TrialDesignCharacteristics","text":"Generic function print kinds design characteristics.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.TrialDesignSummaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Trial Design Summaries — print.TrialDesignSummaries","title":"Print Trial Design Summaries — print.TrialDesignSummaries","text":"Generic function print TrialDesignSummaries object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/print.TrialDesignSummaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Trial Design Summaries — print.TrialDesignSummaries","text":"","code":"# S3 method for class 'TrialDesignSummaries' print(x, ...)"},{"path":"https://rpact-com.github.io/rpact/reference/print.TrialDesignSummaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Trial Design Summaries — print.TrialDesignSummaries","text":"x TrialDesignSummaries object print. ... arguments passed methods.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/printCitation.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Citation — printCitation","title":"Print Citation — printCitation","text":"cite rpact R publications.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/printCitation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Citation — printCitation","text":"","code":"printCitation(inclusiveR = TRUE, language = \"en\", markdown = NA)"},{"path":"https://rpact-com.github.io/rpact/reference/printCitation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Citation — printCitation","text":"inclusiveR TRUE (default) information cite base R system publications added. language Language code use output, default \"en\". markdown TRUE, output created Markdown.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/printCitation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Citation — printCitation","text":"function shows cite rpact R (inclusiveR = TRUE) publications.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/printCitation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Citation — printCitation","text":"","code":"printCitation() #>  #> To cite R in publications use: #>  #>   R Core Team (2025). _R: A Language and Environment for Statistical #>   Computing_. R Foundation for Statistical Computing, Vienna, Austria. #>   <https://www.R-project.org/>. #>  #> To cite package ‘rpact’ in publications use: #>  #>   Wassmer G, Pahlke F (2025). _rpact: Confirmatory Adaptive Clinical #>   Trial Design and Analysis_. doi:10.32614/CRAN.package.rpact #>   <https://doi.org/10.32614/CRAN.package.rpact>, R package version #>   4.2.0, <https://cran.r-project.org/package=rpact>."},{"path":"https://rpact-com.github.io/rpact/reference/rawDataTwoArmNormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw Dataset Of A Two Arm Continuous Outcome With Covariates — rawDataTwoArmNormal","title":"Raw Dataset Of A Two Arm Continuous Outcome With Covariates — rawDataTwoArmNormal","text":"artificial dataset randomly generated simulated normal data. data set six variables: Subject id Stage number Group name example outcome interested first covariate gender second covariate covariate","code":""},{"path":"https://rpact-com.github.io/rpact/reference/rawDataTwoArmNormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw Dataset Of A Two Arm Continuous Outcome With Covariates — rawDataTwoArmNormal","text":"","code":"rawDataTwoArmNormal"},{"path":"https://rpact-com.github.io/rpact/reference/rawDataTwoArmNormal.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Raw Dataset Of A Two Arm Continuous Outcome With Covariates — rawDataTwoArmNormal","text":"data.frame object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/rawDataTwoArmNormal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Raw Dataset Of A Two Arm Continuous Outcome With Covariates — rawDataTwoArmNormal","text":"See vignette \"Two-arm analysis continuous data covariates raw data\" learn import raw data csv file, calculate estimated adjusted (marginal) means (EMMs, least-squares means) linear model, perform two-arm interim analyses data. can use rawDataTwoArmNormal reproduce examples vignette.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/readDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Dataset — readDataset","title":"Read Dataset — readDataset","text":"Reads data file returns dataset object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/readDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Dataset — readDataset","text":"","code":"readDataset(   file,   ...,   header = TRUE,   sep = \",\",   quote = \"\\\"\",   dec = \".\",   fill = TRUE,   comment.char = \"\",   fileEncoding = \"UTF-8\" )"},{"path":"https://rpact-com.github.io/rpact/reference/readDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Dataset — readDataset","text":"file CSV file (see read.table). ... arguments passed read.table. header logical value indicating whether file contains names variables first line. sep field separator character. Values line file separated character. sep = \",\" (default readDataset) separator comma. quote set quoting characters. disable quoting altogether, use quote = \"\". See scan behavior quotes embedded quotes. Quoting considered columns read character, unless colClasses specified. dec character used file decimal points. fill logical. TRUE case rows unequal length, blank fields implicitly added. comment.char character: character vector length one containing single character empty string. Use \"\" turn interpretation comments altogether. fileEncoding character string: non-empty declares encoding used file (connection) character data can re-encoded. See 'Encoding' section help file, 'R Data Import/Export Manual' 'Note'.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/readDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Dataset — readDataset","text":"Returns Dataset object. following generics (R generic functions) available result object: names() obtain field names, print() print object, summary() display summary object, plot() plot object, .data.frame() coerce object data.frame, .matrix() coerce object matrix.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/readDataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Dataset — readDataset","text":"readDataset wrapper function uses read.table read CSV file data frame, transfers long wide format reshape puts data getDataset().","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/readDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Dataset — readDataset","text":"","code":"if (FALSE) { # \\dontrun{ dataFileRates <- system.file(\"extdata\",     \"dataset_rates.csv\",     package = \"rpact\" ) if (dataFileRates != \"\") {     datasetRates <- readDataset(dataFileRates)     datasetRates }  dataFileMeansMultiArm <- system.file(\"extdata\",     \"dataset_means_multi-arm.csv\",     package = \"rpact\" ) if (dataFileMeansMultiArm != \"\") {     datasetMeansMultiArm <- readDataset(dataFileMeansMultiArm)     datasetMeansMultiArm }  dataFileRatesMultiArm <- system.file(\"extdata\",     \"dataset_rates_multi-arm.csv\",     package = \"rpact\" ) if (dataFileRatesMultiArm != \"\") {     datasetRatesMultiArm <- readDataset(dataFileRatesMultiArm)     datasetRatesMultiArm }  dataFileSurvivalMultiArm <- system.file(\"extdata\",     \"dataset_survival_multi-arm.csv\",     package = \"rpact\" ) if (dataFileSurvivalMultiArm != \"\") {     datasetSurvivalMultiArm <- readDataset(dataFileSurvivalMultiArm)     datasetSurvivalMultiArm } } # }"},{"path":"https://rpact-com.github.io/rpact/reference/readDatasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Multiple Datasets — readDatasets","title":"Read Multiple Datasets — readDatasets","text":"Reads data file returns list dataset objects.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/readDatasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Multiple Datasets — readDatasets","text":"","code":"readDatasets(   file,   ...,   header = TRUE,   sep = \",\",   quote = \"\\\"\",   dec = \".\",   fill = TRUE,   comment.char = \"\",   fileEncoding = \"UTF-8\" )"},{"path":"https://rpact-com.github.io/rpact/reference/readDatasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Multiple Datasets — readDatasets","text":"file CSV file (see read.table). ... arguments passed read.table. header logical value indicating whether file contains names variables first line. sep field separator character. Values line file separated character. sep = \",\" (default readDatasets) separator comma. quote set quoting characters. disable quoting altogether, use quote = \"\". See scan behavior quotes embedded quotes. Quoting considered columns read character, unless colClasses specified. dec character used file decimal points. fill logical. TRUE case rows unequal length, blank fields implicitly added. comment.char character: character vector length one containing single character empty string. Use \"\" turn interpretation comments altogether. fileEncoding character string: non-empty declares encoding used file (connection) character data can re-encoded. See 'Encoding' section help file, 'R Data Import/Export Manual' 'Note'.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/readDatasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Multiple Datasets — readDatasets","text":"Returns list Dataset objects.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/readDatasets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Multiple Datasets — readDatasets","text":"Reads file written writeDatasets() .","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/readDatasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Multiple Datasets — readDatasets","text":"","code":"if (FALSE) { # \\dontrun{ dataFile <- system.file(\"extdata\", \"datasets_rates.csv\", package = \"rpact\") if (dataFile != \"\") {     datasets <- readDatasets(dataFile)     datasets } } # }"},{"path":"https://rpact-com.github.io/rpact/reference/resetLogLevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset Log Level — resetLogLevel","title":"Reset Log Level — resetLogLevel","text":"Resets rpact log level.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/resetLogLevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset Log Level — resetLogLevel","text":"","code":"resetLogLevel()"},{"path":"https://rpact-com.github.io/rpact/reference/resetLogLevel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reset Log Level — resetLogLevel","text":"function resets log level rpact internal log message system default value \"PROGRESS\".","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/resetLogLevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset Log Level — resetLogLevel","text":"","code":"if (FALSE) { # \\dontrun{ # reset log level to default value resetLogLevel() } # }"},{"path":"https://rpact-com.github.io/rpact/reference/resetOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset Options — resetOptions","title":"Reset Options — resetOptions","text":"Resets rpact options default values.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/resetOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset Options — resetOptions","text":"","code":"resetOptions(persist = TRUE)"},{"path":"https://rpact-com.github.io/rpact/reference/resetOptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset Options — resetOptions","text":"persist logical value indicating whether reset options saved persistently. TRUE, options saved resetting. Default TRUE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/resetOptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset Options — resetOptions","text":"Returns TRUE options successfully reset, FALSE otherwise.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/resetOptions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reset Options — resetOptions","text":"function resets rpact options default values. persist parameter set TRUE, reset options saved configuration file.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/resetOptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset Options — resetOptions","text":"","code":"if (FALSE) { # \\dontrun{ resetOptions() resetOptions(persist = FALSE) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/rpact.html","id":null,"dir":"Reference","previous_headings":"","what":"rpact - Confirmatory Adaptive Clinical Trial Design and Analysis — rpact","title":"rpact - Confirmatory Adaptive Clinical Trial Design and Analysis — rpact","text":"rpact (R Package Adaptive Clinical Trials) comprehensive package enables design, simulation, analysis confirmatory adaptive group sequential designs. Particularly, methods described recent monograph Wassmer Brannath (published Springer, 2016) implemented. also comprises advanced methods sample size calculations fixed sample size designs incl., e.g., sample size calculation survival trials piecewise exponentially distributed survival times staggered patients entry.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/rpact.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rpact - Confirmatory Adaptive Clinical Trial Design and Analysis — rpact","text":"rpact includes classical group sequential designs (incl. user spending function approaches) sample sizes per stage (time points interim analysis) changed data-driven way. Confirmatory adaptive designs explicitly allow control Type error rate. either based combination testing conditional rejection probability (CRP) principle. available, former inverse normal combination test Fisher's combination test can used. Specific techniques adaptive methodology also available, e.g., overall confidence intervals, overall p-values, conditional predictive power assessments. Simulations can performed assess design characteristics (user-defined) sample size recalculation strategy. Designs available trials continuous, binary, survival endpoint. information please visit www.rpact.org. interested professional services round package need comprehensive validation documentation fulfill regulatory requirements please visit www.rpact.com. rpact developed Gernot Wassmer (gernot.wassmer@rpact.com) Friedrich Pahlke (friedrich.pahlke@rpact.com).","code":""},{"path":"https://rpact-com.github.io/rpact/reference/rpact.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rpact - Confirmatory Adaptive Clinical Trial Design and Analysis — rpact","text":"Wassmer, G., Brannath, W. (2016) Group Sequential Confirmatory Adaptive Designs Clinical Trials (Springer Series Pharmaceutical Statistics; doi:10.1007/978-3-319-32562-0 )","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/rpact.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rpact - Confirmatory Adaptive Clinical Trial Design and Analysis — rpact","text":"Gernot Wassmer, Friedrich Pahlke","code":""},{"path":"https://rpact-com.github.io/rpact/reference/saveOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Options — saveOptions","title":"Save Options — saveOptions","text":"Saves current rpact options configuration file.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/saveOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Options — saveOptions","text":"","code":"saveOptions()"},{"path":"https://rpact-com.github.io/rpact/reference/saveOptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Options — saveOptions","text":"Returns TRUE options successfully saved, FALSE otherwise.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/saveOptions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Options — saveOptions","text":"function attempts save current rpact options configuration file located user's configuration directory. rappdirs package installed, function perform action. options saved YAML file.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/saveOptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Options — saveOptions","text":"","code":"if (FALSE) { # \\dontrun{ saveOptions() } # }"},{"path":"https://rpact-com.github.io/rpact/reference/setLogLevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Log Level — setLogLevel","title":"Set Log Level — setLogLevel","text":"Sets rpact log level.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/setLogLevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Log Level — setLogLevel","text":"","code":"setLogLevel(   logLevel = c(\"PROGRESS\", \"ERROR\", \"WARN\", \"INFO\", \"DEBUG\", \"TRACE\", \"DISABLED\") )"},{"path":"https://rpact-com.github.io/rpact/reference/setLogLevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Log Level — setLogLevel","text":"logLevel new log level set. Can one \"PROGRESS\", \"ERROR\", \"WARN\", \"INFO\", \"DEBUG\", \"TRACE\", \"DISABLED\". Default \"PROGRESS\".","code":""},{"path":"https://rpact-com.github.io/rpact/reference/setLogLevel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Log Level — setLogLevel","text":"function sets log level rpact internal log message system. default calculation progress messages shown output console, particularly getAnalysisResults() shows kind messages. output messages can disabled setting log level \"DISABLED\".","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/setLogLevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Log Level — setLogLevel","text":"","code":"if (FALSE) { # \\dontrun{ # show debug messages setLogLevel(\"DEBUG\")  # disable all log messages setLogLevel(\"DISABLED\") } # }"},{"path":"https://rpact-com.github.io/rpact/reference/setOutputFormat.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Output Format — setOutputFormat","title":"Set Output Format — setOutputFormat","text":"function format standard outputs rpact objects can changed set user defined respectively.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/setOutputFormat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Output Format — setOutputFormat","text":"","code":"setOutputFormat(   parameterName = NA_character_,   ...,   digits = NA_integer_,   nsmall = NA_integer_,   trimSingleZeros = NA,   futilityProbabilityEnabled = NA,   file = NA_character_,   resetToDefault = FALSE,   roundFunction = NA_character_,   persist = TRUE )"},{"path":"https://rpact-com.github.io/rpact/reference/setOutputFormat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Output Format — setOutputFormat","text":"parameterName name parameter whose output format shall edited. Leave default NA_character_ output format parameters shall edited. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. digits many significant digits used numeric value. default, NULL, uses getOption(\"digits\"). Allowed values 0 <= digits <= 20. nsmall minimum number digits right decimal point formatting real numbers non-scientific formats. Allowed values 0 <= nsmall <= 20. trimSingleZeros TRUE zero values trimmed output, e.g., \"0.00\" displayed \"0\" futilityProbabilityEnabled TRUE small value (< 1e-09) displayed \"0\", default FALSE. file optional file name existing text file contains output format definitions (see Details information). resetToDefault TRUE output formats reset default value. Note settings executed afterwards specified, default FALSE. roundFunction character value specifies R base round function use, default NA_character_. Allowed values \"ceiling\", \"floor\", \"trunc\", \"round\", \"signif\", NA_character_. persist logical value indicating whether output format settings saved persistently. Default TRUE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/setOutputFormat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Output Format — setOutputFormat","text":"Output formats can written text file (see getOutputFormat()). load personal output formats read formerly saved file beginning work rpact, e.g. execute setOutputFormat(file = \"my_rpact_output_formats.txt\"). Note parameterName must match exactly, e.g., p-values following parameter names recognized amongst others: p value p.values p-value pValue rpact.output.format.p.value","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/setOutputFormat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Output Format — setOutputFormat","text":"","code":"if (FALSE) { # \\dontrun{ # show output format of p values getOutputFormat(\"p.value\")  # set new p value output format setOutputFormat(\"p.value\", digits = 5, nsmall = 5)  # show sample sizes as smallest integers not less than the not rounded values setOutputFormat(\"sample size\", digits = 0, nsmall = 0, roundFunction = \"ceiling\") getSampleSizeMeans()  # show sample sizes as smallest integers not greater than the not rounded values setOutputFormat(\"sample size\", digits = 0, nsmall = 0, roundFunction = \"floor\") getSampleSizeMeans()  # set new sample size output format without round function setOutputFormat(\"sample size\", digits = 2, nsmall = 2) getSampleSizeMeans()  # reset sample size output format to default setOutputFormat(\"sample size\") getSampleSizeMeans() getOutputFormat(\"sample size\") } # }"},{"path":"https://rpact-com.github.io/rpact/reference/setupPackageTests.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup Package Tests — setupPackageTests","title":"Setup Package Tests — setupPackageTests","text":"function sets package tests downloading test files copying rpact installation directory.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/setupPackageTests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup Package Tests — setupPackageTests","text":"","code":"setupPackageTests(token, secret)"},{"path":"https://rpact-com.github.io/rpact/reference/setupPackageTests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup Package Tests — setupPackageTests","text":"token character string representing token authentication. secret character string representing secret authentication.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/setupPackageTests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup Package Tests — setupPackageTests","text":"function returns TRUE test files downloaded copied successfully rpact installation directory; otherwise, returns FALSE.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/setupPackageTests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Setup Package Tests — setupPackageTests","text":"function first checks rpact package directory tests testthat subdirectories exist. exist, stops error. downloads test files temporary directory copies tests directory rpact package. test files copied successfully, removes default test file.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/setupPackageTests.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Setup Package Tests — setupPackageTests","text":"information, please visit: https://www.rpact.org/vignettes/utilities/rpact_installation_qualification/","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.AnalysisResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis Results Summary — summary.AnalysisResults","title":"Analysis Results Summary — summary.AnalysisResults","text":"Displays summary AnalysisResults object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.AnalysisResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis Results Summary — summary.AnalysisResults","text":"","code":"# S3 method for class 'AnalysisResults' summary(object, ..., type = 1, digits = NA_integer_)"},{"path":"https://rpact-com.github.io/rpact/reference/summary.AnalysisResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis Results Summary — summary.AnalysisResults","text":"object AnalysisResults object. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. digits Defines many digits used numeric values. Must positive integer length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.AnalysisResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analysis Results Summary — summary.AnalysisResults","text":"Returns SummaryFactory object. following generics (R generic functions) available result object: names() obtain field names, print() print object","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.AnalysisResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis Results Summary — summary.AnalysisResults","text":"Summarizes parameters results analysis results object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.AnalysisResults.html","id":"summary-options","dir":"Reference","previous_headings":"","what":"Summary options","title":"Analysis Results Summary — summary.AnalysisResults","text":"following options can set globally: rpact.summary.output.size: one c(\"small\", \"medium\", \"large\"); defines many details included summary; default \"large\", .e., available details displayed. rpact.summary.justify: one c(\"right\", \"left\", \"centre\"); shall values right-justified (default), left-justified centered. rpact.summary.width: defines maximum number characters used per line (default 83). rpact.summary.intervalFormat: defines intervals displayed summary, default \"[%s; %s]\". rpact.summary.digits: defines many digits used numeric values (default 3). rpact.summary.digits.probs: defines many digits used numeric values (default one value rpact.summary.digits, .e., 4). rpact.summary.trim.zeroes: TRUE (default) zeroes always displayed \"0\", e.g. \"0.000\" become \"0\". Example: options(\"rpact.summary.intervalFormat\" = \"%s - %s\")","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.AnalysisResults.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Analysis Results Summary — summary.AnalysisResults","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset Summary — summary.Dataset","title":"Dataset Summary — summary.Dataset","text":"Displays summary Dataset object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset Summary — summary.Dataset","text":"","code":"# S3 method for class 'Dataset' summary(object, ..., type = 1, digits = NA_integer_)"},{"path":"https://rpact-com.github.io/rpact/reference/summary.Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset Summary — summary.Dataset","text":"object Dataset object. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. digits Defines many digits used numeric values. Must positive integer length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.Dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dataset Summary — summary.Dataset","text":"Returns SummaryFactory object. following generics (R generic functions) available result object: names() obtain field names, print() print object","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.Dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dataset Summary — summary.Dataset","text":"Summarizes parameters results dataset.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.Dataset.html","id":"summary-options","dir":"Reference","previous_headings":"","what":"Summary options","title":"Dataset Summary — summary.Dataset","text":"following options can set globally: rpact.summary.output.size: one c(\"small\", \"medium\", \"large\"); defines many details included summary; default \"large\", .e., available details displayed. rpact.summary.justify: one c(\"right\", \"left\", \"centre\"); shall values right-justified (default), left-justified centered. rpact.summary.width: defines maximum number characters used per line (default 83). rpact.summary.intervalFormat: defines intervals displayed summary, default \"[%s; %s]\". rpact.summary.digits: defines many digits used numeric values (default 3). rpact.summary.digits.probs: defines many digits used numeric values (default one value rpact.summary.digits, .e., 4). rpact.summary.trim.zeroes: TRUE (default) zeroes always displayed \"0\", e.g. \"0.000\" become \"0\". Example: options(\"rpact.summary.intervalFormat\" = \"%s - %s\")","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.Dataset.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Dataset Summary — summary.Dataset","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.ParameterSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Set Summary — summary.ParameterSet","title":"Parameter Set Summary — summary.ParameterSet","text":"Displays summary ParameterSet object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.ParameterSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Set Summary — summary.ParameterSet","text":"","code":"# S3 method for class 'ParameterSet' summary(   object,   ...,   type = 1,   digits = NA_integer_,   output = c(\"all\", \"title\", \"overview\", \"body\"),   printObject = FALSE,   sep = NA_character_ )"},{"path":"https://rpact-com.github.io/rpact/reference/summary.ParameterSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Set Summary — summary.ParameterSet","text":"object ParameterSet object. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. digits Defines many digits used numeric values. Must positive integer length 1. output output parts, default \"\". printObject Show also print output summary, default FALSE. sep separator line summary optional print output, default \"\\n\\n-----\\n\\n\".","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.ParameterSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Set Summary — summary.ParameterSet","text":"Returns SummaryFactory object. following generics (R generic functions) available result object: names() obtain field names, print() print object","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.ParameterSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter Set Summary — summary.ParameterSet","text":"Summarizes parameters results parameter set.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.ParameterSet.html","id":"summary-options","dir":"Reference","previous_headings":"","what":"Summary options","title":"Parameter Set Summary — summary.ParameterSet","text":"following options can set globally: rpact.summary.output.size: one c(\"small\", \"medium\", \"large\"); defines many details included summary; default \"large\", .e., available details displayed. rpact.summary.justify: one c(\"right\", \"left\", \"centre\"); shall values right-justified (default), left-justified centered. rpact.summary.width: defines maximum number characters used per line (default 83). rpact.summary.intervalFormat: defines intervals displayed summary, default \"[%s; %s]\". rpact.summary.digits: defines many digits used numeric values (default 3). rpact.summary.digits.probs: defines many digits used numeric values (default one value rpact.summary.digits, .e., 4). rpact.summary.trim.zeroes: TRUE (default) zeroes always displayed \"0\", e.g. \"0.000\" become \"0\". Example: options(\"rpact.summary.intervalFormat\" = \"%s - %s\")","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.ParameterSet.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Parameter Set Summary — summary.ParameterSet","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.TrialDesignSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial Design Set Summary — summary.TrialDesignSet","title":"Trial Design Set Summary — summary.TrialDesignSet","text":"Displays summary ParameterSet object.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.TrialDesignSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial Design Set Summary — summary.TrialDesignSet","text":"","code":"# S3 method for class 'TrialDesignSet' summary(object, ..., type = 1, digits = NA_integer_)"},{"path":"https://rpact-com.github.io/rpact/reference/summary.TrialDesignSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trial Design Set Summary — summary.TrialDesignSet","text":"object ParameterSet object. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. digits Defines many digits used numeric values. Must positive integer length 1.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.TrialDesignSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trial Design Set Summary — summary.TrialDesignSet","text":"Returns SummaryFactory object. following generics (R generic functions) available result object: names() obtain field names, print() print object","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.TrialDesignSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trial Design Set Summary — summary.TrialDesignSet","text":"Summarizes trial designs.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.TrialDesignSet.html","id":"summary-options","dir":"Reference","previous_headings":"","what":"Summary options","title":"Trial Design Set Summary — summary.TrialDesignSet","text":"following options can set globally: rpact.summary.output.size: one c(\"small\", \"medium\", \"large\"); defines many details included summary; default \"large\", .e., available details displayed. rpact.summary.justify: one c(\"right\", \"left\", \"centre\"); shall values right-justified (default), left-justified centered. rpact.summary.width: defines maximum number characters used per line (default 83). rpact.summary.intervalFormat: defines intervals displayed summary, default \"[%s; %s]\". rpact.summary.digits: defines many digits used numeric values (default 3). rpact.summary.digits.probs: defines many digits used numeric values (default one value rpact.summary.digits, .e., 4). rpact.summary.trim.zeroes: TRUE (default) zeroes always displayed \"0\", e.g. \"0.000\" become \"0\". Example: options(\"rpact.summary.intervalFormat\" = \"%s - %s\")","code":""},{"path":"https://rpact-com.github.io/rpact/reference/summary.TrialDesignSet.html","id":"how-to-get-help-for-generic-functions","dir":"Reference","previous_headings":"","what":"How to get help for generic functions","title":"Trial Design Set Summary — summary.TrialDesignSet","text":"Click link generic list go directly help documentation rpact specific implementation generic. Note can use R function methods get methods generic identify object specific name , e.g., use methods(\"plot\") get methods plot generic. can find, e.g., plot.AnalysisResults obtain specific help documentation linked typing ?plot.AnalysisResults.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/testPackage.html","id":null,"dir":"Reference","previous_headings":"","what":"Test and Validate the rpact Package Installation — testPackage","title":"Test and Validate the rpact Package Installation — testPackage","text":"function ensures correct installation rpact package performing various tests. supports comprehensive validation process, essential GxP compliance regulatory requirements.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/testPackage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test and Validate the rpact Package Installation — testPackage","text":"","code":"testPackage(   outDir = \".\",   ...,   completeUnitTestSetEnabled = TRUE,   connection = list(token = NULL, secret = NULL),   testFileDirectory = NA_character_,   downloadTestsOnly = FALSE,   addWarningDetailsToReport = TRUE,   reportType = c(\"compact\", \"detailed\", \"Rout\"),   testInstalledBasicPackages = TRUE,   scope = c(\"basic\", \"devel\", \"both\", \"internet\", \"all\"),   openHtmlReport = TRUE,   keepSourceFiles = FALSE )"},{"path":"https://rpact-com.github.io/rpact/reference/testPackage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test and Validate the rpact Package Installation — testPackage","text":"outDir absolute path output directory test results saved. default, current working directory used. ... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. completeUnitTestSetEnabled TRUE (default), existing unit tests executed; FALSE, subset tests run. connection list allowing owners rpact validation documentation provide token secret credentials full access unit tests, enabling meet regulatory requirements (see www.rpact.com information). testFileDirectory optional path pointing local directory containing test files. downloadTestsOnly TRUE, unit test files downloaded executed. Default FALSE. addWarningDetailsToReport TRUE, additional warning details included test report. Default TRUE. reportType type report generate. Can \"compact\", \"detailed\", \"Rout\". testInstalledBasicPackages TRUE, tests installed basic R packages included, default TRUE. information, see testInstalledBasic. scope scope basic R package tests run. Can \"basic\", \"devel\", \"\", \"internet\", \"\". Default \"basic\". information, see testInstalledBasic. available testInstalledBasicPackages = TRUE. openHtmlReport TRUE, HTML report opened tests completed, default TRUE. keepSourceFiles TRUE, source files kept tests completed. copy can found subdirectory src.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/testPackage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test and Validate the rpact Package Installation — testPackage","text":"Invisibly returns value completeUnitTestSetEnabled.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/testPackage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test and Validate the rpact Package Installation — testPackage","text":"function integral installation qualification (IQ) process rpact package, ensuring meets quality standards functions expected. directory named rpact-tests created within specified output directory, test files downloaded secure resource executed. Results saved file testthat.Rout, located rpact-tests directory. Installation qualification critical step validation process. Without successful IQ, package considered fully validated. gain access full set unit tests, users must provide token secret credentials, distributed members rpact user group part validation documentation. information, see vignette rpact_installation_qualification.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/testPackage.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Test and Validate the rpact Package Installation — testPackage","text":"information, please visit: https://www.rpact.org/vignettes/utilities/rpact_installation_qualification/","code":""},{"path":"https://rpact-com.github.io/rpact/reference/testPackage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test and Validate the rpact Package Installation — testPackage","text":"","code":"if (FALSE) { # \\dontrun{ # Set the output directory setwd(\"/path/to/output\")  # Basic usage testPackage()  # Perform all unit tests with access credentials testPackage(     connection = list(         token = \"your_token_here\",         secret = \"your_secret_here\"     ) )  # Download test files without executing them testPackage(downloadTestsOnly = TRUE) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/test_plan_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Plan Section — test_plan_section","title":"Test Plan Section — test_plan_section","text":"section title description used formal validation documentation. information visit https://www.rpact.com","code":""},{"path":"https://rpact-com.github.io/rpact/reference/test_plan_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Plan Section — test_plan_section","text":"","code":"test_plan_section(section)"},{"path":"https://rpact-com.github.io/rpact/reference/test_plan_section.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Plan Section — test_plan_section","text":"section section title description.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/utilitiesForPiecewiseExponentialDistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"The Piecewise Exponential Distribution — utilitiesForPiecewiseExponentialDistribution","title":"The Piecewise Exponential Distribution — utilitiesForPiecewiseExponentialDistribution","text":"Distribution function, quantile function random number generation piecewise exponential distribution.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/utilitiesForPiecewiseExponentialDistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Piecewise Exponential Distribution — utilitiesForPiecewiseExponentialDistribution","text":"","code":"getPiecewiseExponentialDistribution(   time,   ...,   piecewiseSurvivalTime = NA_real_,   piecewiseLambda = NA_real_,   kappa = 1 )  ppwexp(t, ..., s = NA_real_, lambda = NA_real_, kappa = 1)  getPiecewiseExponentialQuantile(   quantile,   ...,   piecewiseSurvivalTime = NA_real_,   piecewiseLambda = NA_real_,   kappa = 1 )  qpwexp(q, ..., s = NA_real_, lambda = NA_real_, kappa = 1)  getPiecewiseExponentialRandomNumbers(   n,   ...,   piecewiseSurvivalTime = NA_real_,   piecewiseLambda = NA_real_,   kappa = 1 )  rpwexp(n, ..., s = NA_real_, lambda = NA_real_, kappa = 1)"},{"path":"https://rpact-com.github.io/rpact/reference/utilitiesForPiecewiseExponentialDistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Piecewise Exponential Distribution — utilitiesForPiecewiseExponentialDistribution","text":"... Ensures arguments (starting \"...\") named warning displayed unknown arguments passed. kappa numeric value > 0. kappa != 1 used specification shape Weibull distribution. Default 1, .e., exponential survival distribution used instead Weibull distribution. Note Weibull distribution used piecewise definition survival time distribution, .e., piecewiselambda (single value) kappa can specified. function equivalent pweibull(t, shape = kappa, scale = 1 / lambda) stats package, .e., scale parameter 1 / 'hazard rate'. example, getPiecewiseExponentialDistribution(time = 130, piecewiseLambda = 0.01, kappa = 4.2) pweibull(q = 130, shape = 4.2, scale = 1 / 0.01) provide result. t, time Vector time values. s, piecewiseSurvivalTime Vector start times defining \"time pieces\". lambda, piecewiseLambda Vector lambda values (hazard rates) corresponding start times. q, quantile Vector quantiles. n Number observations.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/utilitiesForPiecewiseExponentialDistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Piecewise Exponential Distribution — utilitiesForPiecewiseExponentialDistribution","text":"numeric value vector returned.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/utilitiesForPiecewiseExponentialDistribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Piecewise Exponential Distribution — utilitiesForPiecewiseExponentialDistribution","text":"getPiecewiseExponentialDistribution() (short: ppwexp()), getPiecewiseExponentialQuantile() (short: qpwexp()), getPiecewiseExponentialRandomNumbers() (short: rpwexp()) provide probabilities, quantiles, random numbers according piecewise exponential Weibull distribution. piecewise definition performed vector starting times (piecewiseSurvivalTime) vector hazard rates (piecewiseLambda). can also use list defines starting times piecewise lambdas together define piecewiseSurvivalTime list. list needs form, e.g., piecewiseSurvivalTime <- list( \"0 - <6\"   = 0.025, \"6 - <9\"   = 0.04, \"9 - <15\"  = 0.015, \">=15\"      = 0.007) . Weibull case, can also specify shape parameter kappa order calculate probabilities, quantiles, random numbers. case, piecewise definition possible, .e., piecewiseLambda (single value) kappa need specified.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/utilitiesForPiecewiseExponentialDistribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Piecewise Exponential Distribution — utilitiesForPiecewiseExponentialDistribution","text":"","code":"if (FALSE) { # \\dontrun{ # Calculate probabilties for a range of time values for a # piecewise exponential distribution with hazard rates # 0.025, 0.04, 0.015, and 0.007 in the intervals # [0, 6), [6, 9), [9, 15), [15, Inf), respectively, # and re-return the time values: piecewiseSurvivalTime <- list(     \"0 - <6\"   = 0.025,     \"6 - <9\"   = 0.04,     \"9 - <15\"  = 0.015,     \">=15\"     = 0.01 ) y <- getPiecewiseExponentialDistribution(seq(0, 150, 15),     piecewiseSurvivalTime = piecewiseSurvivalTime ) getPiecewiseExponentialQuantile(y,     piecewiseSurvivalTime = piecewiseSurvivalTime ) } # }"},{"path":"https://rpact-com.github.io/rpact/reference/utilitiesForSurvivalTrials.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Helper Functions for Conversion of Pi, Lambda, Median — utilitiesForSurvivalTrials","title":"Survival Helper Functions for Conversion of Pi, Lambda, Median — utilitiesForSurvivalTrials","text":"Functions convert pi, lambda median values .","code":""},{"path":"https://rpact-com.github.io/rpact/reference/utilitiesForSurvivalTrials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Helper Functions for Conversion of Pi, Lambda, Median — utilitiesForSurvivalTrials","text":"","code":"getLambdaByPi(piValue, eventTime = 12, kappa = 1)  getLambdaByMedian(median, kappa = 1)  getHazardRatioByPi(pi1, pi2, eventTime = 12, kappa = 1)  getPiByLambda(lambda, eventTime = 12, kappa = 1)  getPiByMedian(median, eventTime = 12, kappa = 1)  getMedianByLambda(lambda, kappa = 1)  getMedianByPi(piValue, eventTime = 12, kappa = 1)"},{"path":"https://rpact-com.github.io/rpact/reference/utilitiesForSurvivalTrials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Helper Functions for Conversion of Pi, Lambda, Median — utilitiesForSurvivalTrials","text":"piValue, pi1, pi2, lambda, median Value shall converted. eventTime assumed time event rates calculated, default 12. kappa numeric value > 0. kappa != 1 used specification shape Weibull distribution. Default 1, .e., exponential survival distribution used instead Weibull distribution. Note Weibull distribution used piecewise definition survival time distribution, .e., piecewiselambda (single value) kappa can specified. function equivalent pweibull(t, shape = kappa, scale = 1 / lambda) stats package, .e., scale parameter 1 / 'hazard rate'. example, getPiecewiseExponentialDistribution(time = 130, piecewiseLambda = 0.01, kappa = 4.2) pweibull(q = 130, shape = 4.2, scale = 1 / 0.01) provide result.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/utilitiesForSurvivalTrials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival Helper Functions for Conversion of Pi, Lambda, Median — utilitiesForSurvivalTrials","text":"Returns numeric value vector returned.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/utilitiesForSurvivalTrials.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survival Helper Functions for Conversion of Pi, Lambda, Median — utilitiesForSurvivalTrials","text":"Can used, e.g., convert median values pi lambda values usage getSampleSizeSurvival() getPowerSurvival().","code":""},{"path":"https://rpact-com.github.io/rpact/reference/writeDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Dataset — writeDataset","title":"Write Dataset — writeDataset","text":"Writes dataset CSV file.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/writeDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Dataset — writeDataset","text":"","code":"writeDataset(   dataset,   file,   ...,   append = FALSE,   quote = TRUE,   sep = \",\",   eol = \"\\n\",   na = \"NA\",   dec = \".\",   row.names = TRUE,   col.names = NA,   qmethod = \"double\",   fileEncoding = \"UTF-8\" )"},{"path":"https://rpact-com.github.io/rpact/reference/writeDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Dataset — writeDataset","text":"dataset dataset. file target CSV file. ... arguments passed write.table. append Logical. relevant file character string. TRUE, output appended file. FALSE, existing file name destroyed. quote set quoting characters. disable quoting altogether, use quote = \"\". See scan behavior quotes embedded quotes. Quoting considered columns read character, unless colClasses specified. sep field separator character. Values line file separated character. sep = \",\" (default writeDataset) separator comma. eol character(s) print end line (row). na string use missing values data. dec character used file decimal points. row.names Either logical value indicating whether row names dataset written along  dataset, character vector row names written. col.names Either logical value indicating whether column names  dataset written along  dataset, character vector column names written. See section 'CSV files' meaning col.names = NA. qmethod character string specifying deal embedded double quote characters quoting strings. Must one \"double\" (default writeDataset) \"escape\". fileEncoding Character string: non-empty declares encoding used file (connection) character data can re-encoded. See 'Encoding' section help file, 'R Data Import/Export Manual' 'Note'.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/writeDataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write Dataset — writeDataset","text":"writeDataset() wrapper function coerces dataset data frame uses write.table write CSV file.","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/writeDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Dataset — writeDataset","text":"","code":"if (FALSE) { # \\dontrun{ datasetOfRates <- getDataset(     n1 = c(11, 13, 12, 13),     n2 = c(8, 10, 9, 11),     events1 = c(10, 10, 12, 12),     events2 = c(3, 5, 5, 6) ) writeDataset(datasetOfRates, \"dataset_rates.csv\") } # }"},{"path":"https://rpact-com.github.io/rpact/reference/writeDatasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Multiple Datasets — writeDatasets","title":"Write Multiple Datasets — writeDatasets","text":"Writes list datasets CSV file.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/writeDatasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Multiple Datasets — writeDatasets","text":"","code":"writeDatasets(   datasets,   file,   ...,   append = FALSE,   quote = TRUE,   sep = \",\",   eol = \"\\n\",   na = \"NA\",   dec = \".\",   row.names = TRUE,   col.names = NA,   qmethod = \"double\",   fileEncoding = \"UTF-8\" )"},{"path":"https://rpact-com.github.io/rpact/reference/writeDatasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Multiple Datasets — writeDatasets","text":"datasets list datasets. file target CSV file. ... arguments passed write.table. append Logical. relevant file character string. TRUE, output appended file. FALSE, existing file name destroyed. quote set quoting characters. disable quoting altogether, use quote = \"\". See scan behavior quotes embedded quotes. Quoting considered columns read character, unless colClasses specified. sep field separator character. Values line file separated character. sep = \",\" (default writeDatasets) separator comma. eol character(s) print end line (row). na string use missing values data. dec character used file decimal points. row.names Either logical value indicating whether row names dataset written along  dataset, character vector row names written. col.names Either logical value indicating whether column names  dataset written along  dataset, character vector column names written. See section 'CSV files' meaning col.names = NA. qmethod character string specifying deal embedded double quote characters quoting strings. Must one \"double\" (default writeDatasets) \"escape\". fileEncoding Character string: non-empty declares encoding used file (connection) character data can re-encoded. See 'Encoding' section help file, 'R Data Import/Export Manual' 'Note'.","code":""},{"path":"https://rpact-com.github.io/rpact/reference/writeDatasets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write Multiple Datasets — writeDatasets","text":"format CSV file optimized usage readDatasets().","code":""},{"path":[]},{"path":"https://rpact-com.github.io/rpact/reference/writeDatasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Multiple Datasets — writeDatasets","text":"","code":"if (FALSE) { # \\dontrun{ d1 <- getDataset(     n1 = c(11, 13, 12, 13),     n2 = c(8, 10, 9, 11),     events1 = c(10, 10, 12, 12),     events2 = c(3, 5, 5, 6) ) d2 <- getDataset(     n1 = c(9, 13, 12, 13),     n2 = c(6, 10, 9, 11),     events1 = c(10, 10, 12, 12),     events2 = c(4, 5, 5, 6) ) datasets <- list(d1, d2) writeDatasets(datasets, \"datasets_rates.csv\") } # }"},{"path":[]},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"new-features-4-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"rpact 4.2.0","text":"functions getSimulationMultiArmMeans(), getSimulationMultiArmRates(), getSimulationMultiArmSurvival() now possible specify parameter doseLevels define dose levels linear sigmoidEmax dose-response relationship (see feature request #63) Added support unequal variances two groups getSampleSizeMeans(), getPowerMeans(), getSimulationMeans() functions, see enhancement #70 testPackage() produces comprehensive installation qualification report html pdf format (see new vignette Installation Qualification rpact) setupPackageTests() sets package tests downloading test files copying rpact installation directory saveOptions() saves current rpact options configuration file resetOptions() resets rpact options default values Argument conservative added getSampleSizeRates() function, see enhancement #39 Enable futility boundaries Boundaries p Values Scale plot plot (type = 3) using options(\"rpact.plot.show.futility..pvalue.scale\" = TRUE) argument showFutilityBounds = TRUE, see enhancement #79 Enable beta-spending Error Spending plot (type = 4) using options(\"rpact.plot.show.beta.spent\" = TRUE) argument showBetaSpent = TRUE, see enhancement #80. Furthermore, options(\"rpact.plot.show.alpha.spent\" = FALSE) argument showAlphaSpent = FALSE can used show beta-spending plot showAlphaSpent = TRUE","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"improvements-issues-and-changes-4-2-0","dir":"Changelog","previous_headings":"","what":"Improvements, issues, and changes","title":"rpact 4.2.0","text":"Issue calculation confidence intervals using conditional Dunnett test design (getDesignConditionalDunnett()) analysis tool fixed. full set unit tests rpact now stored private repository. members ‘RPACT User Group’ access tests. information, please visit: rpact.org/iq RPACT Connect Usage maxInformation improved (see enhancement #65) Line breaks output getObjectRCode() improved (see #81) testPackage(): additional warning details added test report warnings exist* Issue #61 fixed Issue #68 fixed Flexibility function getPiecewiseSurvivalTime() improved Simulation allows case #events = #patients Test coverage improved Plot subtitles improved Warning message added extreme choice informationRates, userAlphaSpending, userBetaSpending Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-410","dir":"Changelog","previous_headings":"","what":"rpact 4.1.0","title":"rpact 4.1.0","text":"CRAN release: 2024-09-27","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"new-features-4-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"rpact 4.1.0","text":"new function getSimulationCounts() can used perform power simulations clinical trials negative binomial distributed count data. function returns simulated power, stopping probabilities, conditional power, expected sample size testing mean rates negative binomial distributed event numbers two treatment groups testing situation functions getDesignGroupSequential(), getDesignInverseNormal(), getDesignFisher() now support argument directionUpper specify direction alternative one-sided testing early design phase, see enhancement #26 getSampleSizeCounts() getPowerCounts() output boundary values also treatment effect scale, see enhancement #40 fetch() obtain() functions can used extract multiple parameters rpact result object support various output formats","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"improvements-issues-and-changes-4-1-0","dir":"Changelog","previous_headings":"","what":"Improvements, issues, and changes","title":"rpact 4.1.0","text":"Usage pipe-operators improved Analysis progress messages displayed R used interactively Manual use kable() rpact result objects marked deprecated, formatting display handled automatically rpact order summary entries revised optimized Minimum version suggested package ggplot2 changed 2.2.0 3.2.0 Issues #41, #44, #46, #47 fixed analyzing two-sided test, issue calculation conditional rejection probability fixed Bug fixed: directionUpper = FALSE influence simulation testing rates one-sample situation","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-400","dir":"Changelog","previous_headings":"","what":"rpact 4.0.0","title":"rpact 4.0.0","text":"CRAN release: 2024-05-31","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"new-features-4-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"rpact 4.0.0","text":"reference classes package replaced R6 classes. change brings significant advantages, including improved performance, flexible cleaner object-oriented programming, enhanced encapsulation methods properties. transition R6 classes allows efficient memory management faster execution, making package robust scalable. Additionally, R6 classes provide intuitive user-friendly interface developers, facilitating creation maintenance complex data structures workflows Extension function getPerformanceScore() sample size recalculation rules setting binary endpoints according Bokelmann et al. (2024) getSimulationMultiArmMeans(), getSimulationMultiArmRates(), getSimulationMultiArmSurvival() functions now support enhanced selectArmsFunction argument. Previously, effectVector stage allowed arguments. Now, users can optionally utilize additional arguments powerful custom function implementations, including conditionalPower, conditionalCriticalValue, plannedSubjects/plannedEvents, allocationRatioPlanned, selectedArms, thetaH1 (means survival), stDevH1 (means), overallEffects, rates additionally: piTreatmentsH1, piControlH1, overallRates, overallRatesControl getSimulationEnrichmentMeans(), getSimulationEnrichmentRates(), getSimulationEnrichmentSurvival(). Specifically, support population selection selectPopulationsFunction argument based predictive/posterior probabilities added (see #32) fetch() obtain() functions can used extract single parameter rpact result object, useful writing pipe-operator linked commands","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"improvements-issues-and-changes-4-0-0","dir":"Changelog","previous_headings":"","what":"Improvements, issues, and changes","title":"rpact 4.0.0","text":"Issues #25, #35, #36 fixed Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-351","dir":"Changelog","previous_headings":"","what":"rpact 3.5.1","title":"rpact 3.5.1","text":"CRAN release: 2024-02-27 internal fields .parameterNames .parameterFormatFunctions removed rpact result objects favor efficient solution Issues #15, #16, #17, #19, #23 fixed Field eventsPerStage replaced cumulativeEventsPerStage Field singleEventsPerStage added Field eventsPerStage replaced singleEventsPerStage Field overallEventsPerStage replaced cumulativeEventsPerStage Field eventsPerStage replaced cumulativeEventsPerStage Field singleNumberOfEventsPerStage replaced singleEventsPerArmAndStage Field singleEventsPerStage added field singleNumberOfEventsPerStage replaced singleEventsPerSubsetAndStage Test coverage CI/CD pipeline activated assistance GitHub Actions, runs covr uploads results codecov.io Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-350","dir":"Changelog","previous_headings":"","what":"rpact 3.5.0","title":"rpact 3.5.0","text":"CRAN release: 2024-01-25","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"new-features-3-5-0","dir":"Changelog","previous_headings":"","what":"New features","title":"rpact 3.5.0","text":"new functions getSampleSizeCounts() getPowerCounts() can used perform sample size calculations assessment test characteristics clinical trials negative binomial distributed count data. possible fixed sample size group sequential designs. latter, methodology described Muetze et al. (2019) implemented. functions can also used perform blinded sample size reassessments according Friede Schmidli (2010).","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"improvements-issues-and-changes-3-5-0","dir":"Changelog","previous_headings":"","what":"Improvements, issues, and changes","title":"rpact 3.5.0","text":"Original Fortran 77 code 251 included package, see functions mvnprd, mvstud, as251Normal, as251StudentT R package mnormt dependency removed Argument theta can used plotting sample size power results Pipe operator usage improved Shiny app link changed https://rpact.shinyapps.io/cloud Several minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-340","dir":"Changelog","previous_headings":"","what":"rpact 3.4.0","title":"rpact 3.4.0","text":"CRAN release: 2023-07-03","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"new-features-3-4-0","dir":"Changelog","previous_headings":"","what":"New features","title":"rpact 3.4.0","text":"new function getPerformanceScore() calculates conditional performance score, sub-scores components according Herrmann et al. (2020) given simulation result two-stage design allocationRatioPlanned simulating multi-arm enrichment designs can vector length kMax, number stages getObjectRCode() (short: rcmd()): new arguments pipeOperator output many new output variants can specified, e.g., native R pipe operator magrittr pipe operator can used Generic function knitr::knit_print result objects implemented automatic code chunk option results = 'asis' activated","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"improvements-issues-and-changes-3-4-0","dir":"Changelog","previous_headings":"","what":"Improvements, issues, and changes","title":"rpact 3.4.0","text":"Improved speed numerical computation group sequential designs test characteristics Multivariate t distribution restricted df <= 500 erroneous results mnormt package otherwise. df > 500, multivariate normal distribution used Performance cumulative distribution function survival function plot improved Test coverage extended improved Descriptions class fields added Renamed field omega chi class TrialDesignPlanSurvival Several minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-334","dir":"Changelog","previous_headings":"","what":"rpact 3.3.4","title":"rpact 3.3.4","text":"CRAN release: 2023-02-14 Rcpp sugar function sapply removed C++ code stop deprecated warnings r-devel-linux-x86_64-fedora-clang Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-333","dir":"Changelog","previous_headings":"","what":"rpact 3.3.3","title":"rpact 3.3.3","text":"CRAN release: 2023-02-13 allocationRatioPlanned simulating means rates two treatment groups design can vector length kMax, number stages calcSubjectsFunction can used C++ version simulating means rates calcEventsFunction added getSimulationSurvival() getPerformanceScore() added: calculates performance score simulation means results (1 2 groups; 2 stages) Performance simulation rates improved 1 2 groups (translating R C++) Performance simulation means improved 1 2 groups Two-sided O’Brien Fleming beta-spending function corrected Issue plot type 5 sample size means rates fixed Added dependency R >= 3.6.0 Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-332","dir":"Changelog","previous_headings":"","what":"rpact 3.3.2","title":"rpact 3.3.2","text":"CRAN release: 2022-11-04 Design objects can piped getDataset() enable pipe syntax analysis, e.g., getDesignGroupSequential() |> getDataset(dataMeans) |> getAnalysisResults() Performance simulation means improved 1 2 groups (translating R C++) Total test time cut half improving simulation performance enabling parallel testing SystemRequirements: C++11 added DESCRIPTION enable C++ 11 compilation R 3.x Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-331","dir":"Changelog","previous_headings":"","what":"rpact 3.3.1","title":"rpact 3.3.1","text":"CRAN release: 2022-08-24 Help pages improved Parameter betaAdjustment can also used getDesignInverseNormal() subsets removed result getWideFormat() non-enrichment datasets Summary enrichment survival simulation results improved Parameter populations getSimulationEnrichmentMeans(), getSimulationEnrichmentRates(), getSimulationEnrichmentSurvival() removed since always derived effectList Bug fixed getSimulationEnrichmentRates() calculated non-integer number subjects Futility probabilities futility bounds corrected two-sided beta-spending function approach getRawData(): resulting data.frame now contains correct stopStage lastObservationTime (formerly observationTime) deltaWT provided three decimal points typeOfDesign = “WToptimum” Generic .data.frame functions improved testthat version changed edition 3 rpact source code published GitHub bug report link changed https://github.com/rpact-com/rpact/issues Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-330","dir":"Changelog","previous_headings":"","what":"rpact 3.3.0","title":"rpact 3.3.0","text":"CRAN release: 2022-06-15","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"new-features-3-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"rpact 3.3.0","text":"Two-sided beta-spending approach binding non-binding futility bounds Delayed response utility added design specification","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"improvements-issues-and-changes-3-3-0","dir":"Changelog","previous_headings":"","what":"Improvements, issues, and changes","title":"rpact 3.3.0","text":"getSimulationMultiArmSurvival(): single stage treatment arm specific event numbers account selection procedure User defined selection function can used getSimulationEnrichmentRates() getSimulationEnrichmentSurvival() Design summary extended information getDesignCharacteristics() getSimulationSurvival(): result object now contains new parameter overallEventsPerStage, contains values previously given eventsPerStage (“cumulative” mistake); eventsPerStage contains now non-cumulative values expected Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-323","dir":"Changelog","previous_headings":"","what":"rpact 3.2.3","title":"rpact 3.2.3","text":"CRAN release: 2022-03-02 Performance group sequential Fisher’s combination test designs improved ‘register’ storage class specifier removed C++ sources Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-322","dir":"Changelog","previous_headings":"","what":"rpact 3.2.2","title":"rpact 3.2.2","text":"CRAN release: 2022-02-28 Performance group sequential Fisher’s combination test designs improved (translating R C++) Numerical issue analysis time calculation survival design specific cases resolved internally used minimum quantile function value changed stats::qnorm(1e-323) stats::qnorm(1e-100) Unit tests extended Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-321","dir":"Changelog","previous_headings":"","what":"rpact 3.2.1","title":"rpact 3.2.1","text":"CRAN release: 2022-01-06 C++ warning “using integer absolute value function ‘abs’ argument floating point type” r-devel-linux-x86_64-debian-clang removed getDataset: support emmeans result objects input improved getAnalysisResults(): issue zero values argument ‘userAlphaSpending’ fixed Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-320","dir":"Changelog","previous_headings":"","what":"rpact 3.2.0","title":"rpact 3.2.0","text":"CRAN release: 2021-12-16","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"new-features-3-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"rpact 3.2.0","text":"Simulation tools enrichment design testing means, rates, hazard ratios: function getSimulationEnrichmentMeans(), getSimulationEnrichmentRates(), getSimulationEnrichmentSurvival() available simulation enrichment designs; note novel implementation, hence experimental getDesignGroupSequential() / getDesignInverseNormal(): new typeOfDesign = “noEarlyEfficacy” added","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"improvements-issues-and-changes-3-2-0","dir":"Changelog","previous_headings":"","what":"Improvements, issues, and changes","title":"rpact 3.2.0","text":"getSimulationSurvival(): bug fixed accruallIntensity = 0 accrual intervals observed conditional power, standardized theta truncated 0 getSimulationMultiArmMeans(), getSimulationMultiArmRates(), getSimulationMultiArmSurvival() Conditional power calculation analysis rates takes account differently null value condErrorRate Function testPackage(): problem downloading full set unit tests Debian/Linux fixed Generic function kable() improved: optional knitr::kable arguments enabled, e.g., format print summary output, “overall” renamed “cumulative” means, stDevs, rate calculated stages rather stage-wise getDataset: support emmeans result objects input improved Numerical accuracy qnorm() calculations improved Analysis enrichment results now support generic function .data.frame() Naming stage results parameters print output improved New example data added: “rawDataTwoArmNormal” Issue summary fixed: earlyStop rejectPerStage longer displayed Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-311","dir":"Changelog","previous_headings":"","what":"rpact 3.1.1","title":"rpact 3.1.1","text":"CRAN release: 2021-08-27 Performance two-sided Pampallona & Tsiatis design improved 12 example datasets added Sample sizes plots now format print output; format can changed using setOutputFormat() getDataset supports emmeans result objects input Print output simulation results improved Added dependency R >= 3.5.0 serialized objects serialize/load version 3 read older versions R Plot label interface configuration via rpact Shiny app implemented Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-310","dir":"Changelog","previous_headings":"","what":"rpact 3.1.0","title":"rpact 3.1.0","text":"CRAN release: 2021-06-10","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"new-features-3-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"rpact 3.1.0","text":"Analysis tools enrichment design testing means, rates, hazard ratios: function getAnalysisResults() generalized enrichment designs; function getDataset() generalized entering stratified data; manual extended enrichment designs Automatic boundary recalculations trial analysis alpha spending approach, including - -running: setup via optional parameters ‘maxInformation’ ‘informationEpsilon’ function getAnalysisResults() new function getObjectRCode() (short: rcmd()) returns original R command produced rpact result object, including dependencies getWideFormat() getLongFormat() return dataset object wide format (unstacked) long format (narrow, stacked) Generic function kable() returns output rpact result object formatted Markdown. Generic function t() returns transpose rpact result object","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"improvements-issues-and-changes-3-1-0","dir":"Changelog","previous_headings":"","what":"Improvements, issues, and changes","title":"rpact 3.1.0","text":"New argument ‘plotSettings’ added plot functions Summary design, simulation, analysis unified extended Issue getDesignFisher() fixed: getDesignFisher(method = \"noInteraction\", kMax = 3) getDesignFisher(method = \"noInteraction\") produced different results ‘normalApproximation’ default value changed TRUE multi-arm analysis rates Repeated p-values: search algorithm, upper bound significance level corrected considering binding futility bounds testPackage(): default call now running small subset available unit tests; new argument ‘connection’ owners rpact validation documentation can enter ‘token’ ‘secret’ get full access unit tests Scaling grid plots improved Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-304","dir":"Changelog","previous_headings":"","what":"rpact 3.0.4","title":"rpact 3.0.4","text":"CRAN release: 2021-03-02 Beta-spending function approach binding futility bounds Pampallona & Tsiatis design binding non-binding futility bounds Argument ‘accrualIntensityType’ added getSampleSizeSurvival(), getSimulationSurvival(), getNumberOfSubjects(), getEventProbabilities() Specification Weibull survival times possible definition hazard rates medians simulation tool Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-303","dir":"Changelog","previous_headings":"","what":"rpact 3.0.3","title":"rpact 3.0.3","text":"CRAN release: 2020-12-01 New utility functions getParameterCaption() getParameterName() implemented Design parameters added simulation print output Generic function .matrix() improved several result objects Issue getAvailablePlotTypes() sample size power results fixed Issue getDesignFisher(kMax = 1) getSimulationMultiArm...() fixed getSimulationMultiArmSurvival(): correlation log-rank statistics revised improved getSimulationMultiArmMeans(): name first effectMeasure option “effectDifference” changed “effectEstimate” getSimulation[MultiArm][Means/Rates/Survival](): argument ‘showStatistics’ now works correctly consistently FALSE default multi-arm non-multi-arm getSimulation[MultiArm]Survival(): generic function summary() improved getAnalysisResults(): generic function summary() improved getAccrualTime(): improved new argument ‘accrualIntensityType’ added Header text added design summaries getSampleSizeSurvival(): field ‘studyDurationH1’ result object replaced ‘studyDuration’, .e., ‘studyDurationH1’ deprecated removed future versions Minor changes inline help manual Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-302","dir":"Changelog","previous_headings":"","what":"rpact 3.0.2","title":"rpact 3.0.2","text":"CRAN release: 2020-11-09 getSimulationMultiArmSurvival(): plannedEvents redefined overall events treatment arms getStageResults(): element overallPooledStDevs added; print output improved Unit tests improved: test coverage references functional specification optimized plot type 13 getSampleSizeSurvival() user defined lambdas different lengths: issue fixed Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-301","dir":"Changelog","previous_headings":"","what":"rpact 3.0.1","title":"rpact 3.0.1","text":"CRAN release: 2020-09-25 Vignette “rpact: Getting Started” included package New summary output option “rpact.summary.width” added Generic function summary() improved several result objects Result output function testPackage() improved getSimulationMultiArm[Means/Rates/Survival](): stage index corrected user defined calcSubjectsFunction calcEventsFunction getSimulationMultiArmRates(): adjustment identical simulated rates account ties getSimulationMultiArmSurvival(): corrected correlation test statistics Output formatting improved Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-300","dir":"Changelog","previous_headings":"","what":"rpact 3.0.0","title":"rpact 3.0.0","text":"CRAN release: 2020-09-07","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"new-features-3-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"rpact 3.0.0","text":"Simulation tools multi-arm design testing means, rates, hazard ratios Analysis tools multi-arm design testing means, rates, hazard ratios getSimulationRates(): exact versions testing rate (one-sample case) equality rates (two-sample case) getDataset: multi-arm datasets means, rates, survival data Analysis fixed designs Summary analysis simulation result objects newly implemented Summary rpact result objects substantially improved enhanced getEventProbabilities(): plot result object getNumberOfSubjects(): plot result object Visual comparison two designs: plot(design1, design2) Functions setOutputFormat getOutputFormat implemented: definition user defined output formats getSimulationMeans(): thetaH1 stDevH1 can specified assessment sample size recalculation (replaces thetaStandardized) getSimulationSurvival(): separate p-values added aggregated simulation data Fisher designs getSimulationMeans(), getSimulationRates(): Cumulated number subjects integrated getData object getSimulation[MultiArm][Means/Rates/Survival](): new logical argument ‘showStatistics’ added Example datasets (csv files) added package plot type “”: plot available plots object one step using plot(x, type = \"\") plot type improved: ‘type’ now can vector, e.g., plot(x, type = c(1, 3)) plot(x, grid = 1): new plot argument ‘grid’ enables plotting 2 plots one graphic","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"improvements-issues-and-changes-3-0-0","dir":"Changelog","previous_headings":"","what":"Improvements, issues, and changes","title":"rpact 3.0.0","text":"getAnalysisResults(): list output implemented analogous output rpact objects getAnalysisResults(): following stage result arguments removed result object redundant: effectSizes, testStatistics, pValues. Please use ‘.stageResults’ object access , e.g., results$.stageResults$effectSizes getAnalysisResults(): following design arguments removed result object redundant: stages, informationRates, criticalValues, futilityBounds, alphaSpent, stageLevels. Please use ‘.design’ object access , e.g., results$.design$informationRates Optional argument ‘stage’ removed functions getConditionalPower, getConditionalRejectionProbabilities, getFinalPValue, getRepeatedPValues, getTestActions Function testPackage improved, e.g., results displayed now screen Help system renewed approved, e.g., help corresponding generic functions (e.g., plot) linked applicable Function getPiecewiseSurvivalTime improved: pi1 pi2 calculated longer lambda- median-based definitions; eventTime required pi-based definitions plot(x, showSource = TRUE) improved rpact result objects x Performance plotting analysis results Fisher designs improved getSimulationRates(): issue futility stopping Fisher’s combination test fixed getSimulationSurvival(): issue expected number events fixed getSimulationSurvival(): eventsNotAchieved > 0, rejection/futility rate analysis time estimated valid simulation runs getSimulationSurvival(): output improved lambda1/median1/hazardRatio length > 1 getSampleSizeSurvival(): calculation maximum number subjects given provided argument ‘followUpTime’ improved getPiecewiseSurvivalTime(): delayed response via list-based piecewiseSurvivalTime definition enabled getAccrualTime() / getSimulationSurvival(): issue calculation absolute accrual intensity given relative accrual intensity fixed getRawData(): issue multiple pi1 solved Implementation generic function ‘names’ improved Test coverage improved: lots new unit tests added License information DESCRIPTION file corrected: changed GPL-3 LGPL-3 Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-206","dir":"Changelog","previous_headings":"","what":"rpact 2.0.6","title":"rpact 2.0.6","text":"CRAN release: 2019-12-12 Boundaries effect scale testing means now accounts unknown variance case getAnalysisSurvival(): calculation stage wise results getStageResults getStageResults(): calculation ‘effectSizes’ survival data thetaH0 != 1 corrected getDataset() survival data: issue internal storage log ranks fixed Sample size plot: issue kMax = 1 fixed getSampleSizeSurvival() piecewise survival time: issue calculation ‘maxNumberOfSubjects’ given ‘followUpTime’ fixed Internal Shiny app interface improved Minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-205","dir":"Changelog","previous_headings":"","what":"rpact 2.0.5","title":"rpact 2.0.5","text":"CRAN release: 2019-11-08 Assumed median survival time: get[SampleSize/Power/Simulation]Survival now support direct input arguments ‘median1’ ‘median2’ Output generic function summary() improved Plot type 5 getPower[…] getSimulation[…] objects improved Output getSampleSizeSurvival() given maxNumberOfSubjects improved Output get[SampleSize/Power]Survival() Kappa != 1 improved Assert function minNumberOfSubjectsPerStage corrected undefined conditionalPower Two-sided boundaries effect scale survival design improved Error summary() getDesign[...]() fixed minor improvements","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-204","dir":"Changelog","previous_headings":"","what":"rpact 2.0.4","title":"rpact 2.0.4","text":"CRAN release: 2019-10-02 Incorrect output function summary() fixed getSampleSize[...]() getPower[...]() .data.frame: default value argument ‘niceColumnNamesEnabled’ changed TRUE FALSE","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-203","dir":"Changelog","previous_headings":"","what":"rpact 2.0.3","title":"rpact 2.0.3","text":"CRAN release: 2019-09-20","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"new-features-2-0-3","dir":"Changelog","previous_headings":"","what":"New features","title":"rpact 2.0.3","text":"Plot function Fisher design implemented Generic function summary() implemented getDesign[...](), getSampleSize[...](), getPower[...](), getSimulation[...]() results: simple boundary summary displayed","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"improvements-issues-and-changes-2-0-3","dir":"Changelog","previous_headings":"","what":"Improvements, issues, and changes","title":"rpact 2.0.3","text":"Generic function .data.frame improved getDesign[...](), getSampleSize[...](), getPower[...](), getSimulation[...]() results Output getStageResults() improved Improvements Shiny app compatibility better Shiny app performance Repeated p-values longer calculated typeOfDesign = “WToptimum” Piecewise survival time improved numeric definition: median pi calculated displayed longer Plot: legend title tick mark positioning improved; optional arguments xlim ylim implemented Sample size/power: usage argument ‘twoSidedPower’ optimized Performance function rpwexp/getPiecewiseExponentialRandomNumbers improved (special thanks Marcel Wolbers example code) group sequential designs warning displayed information rates design according data information Format output standard deviation optimized","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-202","dir":"Changelog","previous_headings":"","what":"rpact 2.0.2","title":"rpact 2.0.2","text":"CRAN release: 2019-07-24 Minor corrections inline help Labeling lower upper critical values (effect scale) reverted Simulation Fisher’s combination test corrected Parameter minNumberOfAdditionalEventsPerStage renamed minNumberOfEventsPerStage Parameter maxNumberOfAdditionalEventsPerStage renamed maxNumberOfEventsPerStage Parameter minNumberOfAdditionalSubjectsPerStage renamed minNumberOfSubjectsPerStage Parameter maxNumberOfAdditionalSubjectsPerStage renamed maxNumberOfSubjectsPerStage Output function getAccrualTime() improved Validation arguments maxNumberOfIterations, allocation1, allocation2 added: check positive integer Function getSampleSizeSurvival() improved: numeric search accrualTime followUpTime given Default value improved analysis tools: effect specified conditional power calculation, observed effect selected Fixed: function getDataset produced error one log-rank value one event defined Number subjects per treatment arm provided output simulation survival allocation ratio != 1 Function getSimulationSurvival improved: first value minNumberOfEventsPerStage maxNumberOfEventsPerStage must NA equal first value plannedSubjects","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-201","dir":"Changelog","previous_headings":"","what":"rpact 2.0.1","title":"rpact 2.0.1","text":"CRAN release: 2019-05-29 Function base::isFALSE replaced guarantee R 3.4.x compatibility C++ compiler warning r-devel-linux-x86_64-debian-clang system removed C++ compiler error r-patched-solaris-x86 system fixed","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-200","dir":"Changelog","previous_headings":"","what":"rpact 2.0.0","title":"rpact 2.0.0","text":"CRAN release: 2019-05-28","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"new-features-2-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"rpact 2.0.0","text":"Power calculation given adapted sample size means, rates survival data Sample size power calculation survival trials piecewise accrual time intensity Sample size power calculation survival trials exponential survival time, piecewise exponential survival time survival times follow Weibull distribution Simulation tool survival trials; simulator fast implemented C++. Adaptive event number recalculations based conditional power can assessed Simulation tool designs continuous binary endpoints. Adaptive sample size recalculations based conditional power can assessed Comprehensive unified tool performing sample size calculation fixed sample size design Enhanced plot functionalities","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"improvements-issues-and-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Improvements, issues, and changes","title":"rpact 2.0.0","text":"Fisher design, analysis means rates, conditional rejection probabilities (CRP): calculation issue fixed stage > 2 Call getSampleSize[Means/Rates/Survival] without design argument implemented set.seed() calls ‘kind’ ‘normal.kind’ specified follows: kind = “Mersenne-Twister”, normal.kind = “Inversion” Minor code optimizations, e.g. ‘return()’ replaced ‘return(invisible())’ reasonable Bug readDatasets() fixed: variable names ‘group’ ‘groups’ now accepted “Overall reject per stage” “Overall futility per stage” renamed “Overall reject” “Overall futility”, respectively (also variable names) Labels “events..” “..patients..” consistently changed “# events..” “# patients…”, respectively Output format ‘allocationRatioPlanned’ specified Method ‘show’ class ‘ParameterSet’ expanded: R Markdown output features implemented getSampleSizeSurvival(): argument ‘maxNumberOfPatients’ renamed ‘maxNumberOfSubjects’ Result output, inline help documentation: word ‘patient’ replaced ‘subject’ Variables ‘numberOfSubjectsGroup1’ ‘numberOfSubjectsGroup2’ renamed ‘numberOfSubjects1’ ‘numberOfSubjects1’ Final p-values two-sided test (group sequential, inverse normal, Fisher combination test) available Upper lower boundaries effect scale testing rates two samples","code":""},{"path":"https://rpact-com.github.io/rpact/news/index.html","id":"rpact-100","dir":"Changelog","previous_headings":"","what":"rpact 1.0.0","title":"rpact 1.0.0","text":"CRAN release: 2018-10-30 First release rpact","code":""}]
